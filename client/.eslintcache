[{"/home/marco/Documents/project_react/template-carros/client/src/index.js":"1","/home/marco/Documents/project_react/template-carros/client/src/App.js":"2","/home/marco/Documents/project_react/template-carros/client/src/components/menu/menu.jsx":"3","/home/marco/Documents/project_react/template-carros/client/src/components/carroselprincipal/carrosselPrincipal.jsx":"4","/home/marco/Documents/project_react/template-carros/client/src/components/fetchBackEnd/api.js":"5","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/formulario.jsx":"6","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/opcionais.jsx":"7","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/modals/modalExluirAnuncio.js":"8","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/functions/funtionCriarAnuncio.js":"9","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/functions/functionRemoverAnuncio.js":"10","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painel/painelAdministrativo.jsx":"11","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/listaAnuncios.jsx":"12","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/modalExibirAnuncio.js":"13","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/dadosSite/dadosSite.jsx":"14","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/dadosSite/modalImagensSlide.js":"15"},{"size":1250,"mtime":1612552254756,"results":"16","hashOfConfig":"17"},{"size":285,"mtime":1611109079792,"results":"18","hashOfConfig":"17"},{"size":2902,"mtime":1611172608551,"results":"19","hashOfConfig":"17"},{"size":1977,"mtime":1613396256660,"results":"20","hashOfConfig":"17"},{"size":3258,"mtime":1613384341940,"results":"21","hashOfConfig":"17"},{"size":42274,"mtime":1613382857295,"results":"22","hashOfConfig":"17"},{"size":16819,"mtime":1612914261300,"results":"23","hashOfConfig":"17"},{"size":3588,"mtime":1613321347465,"results":"24","hashOfConfig":"17"},{"size":2565,"mtime":1612481858134,"results":"25","hashOfConfig":"17"},{"size":353,"mtime":1612461614329,"results":"26","hashOfConfig":"17"},{"size":8757,"mtime":1613277037571,"results":"27","hashOfConfig":"17"},{"size":8219,"mtime":1613273973050,"results":"28","hashOfConfig":"17"},{"size":2009,"mtime":1612915148208,"results":"29","hashOfConfig":"17"},{"size":29961,"mtime":1613277134414,"results":"30","hashOfConfig":"17"},{"size":7716,"mtime":1613333871285,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"lcbjv5",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/home/marco/Documents/project_react/template-carros/client/src/index.js",[],["69","70"],"/home/marco/Documents/project_react/template-carros/client/src/App.js",[],"/home/marco/Documents/project_react/template-carros/client/src/components/menu/menu.jsx",[],"/home/marco/Documents/project_react/template-carros/client/src/components/carroselprincipal/carrosselPrincipal.jsx",["71","72","73","74","75","76"],"/home/marco/Documents/project_react/template-carros/client/src/components/fetchBackEnd/api.js",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/formulario.jsx",["77","78","79","80","81"],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/opcionais.jsx",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/modals/modalExluirAnuncio.js",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/functions/funtionCriarAnuncio.js",["82"],"import FormData from 'form-data' //class que permite enviar imagens para o backend\nimport BuscaBD from \"../../../fetchBackEnd/api\" //classe axios\n\nasync function CriaAnuncio(event, formulario, formularioOpcionais) {//fazupload imagens e retornar o nome e caminho de cada imagem no node\n    event.preventDefault()\n    const classBuscaBD = new BuscaBD()// classe da Api onde está conf  o Axios\n    const dadosImagens = new FormData()//FormData classe que permite o multer identificar as imagens\n    for (var i = 0; i < formulario.imagensPath.length; i++) {\n        dadosImagens.append(\"files\", formulario.imagensPath[i])\n    }\n    //para enviar imagens tem q ser pelo FormData\n    //primeiro coloca eles numa array com o loop for. Necessário quando é mais de uma imagem\n\n    const retornaImagenslLocationNodeMulter = await classBuscaBD.CadastraImagemMulter(dadosImagens)\n    //faz o upload das imagens e o node vai retornar as imagens recebidas\n    console.log(retornaImagenslLocationNodeMulter)\n    let imagensPath = []\n    //faz um map na array nos nomes das imagens retornadas do Node\n    retornaImagenslLocationNodeMulter.data.map((dados) => {\n        imagensPath.push(dados.filename)//armezeneo nome das imagens em array\n    })\n    const GuardaDados = await ArmazenaDadosBD(imagensPath, formulario, formularioOpcionais) //chama a func armazena dados enviado o nome das imagens recebidas em array\n    console.log(GuardaDados)\n    window.location.href = (\"#inicio\")\n    return GuardaDados\n    // props.mensagemDeRetorno(GuardaDados.data)\n    //retorna mensagem de sucesso ou não\n\n}\n\n//com os nomes das imagens no node, reuni todos os dados do carro e junta com o nome das imagens\nasync function ArmazenaDadosBD(recebeLocationImagens, formulario, formularioOpcionais) {\n    const classBuscaBD = new BuscaBD()\n    var imagensLocation = JSON.stringify(recebeLocationImagens);//transforma a array de localização das imagens em uma array String, para poder ser gravado em um único campo no BD\n    var reuniDados = formulario\n    reuniDados = { ...reuniDados, valor: reuniDados.valor.slice(3, -3) } //3 RETIRA R$  do incio e o -3 retira ,00 do final da string\n    reuniDados = { ...reuniDados, imagensPath: imagensLocation } //add os nomes da imagem no obj reunidados, que é o formulario\n    var reunidadosFinal = Object.assign(reuniDados, formularioOpcionais) // Object.assign torna dois objs em um só\n    console.log(reuniDados)\n    const EnviaDadosBD = await classBuscaBD.CadastraDadosBD(reunidadosFinal)\n    return EnviaDadosBD\n}\n\nexport default CriaAnuncio","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/functions/functionRemoverAnuncio.js",["83"],"import BuscaBD from \"../../../fetchBackEnd/api\"\n\nasync function RemoverAnuncio(idPesquisa, imagensStorage) {\n\n    const classBuscaBD = new BuscaBD()\n    const deletaImagem = await classBuscaBD.DeletaImagem(imagensStorage)\n    const deletaDadosBD = await classBuscaBD.DeletaAnuncioBD(idPesquisa)\n    return deletaDadosBD\n}\n\n\nexport default RemoverAnuncio","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painel/painelAdministrativo.jsx",["84","85"],"import { React, useState } from 'react';\nimport \"./painelAdministrativo.css\"\nimport Formulario from \"../formulario/formulario\" //FORMULARIO\nimport ListarAnuncios from \"../listaAnuncios/listaAnuncios\"\nimport DadosSite from \"../dadosSite/dadosSite\"\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport SendIcon from '@material-ui/icons/Send';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\n\nexport default function Paineladministrativo() {\n\n    const [componentesAdministrativos, setComponentesAdministrativos] = useState({\n\n        criarAnuncio: false,\n        alterarAnuncio: false,\n        deletarAnuncio: false,\n        listaAnuncios: false,\n        dadosSite: false,\n        mensagemRetorno: false\n    })\n\n    const [mensagemDeRetorno, setMensagemDeRetorno] = useState(false)\n    //recebe mensagem de sucesso ou não dos componentes\n\n    const classes = useStyles();\n\n    function SelecionaFormulario(dadosBotao, recebe) {\n        if (recebe === \"criarAnuncio\") {\n\n            setComponentesAdministrativos(prevState => {\n                return {\n                    ...prevState, criarAnuncio: true, alterarAnuncio: false,\n                    deletarAnuncio: false, mensagemRetorno: false, listaAnuncios: false,\n                    dadosSite: false\n                }\n            })\n        }\n        if (recebe === \"alterarAnuncio\") {\n            setComponentesAdministrativos(prevState => {\n                return {\n                    ...prevState, criarAnuncio: false, alterarAnuncio: true,\n                    deletarAnuncio: false, mensagemRetorno: false, listaAnuncios: false,\n                    dadosSite: false\n                }\n            })\n\n\n        }\n        if (recebe === \"deletarAnuncio\") {\n            setComponentesAdministrativos(prevState => {\n                return {\n                    ...prevState, criarAnuncio: false, alterarAnuncio: false,\n                    deletarAnuncio: true, mensagemRetorno: false, listaAnuncios: false,\n                    dadosSite: false\n                }\n            })\n        }\n        if (recebe === \"listarAnuncios\") {\n            setComponentesAdministrativos(prevState => {\n                return {\n                    ...prevState, criarAnuncio: false, alterarAnuncio: false,\n                    deletarAnuncio: false, mensagemRetorno: false, listaAnuncios: true,\n                    dadosSite: false\n                }\n            })\n        }\n        if (recebe === \"dadosSite\") {\n            setComponentesAdministrativos(prevState => {\n                return {\n                    ...prevState, criarAnuncio: false, alterarAnuncio: false,\n                    deletarAnuncio: false, mensagemRetorno: false, listaAnuncios: false,\n                    dadosSite: true\n                }\n            })\n        }\n    }\n\n    function MensagemDeRetorno(mensagem) {\n\n        //atribui a mensagem de retorno no state\n        setComponentesAdministrativos(prevState => {\n            return { ...prevState, mensagemRetorno: mensagem }\n        })\n\n        //após 15 segundos retira a mensagem da tela\n        setTimeout(() => {\n            console.log(\"Timeout \")\n            setComponentesAdministrativos(prevState => {\n                return { ...prevState, mensagemRetorno: false }\n            })\n        }, 15000)\n    }\n\n\n    return (\n        <>\n            <article className=\"paineladministrativo-article\">\n\n                <div className=\"paineladministrativo-div\">\n                    <h2>Bem vindo ao PAINEL ADMINISTRATIVO DE OFERTAS</h2>\n                </div>\n                <div className=\"paineladministrativo-div-mensagem\" id=\"inicio\" style={{ display: componentesAdministrativos.mensagemRetorno ? \"flex\" : \"none\" }}>{componentesAdministrativos.mensagemRetorno}</div>\n                {/* Se mensagemDeRetorno houver dados flex, senão none */}\n\n                <article className=\"paineladministrativo-article\">\n\n                    <h4>SELECIONE A OPÇÃO DESEJADA:</h4>\n\n\n                    <div className=\"paineladministrativo-article-div-button\">\n                        <Button\n                            onClick={(dadosBotao, envia = \"criarAnuncio\") => { SelecionaFormulario(dadosBotao, envia) }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<SendIcon />}\n                        >\n                            CRIAR ANÚNCIO\n                    </Button>\n\n                        <Button\n                            onClick={(dadosBotao, envia = \"alterarAnuncio\") => { SelecionaFormulario(dadosBotao, envia) }}\n                            variant=\"contained\"\n                            color=\"default\"\n                            className={classes.button}\n                            startIcon={<CloudUploadIcon />}\n                        >\n                            ALTERAR ANÚNCIO\n                    </Button>\n\n                        <Button\n                            onClick={(dadosBotao, envia = \"deletarAnuncio\") => { SelecionaFormulario(dadosBotao, envia) }}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.button}\n                            startIcon={<DeleteIcon />}\n                        >\n                            DELETAR ANÚNCIO\n                    </Button>\n                        <Button\n                            style={{ backgroundColor: \"rgb(241, 243, 103)\" }}\n                            onClick={(dadosBotao, envia = \"listarAnuncios\") => { SelecionaFormulario(dadosBotao, envia) }}\n                            variant=\"contained\"\n                            className={classes.button}\n                            startIcon={<FormatListNumberedIcon style={{ color: \"black\" }} />}\n                        >\n                            TODOS ANÚNCIOS\n                    </Button>\n                        <Button\n                            style={{ backgroundColor: \"ORANGE\" }}\n                            onClick={(dadosBotao, envia = \"dadosSite\") => { SelecionaFormulario(dadosBotao, envia) }}\n                            variant=\"contained\"\n                            className={classes.button}\n                            startIcon={<SettingsApplicationsIcon style={{ color: \"black\" }} />}\n                        >\n                            DADOS SITE\n                    </Button>\n                    </div>\n                </article>\n\n                <div className=\"seletorformulario\">\n\n                    {componentesAdministrativos.criarAnuncio &&\n                        <>\n                            <h2>PUBLICADOR DE ANÚNCIOS</h2>\n                            <Formulario tipoFormulario=\"criarAnuncio\" mensagemDeRetorno={MensagemDeRetorno} />\n                        </>\n                    }\n                </div>\n                <div className=\"seletorformulario\">\n\n                    {componentesAdministrativos.alterarAnuncio &&\n                        <>\n                            <h2>EDIÇÃO DE ANÚNCIOS</h2>\n\n                            <Formulario tipoFormulario=\"alterarAnuncio\" mensagemDeRetorno={MensagemDeRetorno} />\n                        </>\n                    }\n                </div>\n                <div className=\"seletorformulario\">\n\n                    {componentesAdministrativos.deletarAnuncio &&\n                        <>\n                            <h2>REMOVER ANÚNCIOS</h2>\n                            <Formulario tipoFormulario=\"deletarAnuncio\" mensagemDeRetorno={MensagemDeRetorno} />\n                        </>\n                    }\n                </div>\n                <div className=\"seletorformulario\">\n\n                    {componentesAdministrativos.listaAnuncios &&\n                        <>\n                            <h2>TODOS ANÚNCIOS</h2>\n                            <ListarAnuncios />\n                        </>\n                    }\n                </div>\n                <div className=\"seletorformulario\">\n\n                    {componentesAdministrativos.dadosSite &&\n                        <>\n                            <h2>DADOS SITE</h2>\n                            <DadosSite mensagemDeRetorno={MensagemDeRetorno} />\n                        </>\n                    }\n                </div>\n\n            </article>\n\n        </>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/listaAnuncios.jsx",["86","87"],"import { React, useEffect, useState } from 'react';\n\nimport \"./listaAnuncios.css\"\n\nimport BuscaBD from \"../../fetchBackEnd/api\"\nimport SimpleModal from \"./modalExibirAnuncio\"\n\n\nexport default function ListarAnuncios() {\n\n    const [dadosListaAnuncio, setDadosListaAnuncio] = useState({\n        todasPaginas: false,\n        paginacao: 0,\n        paginaAvanca: 25,\n        paginaRetorna: 0,\n        paginaAtual: false,\n        paginaFinal: false\n\n    })\n\n    useEffect(async () => {\n        const classBuscaBD = new BuscaBD()\n        let resultado = await classBuscaBD.ListarAnuncios()\n        setDadosListaAnuncio(prevState => {\n            let calculaTotalPaginas = 0\n            if (resultado.data.length % 25 === 0) { calculaTotalPaginas = resultado.data.length / 25 } else { calculaTotalPaginas = Math.floor(resultado.data.length / 25 + 1) }\n            //se total de resultados / 25 sobrar zero, então apenas divide, senão use o math, que não considera numero quebrado, e add mais 1 para bater com a sobra da página\n            return {\n                ...prevState, todasPaginas: resultado, paginacao: resultado.data.slice(\n                    dadosListaAnuncio.paginaRetorna, dadosListaAnuncio.paginaAvanca),\n                paginaAtual: 1,\n                paginaFinal: calculaTotalPaginas\n            }\n\n        })\n    }, [])\n\n    function FunctionPaginacao(click, direcao) {\n\n        if (direcao === \"avancar\") {\n            if (dadosListaAnuncio.paginaAvanca >= dadosListaAnuncio.todasPaginas.data.length) {\n                return\n            }\n            setDadosListaAnuncio(prevState => {\n                return {\n                    ...prevState,\n                    paginacao: dadosListaAnuncio.todasPaginas.data.slice\n                        (dadosListaAnuncio.paginaRetorna + 25, dadosListaAnuncio.paginaAvanca + 25)//recorta a array e mostra somente 25 linhas\n                    , paginaAvanca: dadosListaAnuncio.paginaAvanca + 25,\n                    paginaRetorna: dadosListaAnuncio.paginaRetorna + 25, //soma os contadores\n                    paginaAtual: dadosListaAnuncio.paginaAtual += 1,\n                }\n            })\n        }\n        if (direcao === \"retornar\") {\n            if (dadosListaAnuncio.paginaRetorna <= 0) {\n                return\n            }\n            setDadosListaAnuncio(prevState => {\n                return {\n                    ...prevState,\n                    paginacao: dadosListaAnuncio.todasPaginas.data.slice\n                        (dadosListaAnuncio.paginaRetorna - 25, dadosListaAnuncio.paginaAvanca - 25)//recorta a array e mostra somente 25 linhas\n                    , paginaAvanca: dadosListaAnuncio.paginaAvanca - 25,\n                    paginaRetorna: dadosListaAnuncio.paginaRetorna - 25,\n                    paginaAtual: dadosListaAnuncio.paginaAtual -= 1 //soma os contadores\n                }\n            })\n        }\n\n    }\n\n    return (\n        <article className=\"listaranuncio-article\">\n            {dadosListaAnuncio.todasPaginas &&\n                <h3 className=\"listaranuncio-h3\">{dadosListaAnuncio.todasPaginas.data.length} ANÚNCIOS</h3>\n            }\n            <table className=\"listaranuncio-table\">\n                <tr className=\"listaranuncio-table-tr\">\n                    <th >\n                        ID\n                </th>\n                    <th >\n                        Marca\n                </th>\n                    <th>\n                        Modelo\n                </th>\n                    <th>\n                        Valor\n                </th>\n                    <th>\n                        Ano\n                </th>\n                    <th>\n                        Motor\n                </th>\n                    <th>\n                        KM\n                </th>\n                    <th>\n                        Câmbio\n                </th>\n                    <th>\n                        Carroceria\n                </th>\n                    <th>\n                        Final Placa\n                </th>\n                    <th>\n                        Destaque\n                </th>\n                    <th>\n                        Ativado\n                </th>\n                    <th>\n                        MAIS\n                </th>\n                </tr>\n\n                {dadosListaAnuncio.todasPaginas &&\n                    dadosListaAnuncio.paginacao.map((dados, index) => {\n                        return (\n\n                            <tr className=\"listaranuncio-table-tr-tr\">\n                                <td style={{ width: \"5%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.id}\n                                </td>\n                                <td style={{ width: \"10%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.marca}\n                                </td>\n                                <td style={{ width: \"9%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.modelo}\n                                </td>\n                                <td style={{ width: \"7%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.valor}\n                                </td>\n                                <td style={{ width: \"5%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.ano}\n                                </td>\n                                <td style={{ width: \"12%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.motor}\n                                </td>\n                                <td style={{ width: \"5.5%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.kilometro}\n                                </td>\n                                <td style={{ width: \"5%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.cambio}\n                                </td>\n                                <td style={{ width: \"8%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.carroceria}\n                                </td>\n                                <td style={{ width: \"4%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.finalPlaca}\n                                </td>\n                                <td style={{ width: \"4%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.destaque ? \"SIM\" : \"NÃO\"}\n                                </td>\n                                <td style={{ width: \"4%\", backgroundColor: dados.ativado ? \" rgb(157, 213, 131)\" : \"rgb(216, 114, 103)\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.ativado ? \"ATIVADO\" : \"DESATIVADO\"}\n                                </td>\n                                <td style={{ width: \"8%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {<SimpleModal dados={dados.id} />}\n                                </td>\n                            </tr>\n                        )\n                    })\n                }\n            </table>\n\n            <div className=\"listaranuncio-paginacao\">\n                <div className=\"listaranuncio-paginacao-left\">\n                    <i class=\"fas fa-arrow-circle-left fa-2x\"\n                        onClick={(dadosClick, direcao = \"retornar\") => { FunctionPaginacao(dadosClick, direcao) }}\n                    ></i>\n                </div>\n\n                <div className=\"listaranuncio-paginacao-numeros\">\n                    {dadosListaAnuncio.paginaAtual} de {dadosListaAnuncio.paginaFinal}\n                </div>\n\n                <div className=\"listaranuncio-paginacao-rigth\">\n                    <i\n\n                        onClick={(dadosClick, direcao = \"avancar\") => { FunctionPaginacao(dadosClick, direcao) }}\n                        class=\"fas fa-arrow-circle-right fa-2x\"></i>\n                </div>\n            </div>\n        </article>\n    )\n\n}\n","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/modalExibirAnuncio.js",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/dadosSite/dadosSite.jsx",["88","89","90","91","92","93","94"],"import React, { useState, useEffect } from 'react';\nimport \"./dadosSite.css\"\nimport SimpleModal from \"./modalImagensSlide\"\n\n\nimport BuscaBD from \"../../fetchBackEnd/api\"\nimport FormData from 'form-data' //FormData classe que permite o multer identificar as imagens recebidas\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport {\n    TextField,\n    Button\n} from '@material-ui/core/';\n\n\nexport default function DadosSite(props) {\n\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            margin: theme.spacing(1),\n        },\n    }));\n    const classes = useStyles();\n\n    const [formulario, SetFormulario] = useState({\n\n        whatsapp: \"\",\n        facebook: \"\",\n        youtube: \"\",\n        instagram: \"\",\n        email: \"\",\n        lojaUm: \"\",\n        horarioFuncionamentoUm: \"\",\n        localUm: \"\",\n        cepUm: \"\",\n        telefoneUm: \"\",\n        lojaDois: \"\",\n        horarioFuncionamentoDois: \"\",\n        localDois: \"\",\n        cepDois: \"\",\n        telefoneDois: \"\",\n        lojaTres: \"\",\n        horarioFuncionamentoTres: \"\",\n        localTres: \"\",\n        cepTres: \"\",\n        telefoneTres: \"\",\n        lojaQuatro: \"\",\n        horarioFuncionamentoQuatro: \"\",\n        localQuatro: \"\",\n        cepQuatro: \"\",\n        telefoneQuatro: \"\",\n        sobreNos: \"\",\n        imagensSlide: false\n    })\n\n    const [imagensModal, setImagensModal] = useState({\n        imagensBD: [],\n        imagensAdicionadas: [],\n        imagensDeletadasBD: []\n    })\n\n    useEffect(async () => {\n\n        const classBuscaBD = new BuscaBD\n        const resultado = await classBuscaBD.GetInfoSite()\n        PolulaFormulario(resultado)\n\n    }, [])\n\n    function PolulaFormulario(resultado) {\n        SetFormulario({\n            whatsapp: resultado.data[0].whatsapp,\n            facebook: resultado.data[0].facebook,\n            youtube: resultado.data[0].youtube,\n            instagram: resultado.data[0].instagram,\n            email: resultado.data[0].email,\n            lojaUm: resultado.data[0].lojaUm,\n            horarioFuncionamentoUm: resultado.data[0].horarioFuncionamentoUm,\n            localUm: resultado.data[0].localUm,\n            cepUm: resultado.data[0].cepUm,\n            telefoneUm: resultado.data[0].telefoneUm,\n            lojaDois: resultado.data[0].lojaDois,\n            horarioFuncionamentoDois: resultado.data[0].horarioFuncionamentoDois,\n            localDois: resultado.data[0].localDois,\n            cepDois: resultado.data[0].cepDois,\n            telefoneDois: resultado.data[0].telefoneDois,\n            lojaTres: resultado.data[0].lojaTres,\n            horarioFuncionamentoTres: resultado.data[0].horarioFuncionamentoTres,\n            localTres: resultado.data[0].localTres,\n            cepTres: resultado.data[0].cepTres,\n            telefoneTres: resultado.data[0].telefoneTres,\n            lojaQuatro: resultado.data[0].lojaQuatro,\n            horarioFuncionamentoQuatro: resultado.data[0].horarioFuncionamentoQuatro,\n            localQuatro: resultado.data[0].localQuatro,\n            cepQuatro: resultado.data[0].cepQuatro,\n            telefoneQuatro: resultado.data[0].telefoneQuatro,\n            sobreNos: resultado.data[0].sobreNos,\n            imagensSlide: resultado.data[0].imagensSlide ? JSON.parse(resultado.data[0].imagensSlide) : \"\"\n        })\n    }\n\n    async function DadosModal(dados) {\n\n        setImagensModal(prevState => {\n            return {\n                ...prevState, imagensBD: dados.imagensBD,\n                imagensAdicionadas: dados.imagensAdicionadas, imagensDeletadasBD: dados.imagensDeletadasBD\n            }\n        })\n        //ja atualiza a string de imagens que vem do BD com as alteraçõe do modal\n        SetFormulario(prevState => {\n            return { ...prevState, imagensSlide: dados.imagensBD }\n        })\n\n    }\n\n\n    async function AtualizaDadosBD() {\n\n        const dadosImagens = new FormData()\n        const classBuscaBD = new BuscaBD\n        let caminhoImagensMulter = [] //armazena nomes das imagens no storage\n\n        if (imagensModal.imagensAdicionadas.length > 0) {\n            //se houver imagens a serem ADICIONADAS, adicione-as no Multer\n            for (var i = 0; i < imagensModal.imagensAdicionadas.length; i++) {\n                dadosImagens.append(\"files\", imagensModal.imagensAdicionadas[i])\n                //para enviar imagens tem q ser pelo FormData\n                //primeiro coloca eles numa array com o loop for. Necessário quando é mais de uma imagem\n            }\n            const retornaImagenslLocationNodeMulter = await classBuscaBD.CadastraImagemMulter(dadosImagens)\n            retornaImagenslLocationNodeMulter.data.map((recebe) => {\n                caminhoImagensMulter.push(recebe.filename)\n            })\n        }\n        if (imagensModal.imagensDeletadasBD.length > 0) {\n            //se houverem imagens a serem DELETADAS do MULTER\n            //obs. imagens deletadas que devem ser atualizadas no BD ja foi feita no Onclick no Modal no dados.imagensBD\n            const resultado = await classBuscaBD.DeletaImagem(imagensModal.imagensDeletadasBD)\n            //no node executa um loop executando uma por uma da array\n            AtualizaImagensBD(caminhoImagensMulter)\n        } else {\n            AtualizaImagensBD(caminhoImagensMulter)\n        }\n    }\n    async function AtualizaImagensBD(caminhoImagensMulter) {\n        const classBuscaBD = new BuscaBD\n        var tempFormulario = formulario\n\n        if (caminhoImagensMulter) {//se houver imagens que foram add no storage\n            if (tempFormulario.imagensSlide) { //se houver imagens no BD\n                var stringFy = JSON.stringify(tempFormulario.imagensSlide.concat(caminhoImagensMulter))\n                //transforma o json novamente em string. o Concat  add os valores da array \n                //caminhoImagensMulter tambem o transformando e string permitindo tornar uma única array. parecido com o Objetc-consign\n            }\n            else {\n                var stringFy = JSON.stringify(caminhoImagensMulter)\n                //se não houver dados no bd de imagens, então add as imagens do upload\n            }\n\n\n        } else {\n            stringFy = JSON.stringify(tempFormulario.imagensSlide) //se o cliente não solicitou add imagens\n            //Só transforma o json novamente em string\n        }\n\n        tempFormulario = { ...tempFormulario, imagensSlide: stringFy }\n\n\n        const resultado = await classBuscaBD.GravaInfoSite(tempFormulario)\n        window.location.href = (\"#inicio\")\n        props.mensagemDeRetorno(resultado.data)\n    }\n\n    return (\n\n        <article className=\"dadossite-article\">\n            <h3>{imagensModal.mensagemGravacao}</h3>\n            <div className=\"dadossite-article-div\">\n\n                <form className=\"dadossite-article-div-form\">\n\n                    <h4 className=\"dadossite-article-div-form-h4\"> REDES SOCIAIS / EMAIL</h4>\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, whatsapp: envia.target.value }\n                            })\n                        }}\n                        value={formulario.whatsapp}\n                        id=\"whatsapp\"\n                        label=\"WHATSAPP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, facebook: envia.target.value }\n                            })\n                        }}\n                        value={formulario.facebook}\n                        id=\"facebook\"\n                        label=\"FACEBOOK\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, youtube: envia.target.value }\n                            })\n                        }}\n                        value={formulario.youtube}\n                        id=\"youtube\"\n                        label=\"YOUTUBE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, instagram: envia.target.value }\n                            })\n                        }}\n                        value={formulario.instagram}\n                        id=\"instagram\"\n                        label=\"INSTAGRAM\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, email: envia.target.value }\n                            })\n                        }}\n                        value={formulario.email}\n                        id=\"email\"\n                        label=\"E-MAIL\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n                    <h4 className=\"dadossite-article-div-form-h4\"> CONTATO LOJA 1 </h4>\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, lojaUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.lojaUm}\n                        id=\"loja\"\n                        label=\"LOJA 1\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '27%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, horarioFuncionamentoUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.horarioFuncionamentoUm}\n                        id=\"horarioFuncionamento\"\n                        label=\"HORÁRIO FUNCIONAMENTO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.horarioFuncionamentoUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, localUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.localUm}\n                        id=\"local\"\n                        label=\"LOCAL\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.localUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, cepUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.cepUm}\n                        id=\"cep\"\n                        label=\"CEP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.cepUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, telefoneUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.telefoneUm}\n                        id=\"telefone\"\n                        label=\"TELEFONE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n                    <h4 className=\"dadossite-article-div-form-h4\"> CONTATO LOJA 2 </h4>\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, lojaDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.lojaDois}\n                        id=\"lojaDois\"\n                        label=\"LOJA 2\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '27%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, horarioFuncionamentoDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.horarioFuncionamentoDois}\n                        id=\"horarioFuncionamentoDois\"\n                        label=\"HORÁRIO FUNCIONAMENTO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, localDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.localDois}\n                        id=\"localDois\"\n                        label=\"LOCAL\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, cepDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.cepDois}\n                        id=\"cepDois\"\n                        label=\"CEP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, telefoneDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.telefoneDois}\n                        id=\"telefoneDois\"\n                        label=\"TELEFONE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n                    <h4 className=\"dadossite-article-div-form-h4\"> CONTATO LOJA 3 </h4>\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, lojaTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.lojaTres}\n                        id=\"lojaTres\"\n                        label=\"LOJA 3\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '27%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, horarioFuncionamentoTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.horarioFuncionamentoTres}\n                        id=\"horarioFuncionamentoTres\"\n                        label=\"HORÁRIO FUNCIONAMENTO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, localTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.localTres}\n                        id=\"localTres\"\n                        label=\"LOCAL\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, cepTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.cepTres}\n                        id=\"cepTres\"\n                        label=\"CEP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, telefoneTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.telefoneTres}\n                        id=\"telefoneTres\"\n                        label=\"TELEFONE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n                    <h4 className=\"dadossite-article-div-form-h4\"> CONTATO LOJA 4 </h4>\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, lojaQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.lojaQuatro}\n                        id=\"lojaQuatro\"\n                        label=\"LOJA 4\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '27%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, horarioFuncionamentoQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.horarioFuncionamentoQuatro}\n                        id=\"horarioFuncionamentoQuatro\"\n                        label=\"HORÁRIO FUNCIONAMENTO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, localQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.localQuatro}\n                        id=\"localQuatro\"\n                        label=\"LOCAL\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, cepQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.cepQuatro}\n                        id=\"cepQuatro\"\n                        label=\"CEP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, telefoneQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.telefoneQuatro}\n                        id=\"telefoneQuatro\"\n                        label=\"TELEFONE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n\n                    <h4 className=\"dadossite-article-div-form-h4\"> SOBRE</h4>\n                    <TextField style={{ marginLeft: '20px', width: '55%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, sobreNos: envia.target.value }\n                            })\n                        }}\n                        value={formulario.sobreNos}\n                        id=\"sobreNos\"\n                        label=\"SOBRE NÓS\"\n                        variant=\"outlined\"\n                        multiline\n                        rows={5}\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n\n                    <h4 className=\"dadossite-article-div-form-h4\"> SLIDE PÁGINA INICIAL </h4>\n                    <p\n                        style={{ color: \"grey\" }}\n                    >{formulario.imagensSlide.length + imagensModal.imagensAdicionadas.length < 1 ? 0 : formulario.imagensSlide.length + imagensModal.imagensAdicionadas.length} IMAGENS</p>\n\n                    <div>\n                        <SimpleModal imagensSlideBD={formulario.imagensSlide} DadosModal={DadosModal} />\n                    </div>\n\n                </form>\n            </div>\n\n            <div style={{ display: \"block\", justifyContent: \"center\", textAlign: \"center\", margin: \"30px auto\" }}>\n                <Button\n\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<CloudUploadIcon />}\n                    onClick={AtualizaDadosBD}\n                >\n                    ALTERAR INFORMAÇÕES\n            </Button>\n            </div>\n\n        </article>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/dadosSite/modalImagensSlide.js",["95","96"],"import React, { useState, useEffect, memo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 1100,\n        height: 550,\n        overflow: \"scroll\",\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\n\nexport default function SimpleModal(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    useEffect(() => {\n\n        if (props.imagensSlideBD) {\n            setImagens(prevState => {\n\n                return {\n                    ...prevState, imagensBD: props.imagensSlideBD\n                }\n            })\n        }\n\n    }, [props])\n\n    const [imagens, setImagens] = useState({\n\n        imagensBD: false,//imagens vindas do BD\n        imagensAdicionadas: false, //imagens adicionadas pelo upload\n        imagensDeletadasBD: [] // imagens deletadas do BD\n\n    })\n\n    function PreviewImagem() { //Gera preview das imagens ao adicioná-las\n\n        //por algum motivo o map não roda no imagens.imagensAdicionadas. Tive que criar uma array com loop\n        //e assim permitiu o map. Sempre que exclui alguma imagem ele atualiza o editarImagens.imagensAdicionadas\n        //onde a var \"armazena\" busca as infos\n        var armazena = []\n        var push = []\n        for (var i = 0; i < imagens.imagensAdicionadas.length; i++) {\n\n            armazena.push(imagens.imagensAdicionadas[i])\n        }\n        armazena.map((dados, index) => {\n            push.push(\n                <>\n                    <img alt={index} key={index} className=\"\" src={URL.createObjectURL(dados)} />\n                    <i alt={index} key={index} class=\"fas fa-trash fa-2x trash-preview-modal\"\n                        onClick={(recebe) => {\n\n                            //armazena somente as imagens diferentes da excluída\n                            setImagens(prevState => {\n                                return {\n                                    ...prevState, imagensAdicionadas: armazena.filter((temp => temp !== dados)),\n                                }\n                            })\n                        }}\n                    ></i>\n                </>\n            )\n        })\n\n\n        return (\n            <>\n                {push}\n            </>\n        )\n    }\n\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n            <h2 style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\", color: \"rgb(121, 121, 121)\" }}>As imagens abaixo serão apresentadas no SlideShow principal da HOME.</h2>\n\n\n            {imagens.imagensBD &&\n                imagens.imagensBD.map((recebe, index) => {\n                    return (\n                        <div class=\"formulario-div-formualario-form-imagem-div\" >\n\n                            <img alt={recebe} key={index} src={\"http://192.168.0.150:9000/static/\" + recebe}></img>\n\n                            <i class=\"fas fa-trash fa-2x trash-imagembd\"\n                                onClick={() => {//retira as imagens vindas do BD que são deletadas ao click\n                                    setImagens(prevState => {\n                                        return { ...prevState, imagensBD: imagens.imagensBD.filter(dados => dados !== recebe) }\n                                    })\n\n                                    setImagens(prevState => {//armazena a var com imagens deletadas do BD para excluir do storage\n                                        return { ...prevState, imagensDeletadasBD: [...imagens.imagensDeletadasBD, recebe] }\n                                    })\n                                }}\n\n                            ></i>\n\n                        </div>\n                    )\n                })\n            }\n            <div className=\"modalImagensSlide-previewUpload-div\">\n                {imagens.imagensAdicionadas &&\n                    <PreviewImagem />\n                }\n            </div>\n\n            <div className={classes.root}>\n                <input\n                    accept=\"image/*\"\n                    className={classes.input}\n                    id=\"contained-button-file\"\n                    multiple\n                    type=\"file\"\n                    onChange={(imagensUpload) => {\n                        if (imagens.imagensBD.length + imagensUpload.target.files.length > 7) {\n                            alert(\"Adicione no máximo 7 imagens\")\n                            return\n                        }\n                        setImagens(prevState => {\n                            //adiciona as imagens do upload\n                            return { ...prevState, imagensAdicionadas: imagensUpload.target.files }\n                        })\n                    }}\n                />\n                <label htmlFor=\"contained-button-file\">\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<AddAPhotoIcon />}\n                        style={{ left: \"23%\", top: \"5%\" }}\n                    >\n                        Upload\n                    </Button>\n                </label>\n\n                <Button\n                    style={{ left: \"23%\", top: \"5%\", backgroundColor: \"#52af52\", color: \"black\" }}\n                    startIcon={<SaveIcon />}\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={() => {\n                        props.DadosModal(imagens)\n                        handleClose()\n                    }\n\n                    }\n\n\n\n                >SALVAR ALTERAÇÕES\n            </Button>\n                <Button\n                    style={{ left: \"23%\", top: \"5%\" }}\n                    startIcon={<SaveIcon />}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={() => {\n                        setImagens(prevState => {\n                            return { ...prevState, imagensAdicionadas: false }\n                        })\n                        handleClose()\n                    }}\n\n                >CANCELAR ALTERAÇÕES\n            </Button>\n            </div>\n        </div >\n    );\n\n    return (\n        <div>\n\n            <i class=\"fas fa-camera-retro fa-2x\" style={{}}\n                onClick={handleOpen}\n            >  SLIDE SHOW</i>\n            <Modal\n                disableBackdropClick={true}//não permite fechar a janela ao clicar fora dela\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n\n            </Modal>\n        </div>\n    );\n}\n\n// export default memo(SimpleModal)",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":16},{"ruleId":"101","severity":1,"message":"105","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":18},{"ruleId":"101","severity":1,"message":"106","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":18},{"ruleId":"101","severity":1,"message":"107","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":20},{"ruleId":"108","severity":1,"message":"109","line":16,"column":15,"nodeType":"110","endLine":27,"endColumn":6},{"ruleId":"111","severity":1,"message":"112","line":20,"column":30,"nodeType":"113","messageId":"114","endLine":20,"endColumn":41,"fix":"115"},{"ruleId":"108","severity":1,"message":"116","line":132,"column":8,"nodeType":"117","endLine":132,"endColumn":10,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":192,"column":41,"nodeType":"110","messageId":"121","endLine":192,"endColumn":43},{"ruleId":"119","severity":1,"message":"120","line":314,"column":64,"nodeType":"110","messageId":"121","endLine":314,"endColumn":66},{"ruleId":"122","severity":1,"message":"123","line":341,"column":21,"nodeType":"103","messageId":"124","endLine":341,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":765,"column":61,"nodeType":"127","endLine":765,"endColumn":132},{"ruleId":"119","severity":1,"message":"120","line":19,"column":56,"nodeType":"110","messageId":"121","endLine":19,"endColumn":58},{"ruleId":"101","severity":1,"message":"128","line":6,"column":11,"nodeType":"103","messageId":"104","endLine":6,"endColumn":23},{"ruleId":"101","severity":1,"message":"129","line":37,"column":12,"nodeType":"103","messageId":"104","endLine":37,"endColumn":29},{"ruleId":"101","severity":1,"message":"130","line":37,"column":31,"nodeType":"103","messageId":"104","endLine":37,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":21,"column":15,"nodeType":"110","endLine":36,"endColumn":6},{"ruleId":"108","severity":1,"message":"131","line":36,"column":8,"nodeType":"117","endLine":36,"endColumn":10,"suggestions":"132"},{"ruleId":"108","severity":1,"message":"109","line":64,"column":15,"nodeType":"110","endLine":70,"endColumn":6},{"ruleId":"111","severity":1,"message":"112","line":66,"column":30,"nodeType":"113","messageId":"114","endLine":66,"endColumn":41,"fix":"133"},{"ruleId":"111","severity":1,"message":"112","line":123,"column":30,"nodeType":"113","messageId":"114","endLine":123,"endColumn":41,"fix":"134"},{"ruleId":"119","severity":1,"message":"120","line":134,"column":65,"nodeType":"110","messageId":"121","endLine":134,"endColumn":67},{"ruleId":"101","severity":1,"message":"135","line":141,"column":19,"nodeType":"103","messageId":"104","endLine":141,"endColumn":28},{"ruleId":"111","severity":1,"message":"112","line":149,"column":30,"nodeType":"113","messageId":"114","endLine":149,"endColumn":41,"fix":"136"},{"ruleId":"122","severity":1,"message":"137","line":159,"column":21,"nodeType":"103","messageId":"124","endLine":159,"endColumn":29},{"ruleId":"101","severity":1,"message":"138","line":1,"column":38,"nodeType":"103","messageId":"104","endLine":1,"endColumn":42},{"ruleId":"119","severity":1,"message":"120","line":91,"column":37,"nodeType":"110","messageId":"121","endLine":91,"endColumn":39},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'ImagemUm' is defined but never used.","Identifier","unusedVar","'ImagemDois' is defined but never used.","'ImagemTres' is defined but never used.","'ImagemQuatro' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"141","text":"142"},"React Hook useEffect has missing dependencies: 'props.dados' and 'props.tipoFormulario'. Either include them or remove the dependency array.","ArrayExpression",["143"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-redeclare","'stringiFy' is already defined.","redeclared","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'deletaImagem' is assigned a value but never used.","'mensagemDeRetorno' is assigned a value but never used.","'setMensagemDeRetorno' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dadosListaAnuncio.paginaAvanca' and 'dadosListaAnuncio.paginaRetorna'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDadosListaAnuncio' needs the current value of 'dadosListaAnuncio.paginaRetorna'.",["144"],{"range":"145","text":"142"},{"range":"146","text":"142"},"'resultado' is assigned a value but never used.",{"range":"147","text":"142"},"'stringFy' is already defined.","'memo' is defined but never used.","no-global-assign","no-unsafe-negation",[500,500],"()",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},[1616,1616],[3991,3991],[5450,5450],"Update the dependencies array to be: [props.dados, props.tipoFormulario]",{"range":"152","text":"153"},"Update the dependencies array to be: [dadosListaAnuncio.paginaAvanca, dadosListaAnuncio.paginaRetorna]",{"range":"154","text":"155"},[4069,4071],"[props.dados, props.tipoFormulario]",[1329,1331],"[dadosListaAnuncio.paginaAvanca, dadosListaAnuncio.paginaRetorna]"]