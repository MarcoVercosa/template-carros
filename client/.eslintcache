[{"/home/marco/Documents/project_react/template-carros/client/src/index.js":"1","/home/marco/Documents/project_react/template-carros/client/src/App.js":"2","/home/marco/Documents/project_react/template-carros/client/src/components/menu/menu.jsx":"3","/home/marco/Documents/project_react/template-carros/client/src/components/carroselprincipal/carrosselPrincipal.jsx":"4","/home/marco/Documents/project_react/template-carros/client/src/components/fetchBackEnd/api.js":"5","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/formulario.jsx":"6","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/opcionais.jsx":"7","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/modals/modalExluirAnuncio.js":"8","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/functions/funtionCriarAnuncio.js":"9","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/functions/functionRemoverAnuncio.js":"10","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painel/painelAdministrativo.jsx":"11","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/listaAnuncios.jsx":"12","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/modalExibirAnuncio.js":"13","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/dadosSite/dadosSite.jsx":"14","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/dadosSite/modalImagensSlide.js":"15","/home/marco/Documents/project_react/template-carros/client/src/components/destaques/destaques.jsx":"16","/home/marco/Documents/project_react/template-carros/client/src/components/footer/footer.jsx":"17","/home/marco/Documents/project_react/template-carros/client/src/components/estoque/estoque.jsx":"18","/home/marco/Documents/project_react/template-carros/client/src/components/detalhesAnuncio/detalhesAnuncio.jsx":"19","/home/marco/Documents/project_react/template-carros/client/src/components/detalhesAnuncio/modalRequestInfo.js":"20","/home/marco/Documents/project_react/template-carros/client/src/components/blindados/blindados.jsx":"21","/home/marco/Documents/project_react/template-carros/client/src/components/novos/novos.jsx":"22","/home/marco/Documents/project_react/template-carros/client/src/components/contato/contato.jsx":"23","/home/marco/Documents/project_react/template-carros/client/src/components/contato/modalQueroContato.js":"24","/home/marco/Documents/project_react/template-carros/client/src/components/vender/vender.jsx":"25","/home/marco/Documents/project_react/template-carros/client/src/components/vender/modalQueroVender.js":"26","/home/marco/Documents/project_react/template-carros/client/src/components/localizacao/localizacao.jsx":"27","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/login/login.jsx":"28","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/login/modaForgetPassword.js":"29","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painel/modalProfile.js":"30"},{"size":1950,"mtime":1615237866787,"results":"31","hashOfConfig":"32"},{"size":483,"mtime":1615138980198,"results":"33","hashOfConfig":"32"},{"size":11458,"mtime":1614891135807,"results":"34","hashOfConfig":"32"},{"size":3403,"mtime":1614174967215,"results":"35","hashOfConfig":"32"},{"size":11189,"mtime":1615606512297,"results":"36","hashOfConfig":"32"},{"size":43473,"mtime":1615519832707,"results":"37","hashOfConfig":"32"},{"size":16817,"mtime":1613528993202,"results":"38","hashOfConfig":"32"},{"size":3865,"mtime":1615170662623,"results":"39","hashOfConfig":"32"},{"size":2988,"mtime":1615171004515,"results":"40","hashOfConfig":"32"},{"size":353,"mtime":1612461614329,"results":"41","hashOfConfig":"32"},{"size":10529,"mtime":1615654945358,"results":"42","hashOfConfig":"32"},{"size":8435,"mtime":1615173413569,"results":"43","hashOfConfig":"32"},{"size":2009,"mtime":1612915148208,"results":"44","hashOfConfig":"32"},{"size":34760,"mtime":1615174008021,"results":"45","hashOfConfig":"32"},{"size":7816,"mtime":1613469430134,"results":"46","hashOfConfig":"32"},{"size":8168,"mtime":1614887290931,"results":"47","hashOfConfig":"32"},{"size":2819,"mtime":1614883078783,"results":"48","hashOfConfig":"32"},{"size":15677,"mtime":1614889459529,"results":"49","hashOfConfig":"32"},{"size":21940,"mtime":1614780531398,"results":"50","hashOfConfig":"32"},{"size":2676,"mtime":1614778232793,"results":"51","hashOfConfig":"32"},{"size":8321,"mtime":1614609005598,"results":"52","hashOfConfig":"32"},{"size":8313,"mtime":1614608997157,"results":"53","hashOfConfig":"32"},{"size":19258,"mtime":1614786321179,"results":"54","hashOfConfig":"32"},{"size":2676,"mtime":1614778223573,"results":"55","hashOfConfig":"32"},{"size":18862,"mtime":1614971258789,"results":"56","hashOfConfig":"32"},{"size":2931,"mtime":1614810237681,"results":"57","hashOfConfig":"32"},{"size":2065,"mtime":1614881997156,"results":"58","hashOfConfig":"32"},{"size":3019,"mtime":1615502282503,"results":"59","hashOfConfig":"32"},{"size":2986,"mtime":1615322327121,"results":"60","hashOfConfig":"32"},{"size":10871,"mtime":1615653368185,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"lcbjv5",{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"114","usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"117","usedDeprecatedRules":"65"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120","usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"123","usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"117","usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"134","usedDeprecatedRules":"65"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"65"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"140","usedDeprecatedRules":"65"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"65"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},"/home/marco/Documents/project_react/template-carros/client/src/index.js",["146"],"import React from 'react';\n\n\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport Login from \"./components/painelAdministrativo/login/login\"\nimport Paineladministrativo from \"./components/painelAdministrativo/painel/painelAdministrativo.jsx\"\nimport Estoque from \"./components/estoque/estoque\"\nimport DetalhesAnuncio from \"./components/detalhesAnuncio/detalhesAnuncio\"\nimport Blindados from \"./components/blindados/blindados\"\nimport Novos from \"./components/novos/novos\"\nimport Vender from \"./components/vender/vender\"\nimport Contato from \"./components/contato/contato\"\nimport Localizacao from \"./components/localizacao/localizacao\"\n\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/login\" exact={true} component={Login} />\n      <Route path=\"/paineladministrativo\" exact={true} component={Paineladministrativo} />\n\n\n      <Route path=\"/\" exact={true} component={App} />\n      <Route path=\"/estoque\" exact={true} component={Estoque} />\n      <Route path=\"/estoque:key\" component={Estoque} />\n      {/* Os campos pesquisa da home ou menu direcionarão para essa url acima com a key pesquisada */}\n      <Route path=\"/detalhesanuncio:idanuncio\" component={DetalhesAnuncio} />\n      <Route path=\"/blindados\" exact={true} component={Blindados} />\n      <Route path=\"/novos\" component={Novos} />\n      <Route path=\"/vender\" component={Vender} ></Route>\n      <Route path=\"/contato\" component={Contato} ></Route>\n      <Route path=\"/localizacao\" component={Localizacao} ></Route>\n\n      {/* <Route path=\"*\" component={PaginaErro} /> */}\n\n    </Switch>\n  </ BrowserRouter>\n\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["147","148"],"/home/marco/Documents/project_react/template-carros/client/src/App.js",["149","150"],"import { React, useEffect, useState } from 'react';\n\nimport Menu from \"./components/menu/menu.jsx\"\nimport CarroselPrincipal from \"./components/carroselprincipal/carrosselPrincipal\"\nimport Destaques from \"./components/destaques/destaques\"\nimport Footer from \"./components/footer/footer\"\nimport './App.css';\n\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Menu />\n      <CarroselPrincipal />\n      <Destaques />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","/home/marco/Documents/project_react/template-carros/client/src/components/menu/menu.jsx",["151","152","153","154","155","156"],"import { React, useState, useEffect, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport SloganLeft from \"./sloganLeft.png\"\nimport TextField from '@material-ui/core/TextField';\nimport \"./menu.css\"\n\nimport BuscaBD from \"../fetchBackEnd/api\"\n\n\n\n\nfunction Menu(props) {\n\n    const [contatos, setContatos] = useState({\n        dadosLojaUm: false,\n        dadosLojaDois: false,\n        dadosLojaTres: false,\n        dadosLojaQuatro: false,\n        dadosLojaWhatsapp: false,\n        dadosLojaFacebook: false,\n        dadosLojaInstagram: false,\n        dadosLojaYouTube: false,\n        dadosTotal: false\n    })\n    const [campoPesquisa, setCampoPesquisa] = useState(false)\n\n    useEffect(async () => {\n\n        const classBuscaBD = new BuscaBD()\n        const resultado = await classBuscaBD.Contato()\n\n        setContatos(prevState => {\n            return {\n                ...prevState,\n                dadosLojaUm: resultado.data[0].lojaUm ? true : false,\n                dadosLojaDois: resultado.data[0].lojaDois ? true : false,\n                dadosLojaTres: resultado.data[0].lojaTres ? true : false,\n                dadosLojaQuatro: resultado.data[0].lojaQuatro ? true : false,\n                dadosLojaWhatsApp: resultado.data[0].whatsapp ? true : false,\n                dadosLojaFacebook: resultado.data[0].facebook ? true : false,\n                dadosLojaInstagram: resultado.data[0].instagram ? true : false,\n                dadosLojaYouTube: resultado.data[0].youtube ? true : false,\n                dadosTotal: resultado\n            }\n        })\n\n        console.log(props.dados)\n    }, [])\n\n    window.onscroll = (() => {\n        if (document.body.scrollTop > 43 || document.documentElement.scrollTop > 43) {\n            document.getElementById(\"menu-header-div\").className = \"menu-header-fixed\"\n        } else {\n            document.getElementById(\"menu-header-div\").className = \"menu-header-normal\"\n        }\n        console.log(document.documentElement.scrollTop)\n    })\n\n    return (\n\n        <>\n            <div className=\"menu\">\n                <div className=\"menu-header-div-contato\">\n\n                    {contatos.dadosLojaUm &&\n                        <div className=\"menu-header-div-contato-tel-um menu-header-div-contato-tel\">\n                            <ul>\n                                <li>\n                                    <spam><i className=\"fas fa-store\"></i></spam> {contatos.dadosTotal.data[0].lojaUm}\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-map-marker-alt\"></i></spam> {contatos.dadosTotal.data[0].logradouroUm}\n                                    <p style={{display: \"flex\", justifyContent: \"center\", margin: \"0px\", marginTop: \"4px\"}}>{contatos.dadosTotal.data[0].bairroCidadeUm}</p>\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-phone-volume\"></i></spam> {contatos.dadosTotal.data[0].telefoneUm}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                    {contatos.dadosLojaDois &&\n                        <div className=\"menu-header-div-contato-tel-dois menu-header-div-contato-tel\">\n                            <ul>\n                                <li>\n                                    <spam><i className=\"fas fa-store\"></i></spam> {contatos.dadosTotal.data[0].lojaDois}\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-map-marker-alt\"></i></spam> {contatos.dadosTotal.data[0].logradouroDois}\n                                    <p style={{display: \"flex\", justifyContent: \"center\", margin: \"0px\", marginTop: \"4px\"}}>{contatos.dadosTotal.data[0].bairroCidadeDois}</p>\n\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-phone-volume\"></i></spam> {contatos.dadosTotal.data[0].telefoneDois}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                    {contatos.dadosLojaTres &&\n                        <div className=\"menu-header-div-contato-tel-tres menu-header-div-contato-tel\">\n                            <ul>\n                                <li>\n                                    <spam><i className=\"fas fa-store\"></i></spam> {contatos.dadosTotal.data[0].lojaTres}\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-map-marker-alt\"></i></spam> {contatos.dadosTotal.data[0].logradouroTres}\n                                    <p style={{display: \"flex\", justifyContent: \"center\", margin: \"0px\", marginTop: \"4px\"}}>{contatos.dadosTotal.data[0].bairroCidadeTres}</p>\n\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-phone-volume\"></i></spam> {contatos.dadosTotal.data[0].telefoneTres}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                    {contatos.dadosLojaQuatro &&\n                        <div className=\"menu-header-div-contato-tel-quatro menu-header-div-contato-tel\">\n                            <ul>\n                                <li>\n                                    <spam><i className=\"fas fa-store\"></i></spam> {contatos.dadosTotal.data[0].lojaQuatro}\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-map-marker-alt\"></i></spam> {contatos.dadosTotal.data[0].logradouroQuatro}\n                                    <p style={{display: \"flex\", justifyContent: \"center\", margin: \"0px\", marginTop: \"4px\"}}>{contatos.dadosTotal.data[0].bairroCidadeQuatro}</p>\n\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-phone-volume\"></i></spam> {contatos.dadosTotal.data[0].telefoneQuatro}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                    <div className=\"menu-header-div-contato-redes-sociais\">\n                        <ul>\n                            {contatos.dadosLojaWhatsApp &&\n                                <li>\n                                    <a href={contatos.dadosTotal.data[0].whatsapp} target=\"_blank\"><i className=\"fab fa-whatsapp fa-3x\"></i></a>\n                                </li>\n                            }\n                            {contatos.dadosLojaFacebook &&\n                                <li>\n                                    <a href={contatos.dadosTotal.data[0].facebook} target=\"_blank\"> <i className=\"fab fa-facebook fa-3x\"></i></a>\n                                </li>\n                            }\n                            {contatos.dadosLojaInstagram &&\n                                <li>\n                                    <a href={contatos.dadosTotal.data[0].instagram} target=\"_blank\" > <i className=\"fab fa-instagram fa-3x\"></i></a>\n                                </li>\n                            }\n                            {contatos.dadosLojaYouTube &&\n                                <li>\n                                    <a href={contatos.dadosTotal.data[0].youtube} target=\"_blank\"> <i className=\"fab fa-youtube fa-3x\"></i></a>\n                                </li>\n                            }\n                        </ul>\n                    </div>\n                </div>\n\n                <header className=\"menu-header\">\n\n                    <div id=\"menu-header-div\" className=\"menu-header-normal\">\n                        <div className=\"menu-div-slogan-left\">\n                            <img src={SloganLeft} alt=\"Slogam Empresa\" />\n                        </div>\n\n                        <div className=\"menu-head-div\">\n                            <ul>\n                                <Link to=\"/\">\n                                    <li> \n                                        INÍCIO\n                                \n                                    </li>\n                                </Link>\n                                <Link to=\"/estoque\">\n                                    <li>\n                                        ESTOQUE\n                                    \n                                    </li>\n                                </Link>\n                                <Link to=\"/blindados\">\n                                    <li>\n                                        BLINDADOS\n                                    </li>\n                                </Link>\n                                <Link to=\"/novos\">\n                                    <li>\n                                        NOVOS\n                                    </li>\n                                </Link>\n                                <li><Link to=\"/vender\">\n                                    VENDER\n                            </Link>\n                                </li>\n\n                                <li><Link to=\"/localizacao\">\n                                    LOCALIZAÇÃO\n                            </Link>\n                                </li>\n                                <li><Link to=\"/contato\">\n                                    CONTATO\n                            </Link>\n                                </li>\n                                <li>\n                                    SOBRE NÓS\n                        </li>\n\n                            </ul>\n                        </div>\n\n                        <div style={{ marginLeft: \"60px\" }} className=\"head-div-search\">\n\n                            <TextField\n                                style={{ marginTop: \"13px\", position: \"absolute\", width: \"15%\" }}\n                                label=\"BUSCAR\"\n                                id=\"outlined-size-small\"\n                                defaultValue=\"\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                color=\"standard\"\n                                onChange={(recebe)=>{setCampoPesquisa(recebe.target.value)}}\n                                onKeyDown={(tecla)=>{\n                                    if(tecla.key === \"Enter\"){\n                                        if(!campoPesquisa  ||  campoPesquisa.length < 2){\n                                            alert(\"Digite ao menos 2 letras para iniciar a pesquisa\" )\n                                            alert(campoPesquisa)\n                                            return\n                                        }else{\n                                            window.location.href = (`http://192.168.0.150:3000/estoque${campoPesquisa}`)\n                                        }\n                                    }\n                                }}\n                            />\n\n\n                        </div>\n                        <spam className=\"menu-spam-search\"><i className=\"fas fa-search fa-2x\"></i></spam>\n\n                    </div>\n                </header>\n            </div>\n        </>\n    )\n}\nexport default memo(Menu)","/home/marco/Documents/project_react/template-carros/client/src/components/carroselprincipal/carrosselPrincipal.jsx",["157","158"],"import { React, useEffect, useState } from 'react';\nimport \"./carroselPrincipal.css\"\n\nimport BuscaBD from \"../fetchBackEnd/api\"\n\nexport default function CarroselPrincipal() {\n\n    const [imagensCarrosel, setImagensCarrosel] = useState([])\n    const [contadorImagensCarrossel, setContadorImagensCarrosel] = useState(0)\n\n    useEffect(async () => {\n        const classBuscaBD = new BuscaBD\n        const imagensBD = await classBuscaBD.ImagensSlidePrincipal()\n        setImagensCarrosel(JSON.parse(imagensBD.data[0].imagensSlide))\n\n        var imagens = document.querySelectorAll(\".CarroselPrincipal-article-div img\")\n        StartCarrosel(imagens)\n    }, [])\n\n    function StartCarrosel(imagens) {\n        var numero = 0\n        setInterval(() => {\n            imagens[numero].classList.remove(\"selected\") //remove a class select pois a imagem 0 ja renderiza por padrão\n            numero++ //add + 1\n            if (numero >= imagens.length) { numero = 0 }//se numero der o total de imagens, zera a var\n            imagens[numero].classList.add(\"selected\") //add a class select na imagem da vez\n            setContadorImagensCarrosel(numero) //atualza o state parq que as setas da imagem possam enchergar a posição da imagem da vez\n        }, 9000)\n    }\n\n    function NavegaCarrosel(direcao) {\n        var numero = contadorImagensCarrossel\n        var imagens = document.querySelectorAll(\".CarroselPrincipal-article-div img\")\n\n        if (direcao === \"avancar\") {\n            imagens[numero].classList.remove(\"selected\") //remove a class select pois a imagem 0 ja renderiza por padrão\n            if (numero >= imagens.length - 1) { numero = -1 } //se chegar ao final, deixa o numero negativo, pq o + 1 da linha abaixo será 0\n            imagens[numero + 1].classList.add(\"selected\")\n            setContadorImagensCarrosel(numero + 1)\n        } else {\n            imagens[numero].classList.remove(\"selected\") //remove a class select pois a imagem 0 ja renderiza por padrão\n            if (numero === 0) { numero = imagens.length }\n            imagens[numero - 1].classList.add(\"selected\")\n            setContadorImagensCarrosel(numero - 1)\n        }\n    }\n\n    return (\n        <article className=\"CarroselPrincipal-article\">\n            <div className=\"CarroselPrincipal-article-div\">\n                {imagensCarrosel &&\n                    imagensCarrosel.map((dados, index) => {\n                        return (\n                            <img alt={dados} key={index} className={index === 0 ? \"selected\" : \"\"} src={\"http://192.168.0.150:9000/static/\" + dados} />\n                        )\n                    })\n                }\n                <div className=\"divdirecaoSlideRigth divdirecaoSlide\">\n                    <i className=\"fa fa-chevron-right fa-4x setaavanca \"\n                        onClick={(dadosClick, direcao = \"avancar\") => {\n                            NavegaCarrosel(direcao)\n                        }}\n                    ></i>\n                </div>\n                <div className=\"divdirecaoSlideLeft divdirecaoSlide direcaoSlide\">\n                    <i className=\"fa fa-chevron-left fa-4x setaretorna  direcaoSlide\"\n                        onClick={(dadosClick, direcao = \"retornar\") => {\n                            NavegaCarrosel(direcao)\n                        }}\n                    ></i>\n                </div>\n            </div>\n\n        </article>\n\n    )\n\n\n}","/home/marco/Documents/project_react/template-carros/client/src/components/fetchBackEnd/api.js",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/formulario.jsx",["159","160","161","162","163"],"\nimport { React, useState, useEffect, useCallback } from 'react';\n\nimport DadosOpcionais from \"./opcionais\" //formulario react opcionais\nimport BuscaBD from \"../../fetchBackEnd/api\" //classe axios\nimport FormData from 'form-data' //FormData classe que permite o multer identificar as imagens recebidas\n\nimport CriaAnuncio from \"./functions/funtionCriarAnuncio\"\n//funcão para cadastro de anuncio\n\n\nimport \"./formulario.css\"\nimport ModalExcluirAnuncio from \"./modals/modalExluirAnuncio\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport {\n    TextField,\n    InputLabel, Select, FormControl, Switch, FormControlLabel\n} from '@material-ui/core/';\n\n\nexport default function Formulario(props) {\n\n\n\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            margin: theme.spacing(1),\n        },\n    }));\n    const classes = useStyles();\n    console.log(props.tipoFormulario)\n\n\n\n    const [render, setRender] = useState(1930)//recebe loop para gerar os anos para seleção do ano do carro\n    const [formulario, SetFormulario] = useState({\n        valor: \"\",\n        marca: \"\",\n        ano: 2010,\n        modelo: \"\",\n        motor: \"\",\n        kilometro: 0,\n        combustivel: \"\",\n        porta: 4,\n        cambio: \"\",\n        carroceria: \"\",\n        finalPlaca: 0,\n        sobre: \"\",\n        imagensPath: false,\n        ativado: false,\n        destaque: false\n    })\n\n    const [formularioOpcionais, setFormularioOpcionais] = useState({\n        aceitaTroca: false,\n        IPVA: false,\n        licenciado: false,\n        airbag: false,\n        alarme: false,\n        cdplayer: false,\n        dvdplayer: false,\n        gps: false,\n        radio: false,\n        radioTocaFita: false,\n        computadorBordo: false,\n        controleTracao: false,\n        controleVelocidade: false,\n        desembacadorTraseiro: false,\n        limpadorTraseiro: false,\n        arCondicionado: false,\n        arQuente: false,\n        freioAbs: false,\n        retrovisoresEletricos: false,\n        retrovisoresFotocromicos: false,\n        rodaLigaLeve: false,\n        sensorChuva: false,\n        sensorEstacionamento: false,\n        tetoSolar: false,\n        travasEletricas: false,\n        vidrosEletricos: false,\n        direcaoHidraulica: false,\n        volanteAltura: false,\n        bancoCouro: false,\n        encostoCabecaTraseiro: false,\n        bancosFrenteAquecimento: false,\n        tracaoQuatroRodas: false,\n        protetorCacamba: false,\n        blindado: false,\n        farolXenonio: false,\n    })\n\n\n    const [buscaParaAlterar, setBuscaParaAlterar] = useState(\"\")\n    //RECEBE PALAVRA PARA PESQUISAR NO BANCO DE DADOS\n\n    const [abreModal, setAbreModal] = useState(false) //usado para abrir e fechar modal\n    const [editarImagens, setEditarImagens] = useState({\n        imagensDeletadas: [],\n        imagensAdicionadas: [],\n        mensagem: \"\",\n        display: \"none\"\n    })\n\n    useEffect(() => {\n        //GERA NUMEROS DE 1930 ATÉ O ANO CORRENTE, USANDO NO CAMPO \"ANO\"\n        var anoAtual = new Date().getFullYear()\n        var anoInicio = 1930\n        var render = []\n        while (anoInicio <= anoAtual) {\n            render.push(<option >{anoInicio}</option>)\n            anoInicio++\n        }\n        setRender(render)\n    }, [])\n\n    useEffect(() => {\n        //se o componente listar anuncio chamar o formulario (no caso é o modal q chama a pedido do componente listar anuncio)\n        //vai ter a props \"listaranuncio\" então ele vai ter tambem o id (props.dados) na qual vai buscar no bd e chamar a func para preeencger o formumlario\n        async function ListaAnuncioBuscaBD() {\n            if (props.tipoFormulario === \"listaranuncio\") {\n                const classBuscaBD = new BuscaBD()\n                let resultado = await classBuscaBD.BuscaBDGetDados(props.dados)\n                if (resultado.data.token === \"expired\") {\n                    alert(\"SESSÃO EXPIRADA. NECESSÁRIO LOGAR NOVAMENTE\")\n                    window.location.href = (\"http://192.168.0.150:3000/login\")\n                    return\n                }\n                PreencheFormulario(resultado)\n            }\n        }\n        ListaAnuncioBuscaBD()\n\n    }, [])\n\n\n\n    //########################  FUNÇÕES PARA CADASTRO //########################\n    //########################  FUNÇÕES PARA CADASTRO //########################\n    //########################  FUNÇÕES PARA CADASTRO //########################\n\n    function PreviewImagem() { //Gera preview das imagens ao adicioná-las\n        var armazena = []\n        for (var i = 0; i < formulario.imagensPath.length; i++) {\n            armazena.push(\n                <>\n                    <div className=\"formulario-preview-imagens-div\">\n                        <img alt={i} key={i} className=\"formulario-preview-imagens\" src={URL.createObjectURL(formulario.imagensPath[i])} />\n                        {/* URL.createObjectURL pega o campo do obj onde contem oss binários da imagem e renderiza */}\n                    </div>\n                </>\n            )\n        }\n        console.log(formulario.imagensPath)\n        return (\n            <>\n                {armazena}\n            </>\n        )\n    }\n\n    const FunctionOpcionais = useCallback((dados) => {//Essa func é chamada pelo componente externo Opcionais\n        const { name } = dados.target //retira o campo name do obj que será o nome do campo no obj formulario\n        setFormularioOpcionais(prevState => {\n            return { ...prevState, [name]: dados.target.checked }\n        })\n        console.log(formularioOpcionais)\n    }, [formularioOpcionais])\n\n\n\n    function MostrarTopoPaginaComMensagem() {\n\n        window.location.href = (\"#inicio\")\n\n    }\n\n\n    //########################  FUNÇÕES PARA EDITAR //########################\n    //########################  FUNÇÕES PARA EDITAR //########################\n    //########################  FUNÇÕES PARA EDITAR //########################\n\n\n\n    //previw das imagens adicionadas no modal\n    function PreviewImagemEdicao() { //Gera preview das imagens ao adicioná-las\n        var armazena = []\n        var push = []\n        if (editarImagens.imagensAdicionadas.length > 0) {\n            for (var i = 0; i < editarImagens.imagensAdicionadas.length; i++) {\n                armazena.push(editarImagens.imagensAdicionadas[i])\n            }\n            //por algum motivo o map não roda no editarImagens.imagensAdicionadas. Tive que criar uma array com loop\n            //e assim permitiu o map. Sempre que exclui alguma imagem ele atualiza o editarImagens.imagensAdicionadas\n            //onde a var \"armazena\" busca as infos\n            armazena.map((dados, index) => {\n                push.push(\n                    <>\n                        <div className=\"formulario-div-formualario-form-imagem-div\" style={{ rigth: \"40%\" }}>\n                            <img alt={index} key={index} className=\"formulario-preview-imagens-edicao\" src={URL.createObjectURL(dados)} />\n                        </div>\n                        <div className=\"foromulario-div-formualario-form-imagem-div-div\">\n                            <i class=\"fas fa-trash fa-2x icon-trash\"\n                                onClick={() => {\n                                    var temp = []\n                                    setEditarImagens((prevState => {\n                                        temp = armazena.filter((recebe => recebe !== dados))\n                                        return { ...prevState, imagensAdicionadas: temp }\n                                    }))  //armazena a imagem diferente da deletada   \n\n                                }}\n                            ></i>\n\n                        </div>\n                    </>\n                )\n            })\n        }\n        console.log(formulario.imagensPath)\n        return (\n            <>\n                {push}\n            </>\n        )\n    }\n\n\n    //########################  FUNÇÕES PARA EDITAR //########################\n    //########################  FUNÇÕES PARA EDITAR //########################\n    //########################  FUNÇÕES PARA EDITAR //########################\n\n\n    //buscar as infos e preencher o formulário\n    async function BuscarBDDados() {\n        const classBuscaBD = new BuscaBD()\n        const resultado = await classBuscaBD.BuscaBDGetDados(buscaParaAlterar)\n        console.log(resultado)\n        if (resultado.data.token === \"expired\") {\n            alert(\"SESSÃO EXPIRADA. NECESÁRIO AUTENTICAÇÃO\")\n            window.location.href = (\"http://192.168.0.150:3000/login\")\n            return\n        }\n        if (resultado.data.length < 1) {\n            setBuscaParaAlterar(\"\")\n            alert(\"Anúncio não encontrado\")\n            return\n        }\n        PreencheFormulario(resultado)\n    }\n\n    function PreencheFormulario(resultado) {\n        SetFormulario({\n            id: resultado.data[0].id,\n            valor: \"R$ \" + resultado.data[0].valor + \",00\",\n            marca: resultado.data[0].marca,\n            ano: resultado.data[0].ano,\n            modelo: resultado.data[0].modelo,\n            motor: resultado.data[0].motor,\n            kilometro: resultado.data[0].kilometro,\n            combustivel: resultado.data[0].combustivel,\n            porta: resultado.data[0].porta,\n            cambio: resultado.data[0].cambio,\n            carroceria: resultado.data[0].carroceria,\n            finalPlaca: resultado.data[0].finalPlaca,\n            sobre: resultado.data[0].sobre,\n            imagensPath: JSON.parse(resultado.data[0].imagensPath), // volta a origem da transformação do JSON.stringify, voltando a ser uma array\n            ativado: resultado.data[0].ativado,\n            destaque: resultado.data[0].destaque\n        })\n        setFormularioOpcionais({\n            aceitaTroca: resultado.data[0].aceitaTroca,\n            IPVA: resultado.data[0].IPVA,\n            licenciado: resultado.data[0].licenciado,\n            airbag: resultado.data[0].airbag,\n            alarme: resultado.data[0].alarme,\n            cdplayer: resultado.data[0].cdplayer,\n            dvdplayer: resultado.data[0].dvdplayer,\n            gps: resultado.data[0].gps,\n            radio: resultado.data[0].radio,\n            radioTocaFita: resultado.data[0].radioTocaFita,\n            computadorBordo: resultado.data[0].computadorBordo,\n            controleTracao: resultado.data[0].controleTracao,\n            controleVelocidade: resultado.data[0].controleVelocidade,\n            desembacadorTraseiro: resultado.data[0].desembacadorTraseiro,\n            limpadorTraseiro: resultado.data[0].limpadorTraseiro,\n            arCondicionado: resultado.data[0].arCondicionado,\n            arQuente: resultado.data[0].arQuente,\n            freioAbs: resultado.data[0].freioAbs,\n            retrovisoresEletricos: resultado.data[0].retrovisoresEletricos,\n            retrovisoresFotocromicos: resultado.data[0].retrovisoresFotocromicos,\n            rodaLigaLeve: resultado.data[0].rodaLigaLeve,\n            sensorChuva: resultado.data[0].sensorChuva,\n            sensorEstacionamento: resultado.data[0].sensorEstacionamento,\n            tetoSolar: resultado.data[0].sensorEstacionamento,\n            travasEletricas: resultado.data[0].travasEletricas,\n            vidrosEletricos: resultado.data[0].vidrosEletricos,\n            direcaoHidraulica: resultado.data[0].direcaoHidraulica,\n            volanteAltura: resultado.data[0].volanteAltura,\n            bancoCouro: resultado.data[0].bancoCouro,\n            encostoCabecaTraseiro: resultado.data[0].encostoCabecaTraseiro,\n            bancosFrenteAquecimento: resultado.data[0].bancosFrenteAquecimento,\n            tracaoQuatroRodas: resultado.data[0].tracaoQuatroRodas,\n            protetorCacamba: resultado.data[0].protetorCacamba,\n            blindado: resultado.data[0].blindado,\n            farolXenonio: resultado.data[0].farolXenonio,\n        })\n    }\n\n    async function AtualizarDadosBD() {   //primeiro deleta as imagens solicitadas do storage\n\n        const classBuscaBD = new BuscaBD()\n        const dadosImagens = new FormData()//FormData classe que permite o multer identificar as imagens recebidas\n        let caminhoImagensMulter = [] //armazena nomes das imagens no storage\n\n        //se houver imagens a serem ADICIONADAS, adicione-as no Multer\n        if (editarImagens.imagensAdicionadas.length > 0) {\n            for (var i = 0; i < editarImagens.imagensAdicionadas.length; i++) {\n                dadosImagens.append(\"files\", editarImagens.imagensAdicionadas[i])\n                //para enviar imagens tem q ser pelo FormData\n                //primeiro coloca eles numa array com o loop for. Necessário quando é mais de uma imagem\n            }\n            const retornaImagenslLocationNodeMulter = await classBuscaBD.CadastraImagemMulter(dadosImagens)\n\n            if (retornaImagenslLocationNodeMulter.data.token === \"expired\") {\n                alert(\"SESSÃO EXPIRADA. NECESSÁRIO LOGAR NOVAMENTE\")\n                window.location.href = (\"http://192.168.0.150:3000/login\")\n                return\n            }\n            retornaImagenslLocationNodeMulter.data.map((dados) => {\n                caminhoImagensMulter.push(dados.filename)//armezena o nome das imagens em array\n            })\n            // AtualizaTabelas(caminhoImagensMulter)\n        }\n        //se houver imagens a serem DELETADAS, delete-as no Storage\n        //Obs, a atualização das imagens no BD ja é feita no onClick do botão\n        if (editarImagens.imagensDeletadas.length > 0) {\n            const resultado = await classBuscaBD.DeletaImagem(editarImagens.imagensDeletadas)\n            // console.log(resultado)\n            if (resultado.data.token === \"expired\") {\n                alert(\"SESSÃO EXPIRADA. NECESSÁRIO LOGAR NOVAMENTE\")\n                window.location.href = (\"http://192.168.0.150:3000/login\")\n                return\n            }\n            AtualizaTabelasBD(caminhoImagensMulter)\n        } else {\n            AtualizaTabelasBD(caminhoImagensMulter)\n        }\n\n        //depois update dados  do anúncio no BD incluindo retirar as deletadas do BD\n        async function AtualizaTabelasBD(caminhoImagensMulter) {\n\n            var formularioTemp = formulario\n\n            if (caminhoImagensMulter.length > 0) {//se houve imaggens guardadas no storage\n                var stringiFy = JSON.stringify(formulario.imagensPath.concat(caminhoImagensMulter))\n                //transforma o json novamente em string. o Concat  add os valores da array caminhoImagensMulter permitindo tornar uma única array. parecido com o Objetc-consign\n                formularioTemp = { ...formularioTemp, valor: formularioTemp.valor.slice(3, -3) } //rerira o R$ e o ,00 do valor\n                formularioTemp = { ...formularioTemp, imagensPath: stringiFy }\n            }\n            else {\n                var stringiFy = JSON.stringify(formulario.imagensPath)//transforma o json novamente em string\n                formularioTemp = { ...formularioTemp, valor: formularioTemp.valor.slice(3, -3) }\n                formularioTemp = { ...formularioTemp, imagensPath: stringiFy }\n            }\n\n            var formularioTempFinal = Object.assign(formularioTemp, formularioOpcionais)\n            const resultado = await classBuscaBD.AtualizaBDDados(formularioTempFinal, buscaParaAlterar)\n\n            if (resultado.data.token === \"expired\") {\n                alert(\"SESSÃO EXPIRADA. NECESSÁRIO LOGAR NOVAMENTE\")\n                window.location.href = (\"http://192.168.0.150:3000/login\")\n                return\n            }\n            console.log(resultado)\n            props.mensagemDeRetorno(`${resultado.data} ID do anúncio: ${buscaParaAlterar}`)\n\n            MostrarTopoPaginaComMensagem()\n\n            setEditarImagens({\n                imagensDeletadas: [],\n                imagensAdicionadas: [],\n                mensagem: \"\",\n                display: \"none\"\n            })\n        }\n    }\n\n    return (\n        <>\n            {(props.tipoFormulario === \"alterarAnuncio\" || props.tipoFormulario === \"deletarAnuncio\") &&\n                <div className=\"publicacao-div-search\">\n                    <TextField\n                        onBlur={(recebe) => { setBuscaParaAlterar(recebe.target.value) }}\n                        style={{ margin: \"0 1% 3% 10%\", }}\n                        label=\"BUSCAR POR ID\"\n                        id=\"outlined-size-small\"\n                        defaultValue=\"\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        color=\"success\"\n                    />\n                    <Button\n                        onClick={() => { BuscarBDDados() }}\n                        style={{ margin: \"0\", backgroundColor: \"white\" }}\n                        variant=\"contained\"\n                        color=\"inherit\"\n                        className={classes.button}\n                        startIcon={<i class=\"fas fa-search fa-2x\"></i>}\n                    >\n                        BUSCAR ANÚNCIO\n                        </Button>\n                </div>\n            }\n            {formulario.id &&\n                <h4>ID ANÚNCIO: {formulario.id}</h4>\n            }\n            <div style={{ display: buscaParaAlterar || props.tipoFormulario === \"criarAnuncio\" || props.tipoFormulario === \"listaranuncio\" ? \"block\" : \"none\" }} className=\"formulario-div-formualario\"\n                onSubmit={async (event) => {\n                    // event.preventDefault()\n\n                    if (formulario.valor === \"\" || formulario.marca === \"\" || formulario.modelo === \"\" || formulario.motor === \"\"\n                        || formulario.combustivel === \"\" || formulario.cambio === \"\" || formulario.carroceria === \"\"\n                        || formulario.sobre === \"\") {\n                        alert(\"OS CAMPOS EM VERMELHO SÃO OBRIGATÓRIOS\")\n                        event.preventDefault()\n                        return\n                    }\n                    if (formulario.imagensPath.length > 12) {\n                        alert(\"SELECIONE ATÉ 12 IMAGENS\")\n                        event.preventDefault()\n                        return\n                    }\n\n                    var resultado = await CriaAnuncio(event, formulario, formularioOpcionais)\n                    // let mensagem = `${resultado.data.mensagem} ID: {resultado.data.resultado.insertId}`\n                    if (resultado.data.resultado) {\n                        props.mensagemDeRetorno(`${resultado.data.mensagem} ID do anúncio: ${resultado.data.resultado.insertId}`)\n                    } else {\n                        props.mensagemDeRetorno(`${resultado.data}`)\n                    }\n\n                }}>\n\n                {/* <form className=\"paineladministrativo-div-formualario-form\" method=\"post\" enctype=\"multipart/form-data\"> */}\n                <form className=\"formulario-div-formualario-form\" >\n\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n\n                        onClick={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, valor: \"\" }\n                            })\n                        }}\n\n                        onChange={(envia) => {\n\n                            SetFormulario(prevState => {\n                                return { ...prevState, valor: envia.target.value }\n                            })\n                        }}\n                        onBlur={(envia) => {//formata para deixar decimais\n                            if (envia.target.value.length < 1) { envia.target.value = 0 }\n                            SetFormulario(prevState => {\n                                const formater = new Intl.NumberFormat(\"pt-BR\")\n                                return { ...prevState, valor: \"R$ \" + formater.format(parseFloat(envia.target.value)) + \",00\" }\n                            })\n                        }}\n\n                        value={formulario.valor}\n                        id=\"Valor\"\n                        label=\"VALOR - Só números\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        error={!formulario.valor}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">Ano</InputLabel>\n\n                        <Select\n\n                            native\n                            value={formulario.ano}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, ano: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            {render}\n                        </Select>\n\n                    </FormControl>\n\n\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, marca: envia.target.value }\n                            })\n                        }}\n                        value={formulario.marca}\n                        id=\"marca\"\n                        label=\"MARCA - ex: FIAT\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, modelo: envia.target.value }\n                            })\n                        }}\n                        value={formulario.modelo}\n                        id=\"modelo\"\n                        label=\"MODELO - ex: UP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        error={!formulario.modelo}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, motor: envia.target.value }\n                            })\n                        }}\n                        value={formulario.motor}\n                        id=\"motor\"\n                        label=\"MOTOR - ex: 2.0 TSI 16V\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        error={!formulario.motor}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, kilometro: envia.target.value }\n                            })\n                        }}\n                        onClick={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, kilometro: 0 }\n                            })\n                        }}\n\n                        onBlur={(envia) => {//formata para deixar decimais\n                            if (envia.target.value.length < 1) { envia.target.value = 0 }\n                            SetFormulario(prevState => {\n                                const formater = new Intl.NumberFormat(\"pt-BR\")\n\n                                return { ...prevState, kilometro: formater.format(parseFloat(envia.target.value)) }\n                            })\n                        }}\n\n\n                        id=\"filled-number\"\n                        label=\"KM - Só números\"\n                        type=\"number\"\n                        value={formulario.kilometro}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                    />\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">COMBUSTÍVEL</InputLabel>\n                        <Select\n                            native\n                            value={formulario.combustivel}\n                            error={!formulario.combustivel}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, combustivel: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >GASOLINA</option>\n                            <option >ALCOOL</option>\n                            <option >FLEX</option>\n                            <option >DIESEL</option>\n                            <option >ELÉTRICO</option>\n                            <option >HÍBRIDO</option>\n\n                        </Select>\n                    </FormControl>\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">PORTAS</InputLabel>\n                        <Select\n                            native\n                            value={formulario.porta}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, porta: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >1</option>\n                            <option >2</option>\n                            <option >3</option>\n                            <option >4</option>\n                            <option >5</option>\n                            <option >6</option>\n                        </Select>\n                    </FormControl>\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">CÂMBIO</InputLabel>\n                        <Select\n                            native\n                            value={formulario.cambio}\n                            error={!formulario.cambio}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, cambio: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >MANUAL</option>\n                            <option >AUTOMÁTICO</option>\n                            <option >SEMIAUTOMÁTICO</option>\n                            <option >AUTOMATIZADO</option>\n\n                        </Select>\n                    </FormControl>\n\n                    <hr className=\"formulario-div-formualario-form-hr\" />\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">CARROCERIAS</InputLabel>\n                        <Select\n                            native\n                            value={formulario.carroceria}\n                            error={!formulario.carroceria}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, carroceria: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >HATCH</option>\n                            <option >SEDÃ</option>\n                            <option >PERUA/STATION-WAGONS (SW)</option>\n                            <option >COUPÉ</option>\n                            <option >CONVERSÍVEL</option>\n                            <option >MINIVAN</option>\n                            <option >LIMOUSINE</option>\n                            <option >SUV / UTILITÁRIO ESPORTIVO</option>\n                            <option >JIPE/</option>\n                            <option >PICAPE/</option>\n\n                        </Select>\n                    </FormControl>\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">FINAL PLACA</InputLabel>\n                        <Select\n                            native\n                            value={formulario.finalPlaca}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, finalPlaca: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >0</option>\n                            <option >1</option>\n                            <option >2</option>\n                            <option >3</option>\n                            <option >4</option>\n                            <option >5</option>\n                            <option >6</option>\n                            <option >7</option>\n                            <option >8</option>\n                            <option >9</option>\n\n                        </Select>\n                    </FormControl>\n                    <hr className=\"formulario-div-formualario-form-hr\" />\n\n                    <TextField style={{ marginLeft: '20px', width: '90%' }}\n                        value={formulario.sobre}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, sobre: envia.target.value }\n                            })\n                        }}\n                        id=\"sobre\"\n                        label=\"SOBRE O VEÍCULO \"\n                        variant=\"outlined\"\n                        multiline\n\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        error={!formulario.sobre}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr className=\"formulario-div-formualario-form-hr\" />\n                    <DadosOpcionais formulario={formularioOpcionais} Opcionais={FunctionOpcionais} />\n\n                    <hr className=\"formulario-div-formualario-form-hr\" />\n                    {props.tipoFormulario === \"criarAnuncio\" &&\n                        <>\n                            <label className=\"formulario-div-formualario-form-label-imagem\">\n                                Selecione as imagens:\n                            <input type=\"file\" name=\"file\" multiple=\"multiple\"\n\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, imagensPath: envia.target.files }\n                                        })\n                                    }}\n                                ></input>\n                            </label>\n\n                            {formulario.imagensPath.length > 0 &&\n                                <>\n                                    <h2>Preview Imagens</h2>\n                                    <div className=\"formulario-preview-div\">\n\n                                        <PreviewImagem />\n                                    </div>\n                                </>\n                            }\n                        </>\n                    }\n\n                    {/* ABRE O MODAL*/}\n                    {props.tipoFormulario === \"alterarAnuncio\" &&\n                        <>\n                            <h3 style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\", color: \"rgb(68, 68, 68)\" }}>IMAGENS ANÚNCIO</h3>\n                            {/* REMOÇÃO DE IMAGENS */}\n                            <div style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\", marginRight: \"9%\" }}>\n                                <a href=\"#abrirModal\" className=\"modalbotao\"><button type=\"button\"\n                                    className=\"modalbotao-abririmagem\"\n                                    onClick={() => { setAbreModal(true) }}\n                                ><i class=\"far fa-images fa-4x\"></i></button></a>\n                            </div>\n                            {/* <label className=\"label-imagens-altera-anuncio\">{formulario.imagensPath.length} Imagens do anúncio</label> */}\n                            <div className=\"modal-mensagem-alteração\" style={{ display: editarImagens.display }}>\n                                {editarImagens.mensagem}\n                                {/* Mensagem quando pressiona o botao salvar dentro do modal */}\n                            </div>\n\n                            {abreModal &&\n                                <div id=\"abrirModal\" class=\"modal\">\n                                    <div className=\"abrirModal-div\" >\n                                        <a href=\"#fechar\" title=\"Fechar\" class=\"fechar\">\n                                            <button type=\"button\">X</button>\n                                        </a>\n                                        <h3 style={{ color: \"grey\" }}>GERENCIAR IMAGENS ANÚNCIO</h3>\n                                        <hr></hr>\n\n                                        {formulario.imagensPath.length > 0 && //se existir imagem\n\n                                            formulario.imagensPath.map((recebe) => { //JSON.parse pega a array que está em string e transforma em string\n                                                return (\n                                                    <>\n                                                        <div class=\"formulario-div-formualario-form-imagem-div\" >\n                                                            <a href={\"http://192.168.0.150:9000/static/\" + recebe} target=\"_blank\">\n                                                                <img alt={recebe} key={recebe} src={\"http://192.168.0.150:9000/static/\" + recebe}></img>\n                                                            </a>\n\n                                                        </div>\n                                                        <div className=\"foromulario-div-formualario-form-imagem-div-div\">\n                                                            <i class=\"fas fa-trash fa-2x icon-trash\"\n                                                                onClick={() => {\n\n                                                                    setEditarImagens((prevState => {\n                                                                        return { ...prevState, imagensDeletadas: [...editarImagens.imagensDeletadas, recebe] }\n                                                                    }))  //armazena a imagem deletada para deletar no Multer\n\n                                                                    //Já Atualiza o formulario com as imagens NÃO DELETADAS que vai para o BD\n                                                                    var atualiza = formulario.imagensPath.filter(temp => temp !== recebe)\n                                                                    SetFormulario((prevState => {\n                                                                        return { ...prevState, imagensPath: atualiza }\n                                                                    }))\n                                                                }}\n                                                            ></i>\n\n                                                        </div>\n                                                    </>\n                                                )\n                                            })\n\n                                        }\n\n                                        <PreviewImagemEdicao />\n\n                                        <div className=\"modalbotao-salvar\">\n\n                                            <label className=\"formulario-div-formualario-form-label-plus-imagens\">\n                                                ADICIONAR IMAGENS:\n                                            </label>\n                                            <hr></hr>\n                                            <input className=\"input-imagens-edicao\" type=\"file\" name=\"file\" multiple=\"multiple\"\n                                                onChange={(envia) => {\n                                                    setEditarImagens(prevState => {\n                                                        return { ...prevState, imagensAdicionadas: envia.target.files }\n                                                    })\n                                                }}\n                                            ></input>\n                                        </div>\n                                        <div className=\"modalbotao-salvar\" >\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                size=\"large\"\n                                                className={classes.button}\n                                                startIcon={<SaveIcon />}\n                                                onClick={() => {\n                                                    setEditarImagens((prevState => {\n                                                        setAbreModal(false)\n\n                                                        return { ...prevState, mensagem: \"Cliquem em ALTERAR ANÚNCIO para salvar as alterações\", display: \"flex\" }\n                                                    }))\n                                                }} >\n                                                SALVAR\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </>\n                    }\n                    <div className=\"formulario-select-ativado\"\n                        style={{ backgroundColor: !formulario.ativado ? \"rgb(232, 45, 45)\" : \"rgb(68, 214, 117)\" }}\n                    >\n                        <FormControlLabel\n                            checked={formulario.ativado}\n                            name=\"ativado\"\n                            value=\"start\"\n                            control={<Switch color=\"primary\"\n\n                                onChange={(envia) => (SetFormulario(prevState => {\n                                    return { ...prevState, ativado: envia.target.checked }\n                                }))}\n\n                            />}\n                            label=\"ATIVAR ANÚNCIO\"\n                            labelPlacement=\"start\"\n                        />\n                    </div>\n\n                    <div className=\"formulario-select-ativado\"\n                        style={{ backgroundColor: \"rgb(150, 150, 170)\" }}\n                    >\n                        <FormControlLabel\n                            checked={formulario.destaque}\n                            name=\"destaque\"\n                            value=\"start\"\n                            control={<Switch color=\"primary\"\n\n                                onChange={(envia) => (SetFormulario(prevState => {\n                                    return { ...prevState, destaque: envia.target.checked }\n                                }))}\n\n                            />}\n                            label=\"DESTAQUE PÁGINA\"\n                            labelPlacement=\"start\"\n                        />\n                    </div>\n\n                    <div className=\"formulario-div-formualario-form-botao-publicar\"\n                        style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\" }}\n                    >\n                        {props.tipoFormulario === \"criarAnuncio\" &&\n\n\n                            < Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                className={classes.button}\n                                startIcon={<SaveIcon />}\n                            >\n                                PUBLICAR\n                        </Button>\n\n                        }\n                        {props.tipoFormulario === \"alterarAnuncio\" &&\n                            <Button\n                                style={{ marginTop: \"75px\" }}\n                                onClick={() => { AtualizarDadosBD() }}\n                                variant=\"contained\"\n                                color=\"default\"\n                                className={classes.button}\n                                startIcon={<CloudUploadIcon />}\n                            >\n                                ALTERAR ANÚNCIO\n                        </Button>\n                        }\n                        {props.tipoFormulario === \"deletarAnuncio\" &&\n                            <>\n\n                                <ModalExcluirAnuncio\n                                    buscaParaAlterar={buscaParaAlterar} formulario={formulario} MostrarTopoPaginaComMensagem={MostrarTopoPaginaComMensagem} mensagemDeRetorno={props.mensagemDeRetorno}\n                                />\n                            </>\n                        }\n                    </div>\n\n                </form>\n            </div >\n\n        </>\n    )\n}\n","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/opcionais.jsx",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/modals/modalExluirAnuncio.js",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/functions/funtionCriarAnuncio.js",["164"],"import FormData from 'form-data' //class que permite enviar imagens para o backend\nimport BuscaBD from \"../../../fetchBackEnd/api\" //classe axios\n\nasync function CriaAnuncio(event, formulario, formularioOpcionais) {//fazupload imagens e retornar o nome e caminho de cada imagem no node\n    event.preventDefault()\n    const classBuscaBD = new BuscaBD()// classe da Api onde está conf  o Axios\n    const dadosImagens = new FormData()//FormData classe que permite o multer identificar as imagens\n    for (var i = 0; i < formulario.imagensPath.length; i++) {\n        dadosImagens.append(\"files\", formulario.imagensPath[i])\n    }\n    //para enviar imagens tem q ser pelo FormData\n    //primeiro coloca eles numa array com o loop for. Necessário quando é mais de uma imagem\n\n    const retornaImagenslLocationNodeMulter = await classBuscaBD.CadastraImagemMulter(dadosImagens)\n    //faz o upload das imagens e o node vai retornar as imagens recebidas\n\n    if (retornaImagenslLocationNodeMulter.data.token === \"expired\") {\n        alert(\"SESSÃO EXPIRADA. NECESSÁRIO LOGAR NOVAMENTE\")\n        window.location.href = (\"http://192.168.0.150:3000/login\")\n        return\n    }\n    console.log(retornaImagenslLocationNodeMulter)\n    let imagensPath = []\n    //faz um map na array nos nomes das imagens retornadas do Node\n    retornaImagenslLocationNodeMulter.data.map((dados) => {\n        imagensPath.push(dados.filename)//armezeneo nome das imagens em array\n    })\n    const GuardaDados = await ArmazenaDadosBD(imagensPath, formulario, formularioOpcionais) //chama a func armazena dados enviado o nome das imagens recebidas em array\n    console.log(GuardaDados)\n    window.location.href = (\"#inicio\")\n    return GuardaDados\n    // props.mensagemDeRetorno(GuardaDados.data)\n    //retorna mensagem de sucesso ou não\n\n}\n\n//com os nomes das imagens no node, reuni todos os dados do carro e junta com o nome das imagens\nasync function ArmazenaDadosBD(recebeLocationImagens, formulario, formularioOpcionais) {\n    const classBuscaBD = new BuscaBD()\n    var imagensLocation = JSON.stringify(recebeLocationImagens);//transforma a array de localização das imagens em uma array String, para poder ser gravado em um único campo no BD\n    var reuniDados = formulario\n    reuniDados = { ...reuniDados, valor: reuniDados.valor.slice(3, -3) } //3 RETIRA R$  do incio e o -3 retira ,00 do final da string\n    reuniDados = { ...reuniDados, imagensPath: imagensLocation } //add os nomes da imagem no obj reunidados, que é o formulario\n    var reunidadosFinal = Object.assign(reuniDados, formularioOpcionais) // Object.assign torna dois objs em um só\n    console.log(reuniDados)\n    const EnviaDadosBD = await classBuscaBD.CadastraDadosBD(reunidadosFinal)\n    if (EnviaDadosBD.data.token === \"expired\") {\n        alert(\"SESSÃO EXPIRADA. NECESSÁRIO LOGAR NOVAMENTE\")\n        window.location.href = (\"http://192.168.0.150:3000/login\")\n        return\n    }\n\n    return EnviaDadosBD\n}\n\nexport default CriaAnuncio","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/formulario/functions/functionRemoverAnuncio.js",["165"],"import BuscaBD from \"../../../fetchBackEnd/api\"\n\nasync function RemoverAnuncio(idPesquisa, imagensStorage) {\n\n    const classBuscaBD = new BuscaBD()\n    const deletaImagem = await classBuscaBD.DeletaImagem(imagensStorage)\n    const deletaDadosBD = await classBuscaBD.DeletaAnuncioBD(idPesquisa)\n    return deletaDadosBD\n}\n\n\nexport default RemoverAnuncio","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painel/painelAdministrativo.jsx",["166","167","168","169"],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/listaAnuncios.jsx",["170","171"],"import { React, useEffect, useState } from 'react';\n\nimport \"./listaAnuncios.css\"\n\nimport BuscaBD from \"../../fetchBackEnd/api\"\nimport SimpleModal from \"./modalExibirAnuncio\"\n\n\nexport default function ListarAnuncios() {\n\n    const [dadosListaAnuncio, setDadosListaAnuncio] = useState({\n        todasPaginas: false,\n        paginacao: 0,\n        paginaAvanca: 25,\n        paginaRetorna: 0,\n        paginaAtual: false,\n        paginaFinal: false\n\n    })\n\n    useEffect(async () => {\n        const classBuscaBD = new BuscaBD()\n        let resultado = await classBuscaBD.ListarAnuncios()\n        if (resultado.data.token === \"expired\") {\n            alert(\"SESSÃO EXPIRADA. NECESSÁRIO LOGAR NOVAMENTE\")\n            window.location.href = (\"http://192.168.0.150:3000/login\")\n            return\n        }\n        setDadosListaAnuncio(prevState => {\n            let calculaTotalPaginas = 0\n            if (resultado.data.length % 25 === 0) { calculaTotalPaginas = resultado.data.length / 25 } else { calculaTotalPaginas = Math.floor(resultado.data.length / 25 + 1) }\n            //se total de resultados / 25 sobrar zero, então apenas divide, senão use o math, que não considera numero quebrado, e add mais 1 para bater com a sobra da página\n            return {\n                ...prevState, todasPaginas: resultado, paginacao: resultado.data.slice(\n                    dadosListaAnuncio.paginaRetorna, dadosListaAnuncio.paginaAvanca),\n                paginaAtual: 1,\n                paginaFinal: calculaTotalPaginas\n            }\n        })\n    }, [])\n\n    function FunctionPaginacao(click, direcao) {\n\n        if (direcao === \"avancar\") {\n            if (dadosListaAnuncio.paginaAvanca >= dadosListaAnuncio.todasPaginas.data.length) {\n                return\n            }\n            setDadosListaAnuncio(prevState => {\n                return {\n                    ...prevState,\n                    paginacao: dadosListaAnuncio.todasPaginas.data.slice\n                        (dadosListaAnuncio.paginaRetorna + 25, dadosListaAnuncio.paginaAvanca + 25)//recorta a array e mostra somente 25 linhas\n                    , paginaAvanca: dadosListaAnuncio.paginaAvanca + 25,\n                    paginaRetorna: dadosListaAnuncio.paginaRetorna + 25, //soma os contadores\n                    paginaAtual: dadosListaAnuncio.paginaAtual += 1,\n                }\n            })\n        }\n        if (direcao === \"retornar\") {\n            if (dadosListaAnuncio.paginaRetorna <= 0) {\n                return\n            }\n            setDadosListaAnuncio(prevState => {\n                return {\n                    ...prevState,\n                    paginacao: dadosListaAnuncio.todasPaginas.data.slice\n                        (dadosListaAnuncio.paginaRetorna - 25, dadosListaAnuncio.paginaAvanca - 25)//recorta a array e mostra somente 25 linhas\n                    , paginaAvanca: dadosListaAnuncio.paginaAvanca - 25,\n                    paginaRetorna: dadosListaAnuncio.paginaRetorna - 25,\n                    paginaAtual: dadosListaAnuncio.paginaAtual -= 1 //soma os contadores\n                }\n            })\n        }\n\n    }\n\n    return (\n        <article className=\"listaranuncio-article\">\n            {dadosListaAnuncio.todasPaginas &&\n                <h3 className=\"listaranuncio-h3\">{dadosListaAnuncio.todasPaginas.data.length} ANÚNCIOS</h3>\n            }\n            <table className=\"listaranuncio-table\">\n                <tr className=\"listaranuncio-table-tr\">\n                    <th >\n                        ID\n                </th>\n                    <th >\n                        Marca\n                </th>\n                    <th>\n                        Modelo\n                </th>\n                    <th>\n                        Valor\n                </th>\n                    <th>\n                        Ano\n                </th>\n                    <th>\n                        Motor\n                </th>\n                    <th>\n                        KM\n                </th>\n                    <th>\n                        Câmbio\n                </th>\n                    <th>\n                        Carroceria\n                </th>\n                    <th>\n                        Final Placa\n                </th>\n                    <th>\n                        Destaque\n                </th>\n                    <th>\n                        Ativado\n                </th>\n                    <th>\n                        MAIS\n                </th>\n                </tr>\n\n                {dadosListaAnuncio.todasPaginas &&\n                    dadosListaAnuncio.paginacao.map((dados, index) => {\n                        return (\n\n                            <tr className=\"listaranuncio-table-tr-tr\">\n                                <td style={{ width: \"5%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.id}\n                                </td>\n                                <td style={{ width: \"10%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.marca}\n                                </td>\n                                <td style={{ width: \"9%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.modelo}\n                                </td>\n                                <td style={{ width: \"7%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.valor}\n                                </td>\n                                <td style={{ width: \"5%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.ano}\n                                </td>\n                                <td style={{ width: \"12%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.motor}\n                                </td>\n                                <td style={{ width: \"5.5%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.kilometro}\n                                </td>\n                                <td style={{ width: \"5%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.cambio}\n                                </td>\n                                <td style={{ width: \"8%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.carroceria}\n                                </td>\n                                <td style={{ width: \"4%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.finalPlaca}\n                                </td>\n                                <td style={{ width: \"4%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.destaque ? \"SIM\" : \"NÃO\"}\n                                </td>\n                                <td style={{ width: \"4%\", backgroundColor: dados.ativado ? \" rgb(157, 213, 131)\" : \"rgb(216, 114, 103)\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {dados.ativado ? \"ATIVADO\" : \"DESATIVADO\"}\n                                </td>\n                                <td style={{ width: \"8%\" }} className=\"listaranuncio-table-td\" key={index} >\n                                    {<SimpleModal dados={dados.id} />}\n                                </td>\n                            </tr>\n                        )\n                    })\n                }\n            </table>\n\n            <div className=\"listaranuncio-paginacao\">\n                <div className=\"listaranuncio-paginacao-left\">\n                    <i class=\"fas fa-arrow-circle-left fa-2x\"\n                        onClick={(dadosClick, direcao = \"retornar\") => { FunctionPaginacao(dadosClick, direcao) }}\n                    ></i>\n                </div>\n\n                <div className=\"listaranuncio-paginacao-numeros\">\n                    {dadosListaAnuncio.paginaAtual} de {dadosListaAnuncio.paginaFinal}\n                </div>\n\n                <div className=\"listaranuncio-paginacao-rigth\">\n                    <i\n\n                        onClick={(dadosClick, direcao = \"avancar\") => { FunctionPaginacao(dadosClick, direcao) }}\n                        class=\"fas fa-arrow-circle-right fa-2x\"></i>\n                </div>\n            </div>\n        </article>\n    )\n\n}\n","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/modalExibirAnuncio.js",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/dadosSite/dadosSite.jsx",["172","173","174","175","176","177","178","179"],"import React, { useState, useEffect } from 'react';\nimport \"./dadosSite.css\"\nimport SimpleModal from \"./modalImagensSlide\"\n\n\nimport BuscaBD from \"../../fetchBackEnd/api\"\nimport FormData from 'form-data' //FormData classe que permite o multer identificar as imagens recebidas\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport {\n    TextField,\n    Button\n} from '@material-ui/core/';\n\n\nexport default function DadosSite(props) {\n\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            margin: theme.spacing(1),\n        },\n    }));\n    const classes = useStyles();\n\n    const [formulario, SetFormulario] = useState({\n\n        whatsapp: \"\",\n        facebook: \"\",\n        youtube: \"\",\n        instagram: \"\",\n        email: \"\",\n        lojaUm: \"\",\n        horarioFuncionamentoUm: \"\",\n        logradouroUm: \"\",\n        bairroCidadeUm: \"\",\n        cepUm: \"\",\n        telefoneUm: \"\",\n        lojaDois: \"\",\n        horarioFuncionamentoDois: \"\",\n        logradouroDois: \"\",\n        bairroCidadeDois: \"\",\n        cepDois: \"\",\n        telefoneDois: \"\",\n        logradouroTres: \"\",\n        bairroCidadeTres: \"\",\n        horarioFuncionamentoTres: \"\",\n        logradouroTres: \"\",\n        cepTres: \"\",\n        telefoneTres: \"\",\n        lojaQuatro: \"\",\n        horarioFuncionamentoQuatro: \"\",\n        logradouroQuatro: \"\",\n        bairroCidadeQuatro: \"\",\n        cepQuatro: \"\",\n        telefoneQuatro: \"\",\n        sobreNos: \"\",\n        imagensSlide: false\n    })\n\n    const [imagensModal, setImagensModal] = useState({\n        imagensBD: [],\n        imagensAdicionadas: [],\n        imagensDeletadasBD: []\n    })\n\n    useEffect(async () => {\n\n        const classBuscaBD = new BuscaBD\n        const resultado = await classBuscaBD.GetInfoSite()\n        if (resultado.data.token === \"expired\") {\n            alert(\"SESSÃO EXPIRADA. NECESSÁRIO LOGAR NOVAMENTE\")\n            window.location.href = (\"http://192.168.0.150:3000/login\")\n            return\n        }\n        PolulaFormulario(resultado)\n\n    }, [])\n\n    function PolulaFormulario(resultado) {\n        if (resultado.data.length > 0) {\n            SetFormulario({\n                whatsapp: resultado.data[0].whatsapp,\n                facebook: resultado.data[0].facebook,\n                youtube: resultado.data[0].youtube,\n                instagram: resultado.data[0].instagram,\n                email: resultado.data[0].email,\n                lojaUm: resultado.data[0].lojaUm,\n                horarioFuncionamentoUm: resultado.data[0].horarioFuncionamentoUm,\n                logradouroUm: resultado.data[0].logradouroUm,\n                bairroCidadeUm: resultado.data[0].bairroCidadeUm,\n                cepUm: resultado.data[0].cepUm,\n                telefoneUm: resultado.data[0].telefoneUm,\n                lojaDois: resultado.data[0].lojaDois,\n                horarioFuncionamentoDois: resultado.data[0].horarioFuncionamentoDois,\n                logradouroDois: resultado.data[0].logradouroDois,\n                bairroCidadeDois: resultado.data[0].bairroCidadeDois,\n                cepDois: resultado.data[0].cepDois,\n                telefoneDois: resultado.data[0].telefoneDois,\n                lojaTres: resultado.data[0].lojaTres,\n                horarioFuncionamentoTres: resultado.data[0].horarioFuncionamentoTres,\n                logradouroTres: resultado.data[0].logradouroTres,\n                bairroCidadeTres: resultado.data[0].bairroCidadeTres,\n                cepTres: resultado.data[0].cepTres,\n                telefoneTres: resultado.data[0].telefoneTres,\n                lojaQuatro: resultado.data[0].lojaQuatro,\n                horarioFuncionamentoQuatro: resultado.data[0].horarioFuncionamentoQuatro,\n                logradouroQuatro: resultado.data[0].logradouroQuatro,\n                bairroCidadeQuatro: resultado.data[0].bairroCidadeQuatro,\n                cepQuatro: resultado.data[0].cepQuatro,\n                telefoneQuatro: resultado.data[0].telefoneQuatro,\n                sobreNos: resultado.data[0].sobreNos,\n                imagensSlide: resultado.data[0].imagensSlide ? JSON.parse(resultado.data[0].imagensSlide) : \"\"\n            })\n        }\n    }\n\n    async function DadosModal(dados) {\n\n        setImagensModal(prevState => {\n            return {\n                ...prevState, imagensBD: dados.imagensBD,\n                imagensAdicionadas: dados.imagensAdicionadas, imagensDeletadasBD: dados.imagensDeletadasBD\n            }\n        })\n        //ja atualiza a string de imagens que vem do BD com as alteraçõe do modal\n        SetFormulario(prevState => {\n            return { ...prevState, imagensSlide: dados.imagensBD }\n        })\n\n    }\n\n\n    async function AtualizaDadosBD() {\n\n        const dadosImagens = new FormData()\n        const classBuscaBD = new BuscaBD\n        let caminhoImagensMulter = [] //armazena nomes das imagens no storage\n\n        if (imagensModal.imagensAdicionadas.length > 0) {\n            //se houver imagens a serem ADICIONADAS, adicione-as no Multer\n            for (var i = 0; i < imagensModal.imagensAdicionadas.length; i++) {\n                dadosImagens.append(\"files\", imagensModal.imagensAdicionadas[i])\n                //para enviar imagens tem q ser pelo FormData\n                //primeiro coloca eles numa array com o loop for. Necessário quando é mais de uma imagem\n            }\n            const retornaImagenslLocationNodeMulter = await classBuscaBD.CadastraImagemMulter(dadosImagens)\n            retornaImagenslLocationNodeMulter.data.map((recebe) => {\n                caminhoImagensMulter.push(recebe.filename)\n            })\n        }\n        if (imagensModal.imagensDeletadasBD.length > 0) {\n            //se houverem imagens a serem DELETADAS do MULTER\n            //obs. imagens deletadas que devem ser atualizadas no BD ja foi feita no Onclick no Modal no dados.imagensBD\n            const resultado = await classBuscaBD.DeletaImagem(imagensModal.imagensDeletadasBD)\n            //no node executa um loop executando uma por uma da array\n            AtualizaImagensBD(caminhoImagensMulter)\n        } else {\n            AtualizaImagensBD(caminhoImagensMulter)\n        }\n    }\n    async function AtualizaImagensBD(caminhoImagensMulter) {\n        const classBuscaBD = new BuscaBD\n        var tempFormulario = formulario\n\n        if (caminhoImagensMulter) {//se houver imagens que foram add no storage\n            if (tempFormulario.imagensSlide) { //se houver imagens no BD\n                var stringFy = JSON.stringify(tempFormulario.imagensSlide.concat(caminhoImagensMulter))\n                //transforma o json novamente em string. o Concat  add os valores da array \n                //caminhoImagensMulter tambem o transformando e string permitindo tornar uma única array. parecido com o Objetc-consign\n            }\n            else {\n                var stringFy = JSON.stringify(caminhoImagensMulter)\n                //se não houver dados no bd de imagens, então add as imagens do upload\n            }\n\n\n        } else {\n            stringFy = JSON.stringify(tempFormulario.imagensSlide) //se o cliente não solicitou add imagens\n            //Só transforma o json novamente em string\n        }\n\n        tempFormulario = { ...tempFormulario, imagensSlide: stringFy }\n\n\n        const resultado = await classBuscaBD.GravaInfoSite(tempFormulario)\n        if (resultado.data.token === \"expired\") {\n            alert(\"SESSÃO EXPIRADA. NECESSÁRIO LOGAR NOVAMENTE\")\n            window.location.href = (\"http://192.168.0.150:3000/login\")\n            return\n        }\n        window.location.href = (\"#inicio\")\n        props.mensagemDeRetorno(resultado.data)\n    }\n\n    return (\n\n        <article className=\"dadossite-article\">\n            <h3>{imagensModal.mensagemGravacao}</h3>\n            <div className=\"dadossite-article-div\">\n\n                <form className=\"dadossite-article-div-form\">\n\n                    <h4 className=\"dadossite-article-div-form-h4\"> REDES SOCIAIS / EMAIL</h4>\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, whatsapp: envia.target.value }\n                            })\n                        }}\n                        value={formulario.whatsapp}\n                        id=\"whatsapp\"\n                        label=\"WHATSAPP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, facebook: envia.target.value }\n                            })\n                        }}\n                        value={formulario.facebook}\n                        id=\"facebook\"\n                        label=\"FACEBOOK\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, youtube: envia.target.value }\n                            })\n                        }}\n                        value={formulario.youtube}\n                        id=\"youtube\"\n                        label=\"YOUTUBE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, instagram: envia.target.value }\n                            })\n                        }}\n                        value={formulario.instagram}\n                        id=\"instagram\"\n                        label=\"INSTAGRAM\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '18%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, email: envia.target.value }\n                            })\n                        }}\n                        value={formulario.email}\n                        id=\"email\"\n                        label=\"E-MAIL\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n                    <h4 className=\"dadossite-article-div-form-h4\"> CONTATO LOJA 1 </h4>\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, lojaUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.lojaUm}\n                        id=\"loja\"\n                        label=\"LOJA 1\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '27%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, horarioFuncionamentoUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.horarioFuncionamentoUm}\n                        id=\"horarioFuncionamento\"\n                        label=\"HORÁRIO FUNCIONAMENTO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.horarioFuncionamentoUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, logradouroUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.logradouroUm}\n                        id=\"local\"\n                        label=\"LOGRADOURO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.logradouroUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, bairroCidadeUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.bairroCidadeUm}\n                        id=\"bairrocidade\"\n                        label=\"BAIRRO - CIDADE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.logradouroUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, cepUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.cepUm}\n                        id=\"cep\"\n                        label=\"CEP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.cepUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ display: \"flex\", marginTop: '20px', marginLeft: '48px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, telefoneUm: envia.target.value }\n                            })\n                        }}\n                        value={formulario.telefoneUm}\n                        id=\"telefone\"\n                        label=\"TELEFONE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n                    <h4 className=\"dadossite-article-div-form-h4\"> CONTATO LOJA 2 </h4>\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, lojaDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.lojaDois}\n                        id=\"lojaDois\"\n                        label=\"LOJA 2\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '27%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, horarioFuncionamentoDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.horarioFuncionamentoDois}\n                        id=\"horarioFuncionamentoDois\"\n                        label=\"HORÁRIO FUNCIONAMENTO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, logradouroDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.logradouroDois}\n                        id=\"logradouroDois\"\n                        label=\"LOGRADOURO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, bairroCidadeDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.bairroCidadeDois}\n                        id=\"bairrocidadedois\"\n                        label=\"BAIRRO - CIDADE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.logradouroUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, cepDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.cepDois}\n                        id=\"cepDois\"\n                        label=\"CEP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ display: \"flex\", marginTop: '20px', marginLeft: '48px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, telefoneDois: envia.target.value }\n                            })\n                        }}\n                        value={formulario.telefoneDois}\n                        id=\"telefoneDois\"\n                        label=\"TELEFONE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n                    <h4 className=\"dadossite-article-div-form-h4\"> CONTATO LOJA 3 </h4>\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, lojaTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.lojaTres}\n                        id=\"lojaTres\"\n                        label=\"LOJA 3\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '27%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, horarioFuncionamentoTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.horarioFuncionamentoTres}\n                        id=\"horarioFuncionamentoTres\"\n                        label=\"HORÁRIO FUNCIONAMENTO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, logradouroTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.logradouroTres}\n                        id=\"logradourotres\"\n                        label=\"LOGRADOURO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, bairroCidadeTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.bairroCidadeTres}\n                        id=\"bairrocidadetres\"\n                        label=\"BAIRRO - CIDADE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.logradouroUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, cepTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.cepTres}\n                        id=\"cepTres\"\n                        label=\"CEP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ display: \"flex\", marginTop: '20px', marginLeft: '48px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, telefoneTres: envia.target.value }\n                            })\n                        }}\n                        value={formulario.telefoneTres}\n                        id=\"telefoneTres\"\n                        label=\"TELEFONE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n                    <h4 className=\"dadossite-article-div-form-h4\"> CONTATO LOJA 4 </h4>\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, lojaQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.lojaQuatro}\n                        id=\"lojaQuatro\"\n                        label=\"LOJA 4\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '27%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, horarioFuncionamentoQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.horarioFuncionamentoQuatro}\n                        id=\"horarioFuncionamentoQuatro\"\n                        label=\"HORÁRIO FUNCIONAMENTO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, logradouroQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.logradouroQuatro}\n                        id=\"logradouroQuatro\"\n                        label=\"LOGRADOURO\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, bairroCidadeQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.bairroCidadeQuatro}\n                        id=\"bairrocidadequatro\"\n                        label=\"BAIRRO - CIDADE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.logradouroUm}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, cepQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.cepQuatro}\n                        id=\"cepQuatro\"\n                        label=\"CEP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    {/* <TextField style={{ marginTop: '20px', width: '15%' }} */}\n                    <TextField style={{ display: \"flex\", marginTop: '20px', marginLeft: '48px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, telefoneQuatro: envia.target.value }\n                            })\n                        }}\n                        value={formulario.telefoneQuatro}\n                        id=\"telefoneQuatro\"\n                        label=\"TELEFONE\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n\n                    <h4 className=\"dadossite-article-div-form-h4\"> SOBRE - rodapé páginas</h4>\n                    <TextField style={{ marginLeft: '20px', width: '55%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, sobreNos: envia.target.value }\n                            })\n                        }}\n                        inputProps={{\n                            maxlength: 500\n                        }}\n                        value={formulario.sobreNos}\n                        id=\"sobreNos\"\n                        label=\"SOBRE NÓS\"\n                        variant=\"outlined\"\n                        multiline\n                        rows={5}\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        // error={!formulario.marca}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr style={{ marginTop: \"20px\" }}></hr>\n                    <hr style={{ marginBottom: \"20px\" }}></hr>\n\n                    <h4 className=\"dadossite-article-div-form-h4\"> SLIDE PÁGINA INICIAL </h4>\n                    <p\n                        style={{ color: \"grey\" }}\n                    >{formulario.imagensSlide.length + imagensModal.imagensAdicionadas.length < 1 ? 0 : formulario.imagensSlide.length + imagensModal.imagensAdicionadas.length} IMAGENS</p>\n\n                    <div>\n                        <SimpleModal imagensSlideBD={formulario.imagensSlide} DadosModal={DadosModal} />\n                    </div>\n\n                </form>\n            </div>\n\n            <div style={{ display: \"block\", justifyContent: \"center\", textAlign: \"center\", margin: \"30px auto\" }}>\n                <Button\n\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<CloudUploadIcon />}\n                    onClick={AtualizaDadosBD}\n                >\n                    ALTERAR INFORMAÇÕES\n            </Button>\n            </div>\n\n        </article>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/dadosSite/modalImagensSlide.js",["180","181"],"import React, { useState, useEffect, memo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 1100,\n        height: 550,\n        overflow: \"scroll\",\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\n\nexport default function SimpleModal(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    useEffect(() => {\n\n        if (props.imagensSlideBD) {\n            setImagens(prevState => {\n\n                return {\n                    ...prevState, imagensBD: props.imagensSlideBD\n                }\n            })\n        }\n\n    }, [props])\n\n    const [imagens, setImagens] = useState({\n\n        imagensBD: false,//imagens vindas do BD\n        imagensAdicionadas: false, //imagens adicionadas pelo upload\n        imagensDeletadasBD: [] // imagens deletadas do BD\n\n    })\n\n    function PreviewImagem() { //Gera preview das imagens ao adicioná-las\n\n        //por algum motivo o map não roda no imagens.imagensAdicionadas. Tive que criar uma array com loop\n        //e assim permitiu o map. Sempre que exclui alguma imagem ele atualiza o editarImagens.imagensAdicionadas\n        //onde a var \"armazena\" busca as infos\n        var armazena = []\n        var push = []\n        for (var i = 0; i < imagens.imagensAdicionadas.length; i++) {\n\n            armazena.push(imagens.imagensAdicionadas[i])\n        }\n        armazena.map((dados, index) => {\n            push.push(\n                <>\n\n                    <div className=\"formulario-div-formualario-form-imagem-div\">\n                        <img alt={index} key={index} className=\"\" src={URL.createObjectURL(dados)} />\n                        <i alt={index} key={index} class=\"fas fa-trash fa-2x trash-imagembd\"\n                            onClick={(recebe) => {\n\n                                //armazena somente as imagens diferentes da excluída\n                                setImagens(prevState => {\n                                    return {\n                                        ...prevState, imagensAdicionadas: armazena.filter((temp => temp !== dados)),\n                                    }\n                                })\n                            }}\n                        ></i>\n                    </div>\n                </>\n            )\n        })\n\n        return (\n            <>\n                {push}\n            </>\n        )\n    }\n\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n            <h2 style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\", color: \"rgb(121, 121, 121)\" }}>As imagens abaixo serão apresentadas no SlideShow principal da HOME.</h2>\n\n\n            {imagens.imagensBD &&\n                imagens.imagensBD.map((recebe, index) => {\n                    return (\n\n                        <div class=\"formulario-div-formualario-form-imagem-div\" >\n\n                            <img alt={recebe} key={index} src={\"http://192.168.0.150:9000/static/\" + recebe}></img>\n\n                            <i class=\"fas fa-trash fa-2x trash-imagembd\"\n                                onClick={() => {//retira as imagens vindas do BD que são deletadas ao click\n                                    setImagens(prevState => {\n                                        return { ...prevState, imagensBD: imagens.imagensBD.filter(dados => dados !== recebe) }\n                                    })\n\n                                    setImagens(prevState => {//armazena a var com imagens deletadas do BD para excluir do storage\n                                        return { ...prevState, imagensDeletadasBD: [...imagens.imagensDeletadasBD, recebe] }\n                                    })\n                                }}\n\n                            ></i>\n\n                        </div>\n\n\n                    )\n                })\n            }\n            {/* <div className=\"modalImagensSlide-previewUpload-div\"> */}\n            {imagens.imagensAdicionadas &&\n                <PreviewImagem />\n            }\n            {/* </div> */}\n\n            <div className={classes.root}>\n                <input\n                    accept=\"image/*\"\n                    className={classes.input}\n                    id=\"contained-button-file\"\n                    multiple\n                    type=\"file\"\n                    onChange={(imagensUpload) => {\n                        if (imagens.imagensBD.length + imagensUpload.target.files.length > 7) {\n                            alert(\"Adicione no máximo 7 imagens\")\n                            return\n                        }\n                        setImagens(prevState => {\n                            //adiciona as imagens do upload\n                            return { ...prevState, imagensAdicionadas: imagensUpload.target.files }\n                        })\n                    }}\n                />\n                <label htmlFor=\"contained-button-file\">\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<AddAPhotoIcon />}\n                        style={{ left: \"8%\", top: \"5%\" }}\n                    >\n                        UPLOAD ARQUIVOS\n                    </Button>\n                </label>\n\n                <Button\n                    style={{ left: \"13%\", top: \"5%\", backgroundColor: \"#52af52\", color: \"black\" }}\n                    startIcon={<SaveIcon />}\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={() => {\n                        props.DadosModal(imagens)\n                        handleClose()\n                    }}\n                >SALVAR ALTERAÇÕES\n            </Button>\n                <Button\n                    style={{ left: \"17%\", top: \"5%\" }}\n                    startIcon={<SaveIcon />}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={() => {\n                        setImagens(prevState => {\n                            return { ...prevState, imagensAdicionadas: false }\n                        })\n                        handleClose()\n                    }}\n\n                >CANCELAR ALTERAÇÕES\n            </Button>\n            </div>\n        </div >\n    );\n\n    return (\n        <div>\n\n            <i class=\"fas fa-camera-retro fa-2x\" style={{}}\n                onClick={handleOpen}\n            >  SLIDE SHOW</i>\n            <Modal\n                disableBackdropClick={true}//não permite fechar a janela ao clicar fora dela\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n\n            </Modal>\n        </div>\n    );\n}","/home/marco/Documents/project_react/template-carros/client/src/components/destaques/destaques.jsx",["182","183","184"],"import { React, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./destaques.css\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button } from '@material-ui/core/';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport BuscaBD from \"../fetchBackEnd/api\"\n\n\n\nexport default function Destaques(dados) {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n            button: {\n                margin: theme.spacing(1),\n\n            },\n        },\n    }));\n    const classes = useStyles();\n\n\n    const [imagensDestaque, setImagensDestaque] = useState({\n        todosDestaques: false,\n        paginacao: 0,\n        paginaAvanca: 8,\n        paginaRetorna: 0,\n        ativaBotaoEsquerdo: false,\n        ativaBotaodireito: false\n    })\n\n    const [campoPesquisa, setCampoPesquisa] = useState(\"\")\n\n    useEffect(async () => {\n        const classBuscaBD = new BuscaBD\n        const resultado = await classBuscaBD.BuscaDestaque()\n        console.log(resultado)\n        setImagensDestaque(prevState => {\n            return { ...prevState, todosDestaques: resultado.data, paginacao: resultado.data.slice(imagensDestaque.paginaRetorna, imagensDestaque.paginaAvanca) }\n        })\n\n    }, [])\n\n    function Paginacao(direcao) {\n        if (direcao === \"avancar\") {\n            if (imagensDestaque.paginaAvanca >= imagensDestaque.todosDestaques.length) { return }\n            setImagensDestaque(prevState => {\n                return { ...prevState, paginacao: imagensDestaque.todosDestaques.slice(imagensDestaque.paginaRetorna + 8, imagensDestaque.paginaAvanca + 8), paginaAvanca: imagensDestaque.paginaAvanca + 8, paginaRetorna: imagensDestaque.paginaRetorna + 8 }\n            })\n        } else {\n            setImagensDestaque(prevState => {\n                return { ...prevState, paginacao: imagensDestaque.todosDestaques.slice(imagensDestaque.paginaRetorna - 8, imagensDestaque.paginaAvanca - 8), paginaAvanca: imagensDestaque.paginaAvanca - 8, paginaRetorna: imagensDestaque.paginaRetorna - 8 }\n            })\n        }\n    }\n\n    function MostrarTopoDestaque() {\n        window.location.href = (\"#destaques\")\n    }\n\n\n\n    return (\n        <article className=\"destaques-article\">\n\n            <h3 className=\"destaques-h3\">VEÍCULOS EM DESTAQUE</h3>\n            <div className=\"destaques-article-div-inicio\">\n                <TextField\n                    style={{ width: \"30%\" }}\n                    id=\"outlined-secondary\"\n                    label=\"PESQUISAR ESTOQUE\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onBlur={(dados) => {\n                        setCampoPesquisa(dados.target.value)\n                    }}\n                />\n                <Button\n                    style={{ marginLeft: \"20px\" }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<SearchIcon style={{ fontSize: 28 }} />}\n                    onClick={() => { window.location.href = (`http://192.168.0.150:3000/estoque${campoPesquisa}`) }}\n                >\n                    BUSCAR\n                </Button>\n            </div>\n\n            <div id=\"destaques\" className=\"destaques-article-div-grid\">\n                {imagensDestaque.paginacao &&\n\n                    imagensDestaque.paginacao.map((recebe, index) => {\n                        const dados = { ...recebe, imagensPath: JSON.parse(recebe.imagensPath) }\n                        return (\n                            <div className=\"destaques-article-div-grid-div\">\n                                <div className=\"destaques-article-div-grid-imagem\">\n                                    {/* <a href={\"http://192.168.0.150:9000/static/\" + dados.imagensPath[0]} target=\"_blank\"> */}\n                                    <img alt={dados.modelo} key={index} src={\"http://192.168.0.150:9000/static/\" + dados.imagensPath[0]}></img>\n                                    {/* </a> */}\n                                </div>\n                                <div className=\"destaques-article-div-grid-imagem-info\">\n                                    <span className=\"destaques-article-div-grid-div-p\">{dados.marca} {dados.modelo}</span>\n                                    <hr />\n                                    <span className=\"destaques-article-div-grid-div-p-p\">R$ {dados.valor},00</span>\n                                    <hr />\n                                    <span className=\"destaques-article-div-grid-div-p-p-p\">{dados.motor}</span>\n                                    <span className=\"destaques-article-div-grid-div-p-p-p\"> {dados.combustivel}</span>\n                                    <span className=\"destaques-article-div-grid-div-p-p-p\">{dados.porta}P {dados.cambio}</span>\n                                    {/* <span className=\"destaques-article-div-grid-div-p-p-p\">{dados.ano}</span> */}\n                                    <span className=\"destaques-article-div-grid-div-anuncio\">OFERTA: #{dados.id}</span>\n                                    <div className=\"destaques-menu-left-div-button\">\n\n                                        <Link to={`/detalhesanuncio${dados.id}`} target=\"_blank\">\n                                            <Button variant=\"contained\" size=\"large\" color=\"primary\"\n                                            >\n                                                MAIS DETALHES\n                                            </Button>\n                                        </Link>\n                                    </div>\n                                </div>\n\n                            </div>\n                        )\n\n                    })\n\n                }\n            </div>\n            <div className=\"destaques-article-div-navegacao\">\n                <Button\n                    onClick={(click, direcao = \"voltar\") => {\n                        MostrarTopoDestaque()\n                        Paginacao(direcao)\n                    }}\n                    style={{ marginLeft: \"20px\" }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<ArrowBackIosIcon style={{ fontSize: 28, marginLeft: \"20px\" }} />}\n                    disabled={imagensDestaque.paginaRetorna <= 0}\n                >\n\n                </Button>\n                <Button\n                    onClick={(click, direcao = \"avancar\") => {\n                        Paginacao(direcao)\n                        MostrarTopoDestaque()\n                    }}\n                    style={{ marginLeft: \"20px\" }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<ArrowForwardIosIcon style={{ fontSize: 28, marginLeft: \"20px\" }} />}\n                    disabled={imagensDestaque.paginaAvanca >= imagensDestaque.todosDestaques.length}\n                >\n\n                </Button>\n\n                <div style={{ display: imagensDestaque.paginaAvanca >= imagensDestaque.todosDestaques.length ? \"block\" : \"none\" }}>\n                    <Link to=\"/estoque#inicio\" style={{ textDecoration: \"none\" }}>\n                        <Button\n                            style={{ marginLeft: \"20px\" }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                        // startIcon={<ArrowForwardIosIcon style={{ fontSize: 28, marginLeft: \"20px\" }} />}\n                        // disabled={imagensDestaque.paginaAvanca >= imagensDestaque.todosDestaques.length}\n                        >ESTOQUE\n                         </Button>\n                    </Link>\n                </div>\n            </div>\n\n        </article>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/footer/footer.jsx",["185"],"import { React, useState, useEffect, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./footer.css\"\nimport BuscaBD from \"../fetchBackEnd/api\"\n\nfunction Footer(props) {//recebe do app dados so BD  coluna sobreNos\n\n\n    const [sobreNos, setSobreNos] = useState(false)\n\n    useEffect(async () => {\n        // if (props.dados.data) {\n        //     setSobreNos(props.dados)\n        // }\n        const classBuscaBD = new BuscaBD()\n        const resultado = await classBuscaBD.Footer()\n        setSobreNos(resultado)\n\n    }, [props])\n\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer-div\">\n                <h2 style={{ color: \"white\" }} >Seminovos MULTIMARCA</h2>\n                <div className=\"footer-div-empresa footer-div-empresaum  \">\n\n                    <ul>\n\n                        <li>\n                            <Link to=\"/\">\n                                Início\n                            </Link>\n                        </li>\n                        <hr />\n\n                        <li>\n                            <Link to=\"/contato\">\n                                Contato\n                            </Link>\n                        </li>\n                        <hr />\n                        <li>\n                            <Link to=\"/estoque\">\n                                Estoque\n                            </Link>\n                        </li>\n                        <hr />\n                    </ul>\n                </div>\n                <div className=\"footer-div-empresa footer-div-empresadois\">\n                    <ul>\n                        <Link to=\"/blindados\">\n                            <li>\n                                Blindados\n                            </li>\n                        </Link>\n                        <hr />\n                        <li><Link to=\"/vender\">\n                            Vender\n                            </Link>\n                        </li>\n                        <hr />\n                        <Link to=\"/novos\">\n                            <li>\n                                Novos\n                            </li>\n                        </Link>\n                        <hr />\n                    </ul>\n                </div>\n                <div className=\"footer-div-sobre\">\n                    <ul>\n                        {sobreNos &&\n                            <>\n                                <h3>Sobre Nós</h3>\n                                <hr />\n                                <li>\n                                    {sobreNos.data[0].sobreNos}\n                                </li>\n                            </>\n                        }\n                    </ul>\n                </div>\n            </div>\n        </footer>\n    )\n}\nexport default memo(Footer)\n","/home/marco/Documents/project_react/template-carros/client/src/components/estoque/estoque.jsx",["186","187","188","189","190","191","192"],"import { React, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Menu from \"../../components/menu/menu\"\nimport Footer from \"../../components/footer/footer\"\nimport \"./estoque.css\"\n\n\nimport BuscaBD from '../fetchBackEnd/api';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\n\n\nexport default function Estoque(props) {\n    //os campos pesquisa da home e Menu direcionam para cá com a key recebida na props.\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n            button: {\n                margin: theme.spacing(1),\n\n            },\n            '& > *': {\n                margin: theme.spacing(1),\n            },\n        },\n    }));\n    const classes = useStyles();\n\n\n    const [selectFiltro, setSelectFiltro] = useState({\n        BDBlindado: false,\n        BDMarca: false,\n        BDAno: false,\n        BDCombustivel: false,\n        selectBlindado: \"todos\", //colocado como string, pq a opcao Não boolean ja possui esse valor\n        selectMarca: false,\n        selectValor: false,\n        selectAno: false,\n        selectCambio: false,\n        selectCombustivel: false\n    })\n\n    const [carrosEstoque, setCarrosEstoque] = useState({\n        todoEstoque: false,//todos anuncios do BD\n\n        paginacao: false, //auncios da pagina atual\n        paginaAvanca: 9,\n        paginaRetorna: 0,\n\n    })\n\n\n    async function CamposFiltro() {\n        const classBuscaBD = new BuscaBD\n        const filtro = await classBuscaBD.FiltroEstoque()\n        var confBlindado = []\n\n        if (filtro.data.blindado.length > 1 || filtro.data.blindado.length === 1) {\n            confBlindado.push(<option value={\"todos\"} >TODOS</option>)\n            confBlindado.push(<option value={true}>SIM</option>)\n            confBlindado.push(<option value={false}>NÃO</option>)\n        } else {\n            confBlindado = [<option value={false}>NÃO</option>]\n        }\n\n        setSelectFiltro(prevState => {\n            return { ...prevState, BDMarca: filtro.data.marca, BDAno: filtro.data.ano, BDCombustivel: filtro.data.combustivel, BDBlindado: confBlindado }\n        })\n    }\n\n    useEffect(async () => {\n        //os campos pesquisa da home e Menu direcionam para cá com a key recebida na props.\n        //então essa página pode ser aberta com o /estoque ou o direcionamento dos campos pesquisar recebendo a key via url\n        if (props.match.params.key) {\n            const classBuscaBD = new BuscaBD\n            const estoque = await classBuscaBD.CampoPesquisa(props.match.params.key)\n            setCarrosEstoque(prevState => {\n                return { ...prevState, todoEstoque: estoque.data, paginacao: estoque.data.slice(carrosEstoque.paginaRetorna, carrosEstoque.paginaAvanca) }\n            })\n            CamposFiltro()\n            return\n        }\n        const classBuscaBD = new BuscaBD\n        const estoque = await classBuscaBD.Estoque()\n        console.log(estoque)\n        console.log(props.match.params.key)\n\n        setCarrosEstoque(prevState => {\n            return { ...prevState, todoEstoque: estoque.data, paginacao: estoque.data.slice(carrosEstoque.paginaRetorna, carrosEstoque.paginaAvanca) }\n        })\n\n        CamposFiltro()\n\n    }, [])\n\n\n\n\n    function Paginacao(direcao) {\n        if (direcao === \"avancar\") {\n            // if (carrosEstoque.paginaAvanca >= carrosEstoque.todoEstoque.length) { return }\n            setCarrosEstoque(prevState => {\n                return { ...prevState, paginacao: carrosEstoque.todoEstoque.slice(carrosEstoque.paginaRetorna + 9, carrosEstoque.paginaAvanca + 9), paginaAvanca: carrosEstoque.paginaAvanca + 9, paginaRetorna: carrosEstoque.paginaRetorna + 9 }\n            })\n        } else {\n            setCarrosEstoque(prevState => {\n                return { ...prevState, paginacao: carrosEstoque.todoEstoque.slice(carrosEstoque.paginaRetorna - 9, carrosEstoque.paginaAvanca - 9), paginaAvanca: carrosEstoque.paginaAvanca - 9, paginaRetorna: carrosEstoque.paginaRetorna - 9 }\n            })\n        }\n    }\n\n    function MostrarTopoDestaque() {\n        window.location.href = (\"#inicio\")\n    }\n\n    async function FindAnuncioWithFilter() {\n        var dadosFilter = {\n            marca: selectFiltro.selectMarca,\n            valor: selectFiltro.selectValor,\n            ano: selectFiltro.selectAno,\n            cambio: selectFiltro.selectCambio,\n            combustivel: selectFiltro.selectCombustivel,\n            blindado: selectFiltro.selectBlindado\n        }\n        console.log(selectFiltro)\n        const classBuscaBD = new BuscaBD\n        const resultado = await classBuscaBD.FiltroEstoqueComFilter(dadosFilter)\n        setCarrosEstoque(prevState => {\n            return { ...prevState, todoEstoque: resultado.data, paginaAvanca: 9, paginaRetorna: 0, paginacao: resultado.data.slice(0, 9) }\n        })\n        MostrarTopoDestaque()\n    }\n\n    return (\n        <>\n            <Menu />\n\n            <menu id=\"inicio\" className=\"estoque-menu-left\">\n                <h3 className=\"titulo-estoque\">VEÍCULOS EM ESTOQUE </h3>\n\n                <div className=\"estoque-menu-left-div\">\n                    <div className=\"estoque-menu-left-div-div\">\n                        <label for=\"blindado\">Veículos Blindados</label>\n                        <select id=\"blindado\"\n                            onChange={(click) => {\n                                setSelectFiltro(prevState => {\n                                    return { ...prevState, selectBlindado: click.target.value }\n                                })\n\n                            }}\n                        >\n                            {selectFiltro.BDBlindado &&\n                                selectFiltro.BDBlindado.map(dados => {\n                                    return (\n                                        dados\n                                    )\n                                })\n                            }\n                        </select>\n                    </div>\n                    <div className=\"estoque-menu-left-div-div\">\n                        <label for=\"marca\">Marca</label>\n                        <select id=\"marca\"\n                            onChange={(click) => {\n                                setSelectFiltro(prevState => {\n                                    return { ...prevState, selectMarca: click.target.value }\n                                })\n                            }}\n                        >\n                            <option value={false} >TODAS</option>\n                            {selectFiltro.BDMarca &&\n                                selectFiltro.BDMarca.map((dados, index) => {\n                                    return (\n                                        <option key={index} >{dados}</option>\n                                    )\n                                })\n                            }\n                        </select>\n                    </div>\n                    <div className=\"estoque-menu-left-div-div\">\n                        <label for=\"preco\">Preço</label>\n                        <select id=\"preco\"\n                            onChange={(click) => {\n                                setSelectFiltro(prevState => {\n                                    return { ...prevState, selectValor: click.target.value }\n                                })\n                            }}\n                        >\n                            <option value={false} >TODAS</option>\n                            <option value={20000} >Até R$ 20.000</option>\n                            <option value={30000} >De R$ 20.000 a R$ 30.000</option>\n                            <option value={40000}>De R$ 30.000 a R$ 40.000</option>\n                            <option value={50000}>De R$ 40.000 a R$ 50.000</option>\n                            <option value={50001}>Acima de R$ 50.000</option>\n                        </select>\n                    </div>\n                    <div className=\"estoque-menu-left-div-div\">\n                        <label for=\"ano\">Ano:</label>\n                        <select id=\"ano\"\n                            onChange={(click) => {\n                                setSelectFiltro(prevState => {\n                                    return { ...prevState, selectAno: click.target.value }\n                                })\n                            }}\n                        >\n                            <option value={false} >TODAS</option>\n                            {selectFiltro.BDAno &&\n                                selectFiltro.BDAno.map((dados, index) => {\n                                    return (\n                                        <option key={index} value={dados} >Até {dados}</option>\n                                    )\n                                })\n                            }\n                        </select>\n                    </div>\n                    <div className=\"estoque-menu-left-div-div\">\n                        <label for=\"cambio\">Câmbio</label>\n                        <select id=\"cambio\"\n                            onChange={(click) => {\n                                setSelectFiltro(prevState => {\n                                    return { ...prevState, selectCambio: click.target.value }\n                                })\n                            }}\n                        >\n                            <option value={false}>TODAS</option>\n                            <option>MANUAL</option>\n                            <option>AUTOMÁTICO</option>\n\n                        </select>\n                    </div>\n                    <div className=\"estoque-menu-left-div-div\">\n                        <label for=\"combustivel\">Combustível</label>\n                        <select id=\"combustivel\"\n                            onChange={(click) => {\n                                setSelectFiltro(prevState => {\n                                    return { ...prevState, selectCombustivel: click.target.value }\n                                })\n                            }}\n                        >\n                            <option value={false} >TODAS</option>\n                            {selectFiltro.BDCombustivel &&\n                                selectFiltro.BDCombustivel.map((dados, index) => {\n                                    return (\n                                        <option key={index}>{dados}</option>\n                                    )\n                                })\n                            }\n                        </select>\n                    </div>\n                    <div className=\"estoque-menu-left-div-button\">\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\n                            onClick={(click) => { FindAnuncioWithFilter() }}\n                        >\n                            BUSCAR\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"estoque-article\" >\n                    <h1 className=\"titulo-estoque\" >Anúncios:</h1>\n                    <div className=\"estoque-article-estoque\">\n                        {carrosEstoque.todoEstoque &&\n                            carrosEstoque.paginacao.map((recebe, index) => {\n                                const dados = { ...recebe, imagensPath: JSON.parse(recebe.imagensPath) }\n                                return (\n                                    <div className=\"estoque-article-estoque-div\">\n                                        <div className=\"estoque-article-estoque-div-imagem\">\n                                            {/* <a href={\"http://192.168.0.150:9000/static/\" + dados.imagensPath[0]} target=\"_blank\"> */}\n                                            <img alt={dados.modelo} key={index} src={\"http://192.168.0.150:9000/static/\" + dados.imagensPath[0]}></img>\n                                            {/* </a> */}\n                                        </div>\n                                        <div key={index + 1} className=\"estoque-article-estoque-div-imagem-info\">\n                                            <span className=\"estoque-article-div-grid-div-p\">{dados.marca} {dados.modelo}</span>\n                                            <hr className=\"estoque-article-div-grid-div-hr\" />\n                                            <span className=\"estoque-article-div-grid-div-p-p\">R$ {dados.valor},00</span>\n                                            <hr className=\"estoque-article-div-grid-div-hr\" />\n                                            <span className=\"estoque-article-div-grid-div-p-p-p\">{dados.motor}</span>\n                                            <span className=\"estoque-article-div-grid-div-p-p-p\"> {dados.combustivel}</span>\n                                            <span className=\"estoque-article-div-grid-div-p-p-p\">{dados.porta}P {dados.cambio}</span>\n                                            <span className=\"estoque-article-div-grid-div-p-p-p\">{dados.ano}</span>\n                                            <span className=\"estoque-article-div-grid-div-p-p-p-p\">OFERTA: #{dados.id}</span>\n                                            <div className=\"estoque-article-div-grid-div-button\">\n\n                                                <Link to={`/detalhesanuncio${dados.id}`} target=\"_blank\">\n\n                                                    <Button variant=\"contained\" color=\"primary\"\n                                                    >\n                                                        MAIS DETALHES\n                                                    </Button>\n                                                </Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n\n                </div>\n                <div className=\"estoque-article-div-navegacao\">\n                    <Button\n                        onClick={(click, direcao = \"voltar\") => {\n                            MostrarTopoDestaque()\n                            Paginacao(direcao)\n                        }}\n                        style={{ marginLeft: \"20px\" }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<ArrowBackIosIcon style={{ fontSize: 28, marginLeft: \"20px\" }} />}\n                        disabled={carrosEstoque.paginaRetorna <= 0}\n                    >\n\n                    </Button>\n                    <Button\n                        onClick={(click, direcao = \"avancar\") => {\n                            Paginacao(direcao)\n                            MostrarTopoDestaque()\n                        }}\n                        style={{ marginLeft: \"20px\" }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<ArrowForwardIosIcon style={{ fontSize: 28, marginLeft: \"20px\" }} />}\n                        disabled={carrosEstoque.paginaAvanca >= carrosEstoque.todoEstoque.length}\n                    >\n                    </Button>\n                </div>\n            </menu >\n            <Footer />\n        </>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/detalhesAnuncio/detalhesAnuncio.jsx",["193","194","195","196","197","198","199"],"import { React, useState, useEffect } from \"react\"\nimport Menu from \"../menu/menu\"\nimport Footer from \"../footer/footer\"\nimport ModalRequestInfo from \"./modalRequestInfo\"\nimport \"./detalhesAnuncio.css\"\n\nimport BuscaBD from \"../fetchBackEnd/api\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Button, TextField, Radio, RadioGroup,\n    FormControlLabel, FormGroup, Checkbox, FormControl, FormLabel\n} from '@material-ui/core/';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            // width: '95%',\n        },\n    },\n}));\n\n\nexport default function DetalhesAnuncio(props) {\n    const classes = useStyles();\n\n    const [dadosAnuncio, setDadosAnuncio] = useState(true)\n    const [imagens, setImagens] = useState(false)\n    const [contadorImagens, setContadorImagens] = useState(0)\n    const [botaoInfo, setBotaoInfo] = useState({\n        botaoDetalhes: true,\n        botaoObservacoes: false,\n        dadosDetalhes: true,\n        dadosObservacoes: false\n    })\n    const [tenhoInteresse, setTenhoInteresse] = useState({\n        nome: false,\n        email: false,\n        assunto: \"CLIENTE INTERESSADO EM VEÍCULO\",\n        ddd: false,\n        telefone: false,\n        dddCel: false,\n        telefoneCel: false,\n        whatsappRetorno: true,\n        emailRetorno: true,\n        telefoneRetorno: true,\n        mensagem: \"\",\n        idAnuncio: false,\n    })\n    const [contatos, setContatos] = useState({\n\n    })\n\n    useEffect(async () => {\n        const classBuscaBD = new BuscaBD\n        const dados = await classBuscaBD.BuscaDetalheAnuncio(props.match.params.idanuncio)\n        console.log(dados)\n        if (dados.data.length < 1) {//se não retornar nada no data, deixe dadosAnuncio false,\n            return setDadosAnuncio(false)\n        }\n        setDadosAnuncio(dados.data[0])\n        setImagens(JSON.parse(dados.data[0].imagensPath))\n        setTenhoInteresse(prevState => {\n            return { ...prevState, idAnuncio: dados.data[0].id, mensagem: `Tenho interesse no ${dados.data[0].marca} ${dados.data[0].modelo} ${dados.data[0].motor} #${dados.data[0].id}. Aguardo um retorno.` }\n        })\n    }, [])\n\n    function NavegaImagens(direcao) {\n        const imagensQuery = document.querySelectorAll(\".detalhesanuncio-article-div-carrosel img\")\n        if (direcao === \"avancar\") {\n            imagensQuery[contadorImagens].classList.remove(\"selected\")\n            if (contadorImagens === imagensQuery.length - 1) {\n                imagensQuery[0].classList.add(\"selected\")\n                setContadorImagens(0)\n                return\n            }\n            imagensQuery[contadorImagens + 1].classList.add(\"selected\")\n            setContadorImagens(contadorImagens + 1)\n        } else {\n\n            imagensQuery[contadorImagens].classList.remove(\"selected\")\n            if (contadorImagens === 0) {\n                imagensQuery[imagensQuery.length - 1].classList.add(\"selected\")\n                setContadorImagens(imagensQuery.length - 1)\n                return\n            }\n            imagensQuery[contadorImagens - 1].classList.add(\"selected\")\n            setContadorImagens(contadorImagens - 1)\n        }\n    }\n    // async function FunctTenhoInteresse() {\n    //     // const classBuscaBD = new BuscaBD\n    //     // const resultado = classBuscaBD.SendEmail(tenhoInteresse)\n    //     setDadosAnuncio(prevState => {\n    //         return { ...prevState, abreModal: true }\n    //     })\n    // }\n\n\n    return (\n        <>\n            <Menu />\n            {!dadosAnuncio &&\n                <div style={{ width: \"100%\", height: \"200px\", display: \"flex\", justifyContent: \"Center\", marginTop: \"50px\" }}>\n                    <i class=\"fas fa-exclamation-triangle fa-6x\" style={{ color: \"rgb(237, 253, 92)\" }}></i>\n                    <h2 style={{ color: \"#777777\" }}>Esse anúncio não  está mais disponível !</h2>\n                </div>\n            }\n            {dadosAnuncio &&\n                <article className=\"detalhesanuncio-article\">\n                    <div className=\"detalhesanuncio-article-div-titulo\">\n                        <p>{dadosAnuncio.marca} {dadosAnuncio.modelo} {dadosAnuncio.motor} {dadosAnuncio.cambio}<spam>OFERTA: #{dadosAnuncio.id}</spam></p>\n                    </div>\n                    <div className=\"detalhesanuncio-article-div-carrosel\">\n                        {imagens &&\n                            imagens.map((imagensMap, index) => {\n                                return (\n\n                                    <img alt={imagensMap} key={index} className={index === 0 ? \"selected\" : \"\"}\n                                        src={\"http://192.168.0.150:9000/static/\" + imagensMap} />\n                                )\n                            })\n                        }\n\n                        <div className=\"detalhesanuncioesquerda  detalhesanunciodirecao\">\n                            <i className=\"fa fa-chevron-left fa-4x arrow\"\n                                onClick={(dadosClick, direcao = \"retornar\") => {\n                                    NavegaImagens(direcao)\n                                }}\n                            ></i>\n                        </div>\n                        <div className=\"detalhesanunciodireita detalhesanunciodirecao\">\n                            <i className=\"fa fa-chevron-right fa-4x arrow\"\n                                onClick={(dadosClick, direcao = \"avancar\") => {\n                                    NavegaImagens(direcao)\n                                }}\n                            ></i>\n                        </div>\n\n                    </div>\n\n                    <div className=\"detalhesanunciodireita-div-contato-info-detalhes\">\n                        <div style={{ display: \"inline\", marginTop: \"0px\", marginBottom: \"20px\", width: \"40%\" }} className={classes.root}>\n                            <Button style={{ margin: \"0\" }} variant=\"contained\" color=\"primary\"\n                                onClick={() => {\n                                    setBotaoInfo(prevState => {\n                                        return {\n                                            ...prevState, botaoDetalhes: !botaoInfo.botaoDetalhes, botaoObservacoes: !botaoInfo.botaoObservacoes,\n                                            dadosDetalhes: !botaoInfo.dadosDetalhes, dadosObservacoes: !botaoInfo.dadosObservacoes\n                                        }\n                                    })\n                                }}\n                                disabled={!botaoInfo.botaoObservacoes}\n                            >\n                                DETALHES\n                    </Button>\n                            <Button style={{ marginLeft: \"40px\" }} variant=\"contained\" color=\"primary\"\n                                onClick={() => {\n                                    setBotaoInfo(prevState => {\n                                        return {\n                                            ...prevState, botaoDetalhes: !botaoInfo.botaoDetalhes, botaoObservacoes: !botaoInfo.botaoObservacoes,\n                                            dadosDetalhes: !botaoInfo.dadosDetalhes, dadosObservacoes: !botaoInfo.dadosObservacoes\n                                        }\n                                    })\n                                }}\n                                disabled={!botaoInfo.botaoDetalhes}\n                            >\n                                OBSERVAÇÕES\n                    </Button>\n                        </div>\n                        {botaoInfo.dadosDetalhes &&\n                            <>\n                                <p className=\"detalhesanunciodireita-veiculo\">Veículo: <spam>{dadosAnuncio.marca} - {dadosAnuncio.modelo}</spam></p>\n                                <p className=\"detalhesanunciodireita-modelo\">Modelo: <spam>{dadosAnuncio.motor} - {dadosAnuncio.ano}</spam></p>\n                                <p className=\"detalhesanunciodireita-cambio\">Câmbio: <spam>{dadosAnuncio.cambio}</spam></p>\n                                <p className=\"detalhesanunciodireita-combustivel\">Combustível: <spam>{dadosAnuncio.combustivel}</spam></p>\n                                <p className=\"detalhesanunciodireita-KM\">KM: <spam>{dadosAnuncio.kilometro}</spam></p>\n                                <p className=\"detalhesanunciodireita-portas\">Portas: <spam>{dadosAnuncio.porta}</spam></p>\n                                <p className=\"detalhesanunciodireita-portas\">Final placa: <spam>{dadosAnuncio.finalPlaca}</spam></p>\n                                <div className=\"detalhesanunciodireita-opcionais-div\">\n                                    <p className=\"detalhesanunciodireita-opcionais\">Opcionais:\n                                <spam>{dadosAnuncio.airbag ? \"AIRBAG\" : \"\"} </spam><spam>{dadosAnuncio.alarme ? \"ALARME\" : \" \"}</spam>\n                                        <spam> {dadosAnuncio.cdplayer ? \"CDPLAYER\" : \"\"}</spam> <spam>{dadosAnuncio.dvdplayer ? \"DVDPLAYER\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.gps ? \"GPS\" : \"\"}</spam><spam>{dadosAnuncio.radio ? \"RÁDIO\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.radioTocaFita ? \"RÁDIO-TOCA-FITA\" : \"\"}</spam><spam>{dadosAnuncio.computadorBordo ? \"COMPUTADOR-DE-BORDO\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.controleTracao ? \"CONTROLE-DE-TRAÇÃO\" : \"\"}</spam><spam>{dadosAnuncio.controleVelocidade ? \"CONTROLE-DE-VELOCIDADE\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.desembacadorTraseiro ? \"DESEMBAÇADOR-TRASEIRO\" : \"\"}</spam><spam>{dadosAnuncio.limpadorTraseiro ? \"LIMPADOR-TRASEIRO\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.arCondicionado ? \"AR-CONDICIONADO\" : \"\"}</spam><spam>{dadosAnuncio.arQuente ? \"AR-QUENTE\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.freioAbs ? \"FREIO-ABS\" : \"\"}</spam><spam>{dadosAnuncio.retrovisoresEletricos ? \"RETROVISORES-ELÉTRICOS\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.travasEletricas ? \"TRAVAS-ELÉTRICAS\" : \"\"}</spam><spam>{dadosAnuncio.vidrosEletricos ? \"VIDROS-ELÉTRICOS\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.retrovisoresFotocromicos ? \"RETROVISORES-FOTOCROMICOS\" : \"\"}</spam><spam>{dadosAnuncio.rodaLigaLeve ? \"RODA-LIGA-LEVE\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.sensorChuva ? \"SENSOR-CHUVA\" : \"\"}</spam><spam>{dadosAnuncio.sensorEstacionamento ? \"SENSOR-ESTACIONAMENTO\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.tetoSolar ? \"TETO-SOLAR\" : \"\"}</spam><spam>{dadosAnuncio.direcaoHidraulica ? \"DIREÇÃO-HIDRÁULICA\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.volanteAltura ? \"VOLANTE-COM-REGULAGEM-ALTURA\" : \"\"}</spam><spam>{dadosAnuncio.bancoCouro ? \"BANCOS-EM-COURO\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.encostoCabecaTraseiro ? \"ENCOSTOS-CABEÇA-TRASEIRO\" : \"\"}</spam><spam>{dadosAnuncio.bancosFrenteAquecimento ? \"BANCOS-FRENTE-AQUECIMENTO\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.tracaoQuatroRodas ? \"TRAÇÃO-QUATRO-RODAS\" : \"\"}</spam><spam>{dadosAnuncio.protetorCacamba ? \"PROTETOR-CAÇAMBA\" : \"\"}</spam>\n                                        <spam>{dadosAnuncio.blindado ? \"BLINDADO\" : \"\"}</spam><spam>{dadosAnuncio.farolXenonio ? \"FAROL-XENONIO\" : \"\"}</spam>\n                                    </p>\n                                </div>\n                            </>\n                        }\n                        {botaoInfo.dadosObservacoes &&\n                            <div className=\"detalhesanunciodireita-div-contato-info-detalhes-sobre\">\n                                <p><spam>{dadosAnuncio.sobre.toUpperCase()}</spam></p>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"detalhesanunciodireita-div-contato\">\n                        <p className=\"detalhesanunciodireita-div-contato-p\">R$ {dadosAnuncio.valor},00</p>\n                        {/* <div className=\"detalhesanunciodireita-div-contato-div\"> */}\n                        <form className=\"detalhesanunciodireita-div-contato-form\">\n                            <p>TENHO INTERESSE</p>\n                            {/* <hr style={{ color: \"red\" }} /> */}\n                            <div>\n                                <TextField label=\"Nome\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    style={{ width: \"90%\" }}\n                                    inputProps={{\n                                        maxlength: 40\n                                    }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, nome: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"E-mail\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    style={{ width: \"90%\" }}\n                                    inputProps={{\n                                        maxlength: 40\n                                    }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, email: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"DDD\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"20%\" }}\n                                    inputProps={{\n                                        maxlength: 2\n                                    }}\n                                    onBlur={(dados) => {\n\n                                        if (!isNaN(dados.target.value)) {\n                                            setTenhoInteresse(prevState => {\n                                                return { ...prevState, ddd: dados.target.value }\n                                            })\n                                        } else {\n                                            alert(\"Por favor, digite somente números\")\n                                            dados.target.value = \"\"\n                                        }\n                                    }}\n\n                                />\n                                <TextField label=\"Telefone\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"60%\", marginLeft: \"10%\" }}\n                                    inputProps={{\n                                        maxlength: 8\n                                    }}\n                                    onBlur={(dados) => {\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, telefone: dados.target.value }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"DDD\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"20%\" }}\n                                    inputProps={{\n                                        maxlength: 2\n                                    }}\n                                    onBlur={(dados) => {\n                                        if (!isNaN(dados.target.value)) {\n                                            setTenhoInteresse(prevState => {\n                                                return { ...prevState, dddCel: dados.target.value }\n                                            })\n                                        } else {\n                                            alert(\"Por favor, digite somente números\")\n                                            dados.target.value = \"\"\n                                        }\n                                    }}\n                                />\n                                <TextField label=\"Celular\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"60%\", marginLeft: \"10%\" }}\n                                    inputProps={{\n                                        maxlength: 9\n                                    }}\n                                    onBlur={(dados) => {\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, telefoneCel: dados.target.value }\n                                        })\n                                    }}\n                                />\n\n                            </div>\n\n                            <div>\n                                <TextField\n                                    style={{ width: \"90%\" }}\n                                    inputProps={{\n                                        maxlength: 500\n                                    }}\n                                    id=\"outlined-multiline-static\"\n                                    label=\"Mensagem\"\n                                    // value={tenhoInteresse.mensagem}\n                                    value={tenhoInteresse.mensagem.toUpperCase()}\n                                    multiline\n                                    rows={5}\n                                    variant=\"outlined\"\n                                    onChange={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, mensagem: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div style={{ marginTop: \"25px\" }}>\n                                <FormControl component=\"fieldset\" className={classes.formControl}>\n                                    <FormLabel component=\"legend\">Quero receber contato por:</FormLabel>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={<Checkbox\n                                                checked={tenhoInteresse.whatsappRetorno}\n                                                onChange={(dados) => {\n                                                    setTenhoInteresse(prevState => {\n                                                        return { ...prevState, whatsappRetorno: dados.target.checked }\n                                                    })\n                                                }}\n                                                name=\"whatsApp\" color=\"primary\" />}\n                                            label=\"WhatsApp\"\n                                        />\n                                        <FormControlLabel\n                                            control={<Checkbox\n                                                checked={tenhoInteresse.emailRetorno}\n                                                onChange={(dados) => {\n                                                    setTenhoInteresse(prevState => {\n                                                        return { ...prevState, emailRetorno: dados.target.checked }\n                                                    })\n                                                }}\n                                                name=\"e-mail\" color=\"primary\" />}\n                                            label=\"E-mail\"\n                                        />\n                                        <FormControlLabel\n                                            control={<Checkbox\n                                                checked={tenhoInteresse.telefoneRetorno}\n                                                onChange={(dados) => {\n                                                    setTenhoInteresse(prevState => {\n                                                        return { ...prevState, telefoneRetorno: dados.target.checked }\n                                                    })\n                                                }}\n                                                name=\"telefone\" color=\"primary\" />}\n                                            label=\"Telefone\"\n                                        />\n                                    </FormGroup>\n                                </FormControl>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                                <ModalRequestInfo tenhoInteresse={tenhoInteresse} />\n                            </div>\n                        </form>\n\n                    </div>\n                </article >\n            }\n            <Footer />\n        </>\n    )\n} ","/home/marco/Documents/project_react/template-carros/client/src/components/detalhesAnuncio/modalRequestInfo.js",["200","201","202"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, Button } from '@material-ui/core/';\nimport BuscaBD from \"../fetchBackEnd/api\"\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport default function ModalRequestInfo(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n            <h2 id=\"simple-modal-title\">Dados enviados com sucesso.</h2>\n            <p id=\"simple-modal-description\">\n                Obrigado pelo o interesse. Iremos retornar o contato o mais rápido possível.\n            </p>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <i class=\"far fa-smile-wink fa-4x\"></i></div>\n\n        </div>\n    );\n    async function EnviaDados() {\n        const classBuscaBD = new BuscaBD\n        const resultado = classBuscaBD.SendEmail(props.tenhoInteresse)\n\n    }\n\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={() => {\n                    if (!props.tenhoInteresse.nome || !props.tenhoInteresse.email ||\n                        !props.tenhoInteresse.dddCel || !props.tenhoInteresse.telefoneCel) {\n                        alert(\"Os campos Nome, email e celular não podem estar em branco.\")\n                        console.log(props.tenhoInteresse)\n                        return\n                    }\n                    EnviaDados()\n                    handleOpen()\n                }}\n            >\n                ENVIAR\n            </Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n            </Modal>\n        </div>\n    );\n}\n","/home/marco/Documents/project_react/template-carros/client/src/components/blindados/blindados.jsx",["203","204","205","206"],"import { React, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n//##################################################################\n//O CÓDIGO ABAIXO É PRATICAMENTE O MESMO DO COMPONENTE ESTOQUE, \n//PORTANTO O CSS É O DO ESTOQUE\n//##################################################################\n\nimport Menu from \"../../components/menu/menu\"\nimport Footer from \"../../components/footer/footer\"\n\n\nimport BuscaBD from '../fetchBackEnd/api';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\n\n\nexport default function Blindados(props) {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n            button: {\n                margin: theme.spacing(1),\n\n            },\n            '& > *': {\n                margin: theme.spacing(1),\n            },\n        },\n    }));\n    const classes = useStyles();\n\n\n\n    const [carrosEstoque, setCarrosEstoque] = useState({\n        todoEstoque: true,//todos anuncios do BD\n\n        paginacao: false, //auncios da pagina atual\n        paginaAvanca: 9,\n        paginaRetorna: 0,\n\n    })\n\n    useEffect(async () => {\n        const classBuscaBD = new BuscaBD\n        const estoque = await classBuscaBD.BuscaEstoqueBlindados()\n        if (estoque.data.length < 1) {\n            setCarrosEstoque(prevState => {\n                return { ...prevState, todoEstoque: false }\n            })\n            return\n        }\n        console.log(estoque)\n\n        setCarrosEstoque(prevState => {\n            return { ...prevState, todoEstoque: estoque.data, paginacao: estoque.data.slice(carrosEstoque.paginaRetorna, carrosEstoque.paginaAvanca) }\n        })\n\n    }, [])\n\n\n    function Paginacao(direcao) {\n        if (direcao === \"avancar\") {\n            // if (carrosEstoque.paginaAvanca >= carrosEstoque.todoEstoque.length) { return }\n            setCarrosEstoque(prevState => {\n                return { ...prevState, paginacao: carrosEstoque.todoEstoque.slice(carrosEstoque.paginaRetorna + 9, carrosEstoque.paginaAvanca + 9), paginaAvanca: carrosEstoque.paginaAvanca + 9, paginaRetorna: carrosEstoque.paginaRetorna + 9 }\n            })\n        } else {\n            setCarrosEstoque(prevState => {\n                return { ...prevState, paginacao: carrosEstoque.todoEstoque.slice(carrosEstoque.paginaRetorna - 9, carrosEstoque.paginaAvanca - 9), paginaAvanca: carrosEstoque.paginaAvanca - 9, paginaRetorna: carrosEstoque.paginaRetorna - 9 }\n            })\n        }\n    }\n\n    function MostrarTopoDestaque() {\n        window.location.href = (\"#inicio\")\n    }\n    return (\n        <>\n            <Menu />\n            {!carrosEstoque.todoEstoque &&\n\n                <div style={{ width: \"100%\", height: \"200px\", display: \"flex\", justifyContent: \"Center\", marginTop: \"50px\" }}>\n                    <i class=\"fas fa-exclamation-triangle fa-6x\" style={{ color: \"rgb(237, 253, 92)\" }}></i>\n                    <h2 style={{ color: \"#777777\" }}>No momento nossos Blindados foram todos vendidos. Em breve teremos novidades !!!</h2>\n                </div>\n\n            }\n            {carrosEstoque.paginacao &&\n\n                <menu id=\"inicio\" className=\"estoque-menu-left\">\n                    <h3 className=\"titulo-estoque\" style={{ marginLeft: \"45x\" }}>VEÍCULOS BLINDADOS:</h3>\n\n                    <div className=\"estoque-article\" style={{ marginLeft: \"60px\" }} >\n                        <h1 className=\"titulo-estoque\" >Anúncios:</h1>\n                        <div className=\"estoque-article-estoque\">\n                            {carrosEstoque.todoEstoque &&\n                                carrosEstoque.paginacao.map((recebe, index) => {\n                                    const dados = { ...recebe, imagensPath: JSON.parse(recebe.imagensPath) }\n                                    return (\n                                        <div className=\"estoque-article-estoque-div\">\n                                            <div className=\"estoque-article-estoque-div-imagem\">\n                                                {/* <a href={\"http://192.168.0.150:9000/static/\" + dados.imagensPath[0]} target=\"_blank\"> */}\n                                                <img alt={dados.modelo} key={index} src={\"http://192.168.0.150:9000/static/\" + dados.imagensPath[0]}></img>\n                                                {/* </a> */}\n                                            </div>\n                                            <div key={index + 1} className=\"estoque-article-estoque-div-imagem-info\">\n                                                <span className=\"estoque-article-div-grid-div-p\">{dados.marca} {dados.modelo}</span>\n                                                <hr className=\"estoque-article-div-grid-div-hr\" />\n                                                <span className=\"estoque-article-div-grid-div-p-p\">R$ {dados.valor},00</span>\n                                                <hr className=\"estoque-article-div-grid-div-hr\" />\n                                                <span className=\"estoque-article-div-grid-div-p-p-p\">{dados.motor}</span>\n                                                <span className=\"estoque-article-div-grid-div-p-p-p\"> {dados.combustivel}</span>\n                                                <span className=\"estoque-article-div-grid-div-p-p-p\">{dados.porta} {dados.cambio}</span>\n                                                <span className=\"estoque-article-div-grid-div-p-p-p\">{dados.ano}</span>\n                                                <span className=\"estoque-article-div-grid-div-p-p-p-p\">OFERTA: #{dados.id}</span>\n                                                <div className=\"estoque-article-div-grid-div-button\">\n\n                                                    <Link to={`/detalhesanuncio${dados.id}`} target=\"_blank\">\n\n                                                        <Button variant=\"contained\" color=\"primary\"\n                                                        >\n                                                            MAIS DETALHES\n                                                    </Button>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n\n                    </div>\n                    <div className=\"estoque-article-div-navegacao\">\n                        <Button\n                            onClick={(click, direcao = \"voltar\") => {\n                                MostrarTopoDestaque()\n                                Paginacao(direcao)\n                            }}\n                            style={{ marginLeft: \"20px\" }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<ArrowBackIosIcon style={{ fontSize: 28, marginLeft: \"20px\" }} />}\n                            disabled={carrosEstoque.paginaRetorna <= 0}\n                        >\n\n                        </Button>\n                        <Button\n                            onClick={(click, direcao = \"avancar\") => {\n                                Paginacao(direcao)\n                                MostrarTopoDestaque()\n                            }}\n                            style={{ marginLeft: \"20px\" }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<ArrowForwardIosIcon style={{ fontSize: 28, marginLeft: \"20px\" }} />}\n                            disabled={carrosEstoque.paginaAvanca >= carrosEstoque.todoEstoque.length}\n                        >\n                        </Button>\n                    </div>\n                </menu >\n            }\n            <Footer />\n        </>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/novos/novos.jsx",["207","208","209","210"],"import { React, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n//##################################################################\n//O CÓDIGO ABAIXO É PRATICAMENTE O MESMO DO COMPONENTE ESTOQUE, \n//PORTANTO O CSS É O DO ESTOQUE\n//##################################################################\n\nimport Menu from \"../../components/menu/menu\"\nimport Footer from \"../../components/footer/footer\"\n\n\nimport BuscaBD from '../fetchBackEnd/api';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\n\n\nexport default function Novos(props) {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n            button: {\n                margin: theme.spacing(1),\n\n            },\n            '& > *': {\n                margin: theme.spacing(1),\n            },\n        },\n    }));\n    const classes = useStyles();\n\n\n    const [carrosEstoque, setCarrosEstoque] = useState({\n        todoEstoque: true,//todos anuncios do BD\n\n        paginacao: false, //auncios da pagina atual\n        paginaAvanca: 9,\n        paginaRetorna: 0,\n\n    })\n\n    useEffect(async () => {\n        const classBuscaBD = new BuscaBD\n        const estoque = await classBuscaBD.BuscaEstoqueNovos()\n        if (estoque.data.length < 1) {\n            setCarrosEstoque(prevState => {\n                return { ...prevState, todoEstoque: false }\n            })\n            return\n        }\n        console.log(estoque)\n\n        setCarrosEstoque(prevState => {\n            return { ...prevState, todoEstoque: estoque.data, paginacao: estoque.data.slice(carrosEstoque.paginaRetorna, carrosEstoque.paginaAvanca) }\n        })\n\n    }, [])\n\n\n    function Paginacao(direcao) {\n        if (direcao === \"avancar\") {\n            // if (carrosEstoque.paginaAvanca >= carrosEstoque.todoEstoque.length) { return }\n            setCarrosEstoque(prevState => {\n                return { ...prevState, paginacao: carrosEstoque.todoEstoque.slice(carrosEstoque.paginaRetorna + 9, carrosEstoque.paginaAvanca + 9), paginaAvanca: carrosEstoque.paginaAvanca + 9, paginaRetorna: carrosEstoque.paginaRetorna + 9 }\n            })\n        } else {\n            setCarrosEstoque(prevState => {\n                return { ...prevState, paginacao: carrosEstoque.todoEstoque.slice(carrosEstoque.paginaRetorna - 9, carrosEstoque.paginaAvanca - 9), paginaAvanca: carrosEstoque.paginaAvanca - 9, paginaRetorna: carrosEstoque.paginaRetorna - 9 }\n            })\n        }\n    }\n\n    function MostrarTopoDestaque() {\n        window.location.href = (\"#inicio\")\n    }\n\n    return (\n        <>\n            <Menu />\n            {!carrosEstoque.todoEstoque &&\n\n                <div style={{ width: \"100%\", height: \"200px\", display: \"flex\", justifyContent: \"Center\", marginTop: \"50px\" }}>\n                    <i class=\"fas fa-exclamation-triangle fa-6x\" style={{ color: \"rgb(237, 253, 92)\" }}></i>\n                    <h2 style={{ color: \"#777777\" }}>No momento nossos veículos 0 KM foram todos vendidos. Em breve teremos novidades !!!</h2>\n                </div>\n\n            }\n            {carrosEstoque.paginacao &&\n\n                <menu id=\"inicio\" className=\"estoque-menu-left\">\n                    <h3 className=\"titulo-estoque\" style={{ marginLeft: \"45x\" }}>VEÍCULOS 0 KM:</h3>\n\n                    <div className=\"estoque-article\" style={{ marginLeft: \"60px\" }} >\n                        <h1 className=\"titulo-estoque\" >Anúncios:</h1>\n                        <div className=\"estoque-article-estoque\">\n                            {carrosEstoque.todoEstoque &&\n                                carrosEstoque.paginacao.map((recebe, index) => {\n                                    const dados = { ...recebe, imagensPath: JSON.parse(recebe.imagensPath) }\n                                    return (\n                                        <div className=\"estoque-article-estoque-div\">\n                                            <div className=\"estoque-article-estoque-div-imagem\">\n                                                {/* <a href={\"http://192.168.0.150:9000/static/\" + dados.imagensPath[0]} target=\"_blank\"> */}\n                                                <img alt={dados.modelo} key={index} src={\"http://192.168.0.150:9000/static/\" + dados.imagensPath[0]}></img>\n                                                {/* </a> */}\n                                            </div>\n                                            <div key={index + 1} className=\"estoque-article-estoque-div-imagem-info\">\n                                                <span className=\"estoque-article-div-grid-div-p\">{dados.marca} {dados.modelo}</span>\n                                                <hr className=\"estoque-article-div-grid-div-hr\" />\n                                                <span className=\"estoque-article-div-grid-div-p-p\">R$ {dados.valor},00</span>\n                                                <hr className=\"estoque-article-div-grid-div-hr\" />\n                                                <span className=\"estoque-article-div-grid-div-p-p-p\">{dados.motor}</span>\n                                                <span className=\"estoque-article-div-grid-div-p-p-p\"> {dados.combustivel}</span>\n                                                <span className=\"estoque-article-div-grid-div-p-p-p\">{dados.porta} {dados.cambio}</span>\n                                                <span className=\"estoque-article-div-grid-div-p-p-p\">{dados.ano}</span>\n                                                <span className=\"estoque-article-div-grid-div-p-p-p-p\">OFERTA: #{dados.id}</span>\n                                                <div className=\"estoque-article-div-grid-div-button\">\n\n                                                    <Link to={`/detalhesanuncio${dados.id}`} target=\"_blank\">\n\n                                                        <Button variant=\"contained\" color=\"primary\"\n                                                        >\n                                                            MAIS DETALHES\n                                                    </Button>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n\n                    </div>\n                    <div className=\"estoque-article-div-navegacao\">\n                        <Button\n                            onClick={(click, direcao = \"voltar\") => {\n                                MostrarTopoDestaque()\n                                Paginacao(direcao)\n                            }}\n                            style={{ marginLeft: \"20px\" }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<ArrowBackIosIcon style={{ fontSize: 28, marginLeft: \"20px\" }} />}\n                            disabled={carrosEstoque.paginaRetorna <= 0}\n                        >\n\n                        </Button>\n                        <Button\n                            onClick={(click, direcao = \"avancar\") => {\n                                Paginacao(direcao)\n                                MostrarTopoDestaque()\n                            }}\n                            style={{ marginLeft: \"20px\" }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<ArrowForwardIosIcon style={{ fontSize: 28, marginLeft: \"20px\" }} />}\n                            disabled={carrosEstoque.paginaAvanca >= carrosEstoque.todoEstoque.length}\n                        >\n                        </Button>\n                    </div>\n                </menu >\n            }\n            <Footer />\n        </>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/contato/contato.jsx",["211","212","213","214","215","216"],"import { React, useEffect, useState } from 'react';\nimport Menu from \"../menu/menu\"\nimport Footer from \"../footer/footer\"\nimport Imagem from \"./imagemContato.jpg\"\nimport \"./contato.css\"\nimport BuscaBD from \"../fetchBackEnd/api\"\nimport ModalQueroContato from \"./modalQueroContato\"\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    TextField,\n    FormControlLabel, FormGroup, Checkbox, FormControl, FormLabel\n} from '@material-ui/core/';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            // width: '95%',\n        },\n    },\n}));\n\n\nexport default function Contato() {\n    const classes = useStyles();\n\n    const [contatos, setContatos] = useState({\n        dadosLojaUm: false,\n        dadosLojaDois: false,\n        dadosLojaTres: false,\n        dadosLojaQuatro: false,\n        dadosLojaWhatsapp: false,\n        dadosLojaFacebook: false,\n        dadosLojaInstagram: false,\n        dadosLojaYouTube: false,\n        dadosEmail: false,\n        dadosTotal: false\n    })\n    const [tenhoInteresse, setTenhoInteresse] = useState({\n        nome: false,\n        email: false,\n        assunto: \"CLIENTE FALE CONOSCO\",\n        ddd: false,\n        telefone: false,\n        dddCel: false,\n        telefoneCel: false,\n        whatsappRetorno: true,\n        emailRetorno: true,\n        telefoneRetorno: true,\n        mensagem: \"\",\n        idAnuncio: \"não definido\",\n    })\n\n    useEffect(async () => {\n\n        const classBuscaBD = new BuscaBD()\n        const resultado = await classBuscaBD.Contato()\n\n        setContatos(prevState => {\n            return {\n                ...prevState,\n                dadosLojaUm: resultado.data[0].lojaUm ? true : false,\n                dadosLojaDois: resultado.data[0].lojaDois ? true : false,\n                dadosLojaTres: resultado.data[0].lojaTres ? true : false,\n                dadosLojaQuatro: resultado.data[0].lojaQuatro ? true : false,\n                dadosLojaWhatsApp: resultado.data[0].whatsapp ? true : false,\n                dadosLojaFacebook: resultado.data[0].facebook ? true : false,\n                dadosLojaInstagram: resultado.data[0].instagram ? true : false,\n                dadosLojaYouTube: resultado.data[0].youtube ? true : false,\n                dadosEmail: resultado.data[0].email ? true : false,\n                dadosTotal: resultado\n            }\n        })\n\n\n    }, [])\n    return (\n        <>\n            <Menu />\n            <article className=\"contato-article\">\n                <div className=\"contato-article-div-imagem\">\n                    <img src={Imagem} />\n                </div>\n                <p className=\"contato-article-div-endereco-p\">FALE CONOSCO</p>\n                <hr></hr>\n                <div className=\"contato-article-div-endereco\">\n\n                    {contatos.dadosLojaUm &&\n                        <div>\n                            <ul>\n                                <li>\n                                    <spam><i className=\"fas fa-store\"></i></spam> {contatos.dadosTotal.data[0].lojaUm}\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-map-marker-alt\"></i></spam> {contatos.dadosTotal.data[0].logradouroUm}\n                                    <p>{contatos.dadosTotal.data[0].bairroCidadeUm}</p>\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-phone-volume\"></i></spam> {contatos.dadosTotal.data[0].telefoneUm}\n                                </li>\n                                <li>\n                                    <spam><i class=\"far fa-clock\"></i></spam> {contatos.dadosTotal.data[0].horarioFuncionamentoUm}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                    {contatos.dadosLojaDois &&\n                        <div className=\"menu-header-div-contato-tel-dois menu-header-div-contato-tel\">\n                            <ul>\n                                <li>\n                                    <spam><i className=\"fas fa-store\"></i></spam> {contatos.dadosTotal.data[0].lojaDois}\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-map-marker-alt\"></i></spam> {contatos.dadosTotal.data[0].logradouroDois}\n                                    <p style={{}}>{contatos.dadosTotal.data[0].bairroCidadeDois}</p>\n\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-phone-volume\"></i></spam> {contatos.dadosTotal.data[0].telefoneDois}\n                                </li>\n                                <li>\n                                    <spam><i class=\"far fa-clock\"></i></spam> {contatos.dadosTotal.data[0].horarioFuncionamentoDois}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                    {contatos.dadosLojaTres &&\n                        <div className=\"menu-header-div-contato-tel-tres menu-header-div-contato-tel\">\n                            <ul>\n                                <li>\n                                    <spam><i className=\"fas fa-store\"></i></spam> {contatos.dadosTotal.data[0].lojaTres}\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-map-marker-alt\"></i></spam> {contatos.dadosTotal.data[0].logradouroTres}\n                                    <p style={{}}>{contatos.dadosTotal.data[0].bairroCidadeTres}</p>\n\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-phone-volume\"></i></spam> {contatos.dadosTotal.data[0].telefoneTres}\n                                </li>\n                                <li>\n                                    <spam><i class=\"far fa-clock\"></i></spam> {contatos.dadosTotal.data[0].horarioFuncionamentoTres}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                    {contatos.dadosLojaQuatro &&\n                        <div className=\"menu-header-div-contato-tel-quatro menu-header-div-contato-tel\">\n                            <ul>\n                                <li>\n                                    <spam><i className=\"fas fa-store\"></i></spam> {contatos.dadosTotal.data[0].lojaQuatro}\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-map-marker-alt\"></i></spam> {contatos.dadosTotal.data[0].logradouroQuatro}\n                                    <p style={{}}>{contatos.dadosTotal.data[0].bairroCidadeQuatro}</p>\n\n                                </li>\n                                <li>\n                                    <spam><i className=\"fas fa-phone-volume\"></i></spam> {contatos.dadosTotal.data[0].telefoneQuatro}\n                                </li>\n                                <li>\n                                    <spam><i class=\"far fa-clock\"></i></spam> {contatos.dadosTotal.data[0].horarioFuncionamentoQuatro}\n                                </li>\n\n                            </ul>\n                        </div>\n                    }\n                    {contatos.dadosEmail &&\n                        <a href={`mailto:${contatos.dadosTotal.data[0].email}`} className=\"contato-article-div-endereco-email\"><i class=\"fas fa-envelope\"></i>{contatos.dadosTotal.data[0].email}</a>\n                    }\n                </div>\n                <div className=\"contato-article-div-endereco-outroscontatos\">\n                    <ul className=\"contato-article-div-endereco-outroscontatos-ul\">\n                        {contatos.dadosLojaWhatsApp &&\n                            <li className=\"contato-article-div-endereco-outroscontatos-ul-whatsapp\">\n                                <a href={contatos.dadosTotal.data[0].whatsapp} target=\"_blank\"><i className=\"fab fa-whatsapp fa-3x\"></i></a>\n                            </li>\n                        }\n                        {contatos.dadosLojaFacebook &&\n                            <li className=\"contato-article-div-endereco-outroscontatos-ul-facebook\">\n                                <a href={contatos.dadosTotal.data[0].facebook} target=\"_blank\"> <i className=\"fab fa-facebook fa-3x\"></i></a>\n                            </li>\n                        }\n                        {contatos.dadosLojaInstagram &&\n                            <li className=\"contato-article-div-endereco-outroscontatos-ul-instagram\">\n                                <a href={contatos.dadosTotal.data[0].instagram} target=\"_blank\" > <i className=\"fab fa-instagram fa-3x\"></i></a>\n                            </li>\n                        }\n                        {contatos.dadosLojaYouTube &&\n                            <li className=\"contato-article-div-endereco-outroscontatos-ul-youtube\">\n                                <a href={contatos.dadosTotal.data[0].youtube} target=\"_blank\"> <i className=\"fab fa-youtube fa-3x\"></i></a>\n                            </li>\n                        }\n                    </ul>\n                </div>\n                <div className=\"contato-article-div-mensagem\">\n\n                    <div className=\"contato-article-div-mensagem-div\">\n                        <form className=\"contato-article-div-mensagem-form\">\n                            {/* <p>TENHO INTERESSE</p> */}\n                            {/* <hr style={{ color: \"red\" }} /> */}\n                            <div>\n                                <TextField label=\"Nome\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    inputProps={{\n                                        maxlength: 40\n                                    }}\n                                    style={{ width: \"100%\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, nome: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"E-mail\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    inputProps={{\n                                        maxlength: 40\n                                    }}\n                                    style={{ width: \"100%\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, email: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"DDD\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"20%\" }}\n                                    inputProps={{\n                                        maxlength: 2\n                                    }}\n                                    onBlur={(dados) => {\n\n                                        if (!isNaN(dados.target.value)) {\n                                            setTenhoInteresse(prevState => {\n                                                return { ...prevState, ddd: dados.target.value }\n                                            })\n                                        } else {\n                                            alert(\"Por favor, digite somente números\")\n                                            dados.target.value = \"\"\n                                        }\n                                    }}\n\n                                />\n                                <TextField label=\"Telefone\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"70%\", marginLeft: \"10%\" }}\n                                    inputProps={{\n                                        maxlength: 8\n                                    }}\n                                    onBlur={(dados) => {\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, telefone: dados.target.value }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"DDD\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"20%\" }}\n                                    inputProps={{\n                                        maxlength: 2\n                                    }}\n                                    onBlur={(dados) => {\n                                        if (!isNaN(dados.target.value)) {\n                                            setTenhoInteresse(prevState => {\n                                                return { ...prevState, dddCel: dados.target.value }\n                                            })\n                                        } else {\n                                            alert(\"Por favor, digite somente números\")\n                                            dados.target.value = \"\"\n                                        }\n                                    }}\n                                />\n                                <TextField label=\"Celular\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"70%\", marginLeft: \"10%\" }}\n                                    inputProps={{\n                                        maxlength: 9\n                                    }}\n                                    onBlur={(dados) => {\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, telefoneCel: dados.target.value }\n                                        })\n                                    }}\n                                />\n\n                            </div>\n\n                            <div>\n                                <TextField\n                                    style={{ width: \"100%\", marginTop: \"20px\" }}\n                                    inputProps={{\n                                        maxlength: 500\n                                    }}\n                                    id=\"outlined-multiline-static\"\n                                    label=\"Mensagem\"\n                                    // value={tenhoInteresse.mensagem}\n                                    value={tenhoInteresse.mensagem.toUpperCase()}\n                                    multiline\n                                    rows={5}\n                                    variant=\"outlined\"\n                                    onChange={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, mensagem: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div style={{ marginTop: \"25px\" }}>\n                                <FormControl component=\"fieldset\" className={classes.formControl}>\n                                    <FormLabel component=\"legend\">Quero receber contato por:</FormLabel>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={<Checkbox\n                                                checked={tenhoInteresse.whatsappRetorno}\n                                                onChange={(dados) => {\n                                                    setTenhoInteresse(prevState => {\n                                                        return { ...prevState, whatsappRetorno: dados.target.checked }\n                                                    })\n                                                }}\n                                                name=\"whatsApp\" color=\"primary\" />}\n                                            label=\"WhatsApp\"\n                                        />\n                                        <FormControlLabel\n                                            control={<Checkbox\n                                                checked={tenhoInteresse.emailRetorno}\n                                                onChange={(dados) => {\n                                                    setTenhoInteresse(prevState => {\n                                                        return { ...prevState, emailRetorno: dados.target.checked }\n                                                    })\n                                                }}\n                                                name=\"e-mail\" color=\"primary\" />}\n                                            label=\"E-mail\"\n                                        />\n                                        <FormControlLabel\n                                            control={<Checkbox\n                                                checked={tenhoInteresse.telefoneRetorno}\n                                                onChange={(dados) => {\n                                                    setTenhoInteresse(prevState => {\n                                                        return { ...prevState, telefoneRetorno: dados.target.checked }\n                                                    })\n                                                }}\n                                                name=\"telefone\" color=\"primary\" />}\n                                            label=\"Telefone\"\n                                        />\n                                    </FormGroup>\n                                </FormControl>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"50px\" }}>\n                                <ModalQueroContato tenhoInteresse={tenhoInteresse} />\n                            </div>\n\n                        </form>\n\n                    </div>\n\n                </div>\n\n            </article>\n            <Footer />\n        </>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/contato/modalQueroContato.js",["217","218","219"],"/home/marco/Documents/project_react/template-carros/client/src/components/vender/vender.jsx",["220","221","222","223","224"],"import { React, useEffect, useState } from 'react';\nimport Menu from \"../menu/menu\"\nimport Footer from \"../footer/footer\"\nimport ModalQueroVender from \"./modalQueroVender\"\nimport \"./vender.css\"\nimport Imagem from \"./imagemVenda.jpg\"\nimport BuscaBD from \"../fetchBackEnd/api\"\n\nimport {\n    TextField,\n    FormControlLabel, FormGroup, Checkbox, FormControl, FormLabel, useEventCallback\n} from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            // width: '95%',\n        },\n    },\n}));\n\nexport default function Vender() {\n\n    const classes = useStyles();\n\n    const [tenhoInteresse, setTenhoInteresse] = useState({\n        nome: false,\n        email: false,\n        assunto: \"TENHO INTERESSE EM VENDER MEU CARRO!\",\n        ddd: false,\n        telefone: false,\n        dddCel: false,\n        telefoneCel: false,\n        marca: false,\n        modelo: false,\n        anoModelo: false,\n        cor: false,\n        kilometro: false,\n        valorAproximado: false,\n        primeiroProprietario: false,\n        seguro: false,\n        sinistro: false,\n        observacao: \"\",\n        whatsappRetorno: true,\n        emailRetorno: true,\n        telefoneRetorno: true,\n    })\n\n\n\n    return (\n        <>\n            <Menu />\n            <article className=\"vender-article\">\n                <div className=\"vender-article-div-imagem\">\n                    <img src={Imagem}></img>\n                </div>\n\n                <menu className=\"vender-article-menu\">\n\n                    <div className=\"vender-article-menu-div\">\n                        <p className=\"vender-article-menu-div-p\">DESCRIÇÃO DO VEÍCULO</p>\n                        <hr></hr>\n                        <form className=\"vender-article-menu-div-form\">\n                            <p>\"Os campos com * são de preenchimento obrigatórios.\"</p>\n                            <div>\n                                <TextField label=\"Nome *\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    inputProps={{\n                                        maxlength: 40\n                                    }}\n                                    style={{ width: \"100%\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, nome: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"E-mail *\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    inputProps={{\n                                        maxlength: 40\n                                    }}\n                                    style={{ width: \"100%\", marginTop: \"15px\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, email: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"DDD *\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"20%\", marginTop: \"15px\" }}\n                                    inputProps={{\n                                        maxlength: 2\n                                    }}\n                                    onBlur={(dados) => {\n\n                                        if (!isNaN(dados.target.value)) {\n                                            setTenhoInteresse(prevState => {\n                                                return { ...prevState, ddd: dados.target.value }\n                                            })\n                                        } else {\n                                            alert(\"Por favor, digite somente números\")\n                                            dados.target.value = \"\"\n                                        }\n                                    }}\n\n                                />\n                                <TextField label=\"Telefone *\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"70%\", marginLeft: \"10%\", marginTop: \"15px\" }}\n                                    inputProps={{\n                                        maxlength: 8\n                                    }}\n                                    onBlur={(dados) => {\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, telefone: dados.target.value }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"DDD\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"20%\", marginTop: \"15px\" }}\n                                    inputProps={{\n                                        maxlength: 2\n                                    }}\n                                    onBlur={(dados) => {\n                                        if (!isNaN(dados.target.value)) {\n                                            setTenhoInteresse(prevState => {\n                                                return { ...prevState, dddCel: dados.target.value }\n                                            })\n                                        } else {\n                                            alert(\"Por favor, digite somente números\")\n                                            dados.target.value = \"\"\n                                        }\n                                    }}\n                                />\n                                <TextField label=\"Celular\" id=\"standard-size-small\" size=\"small\" type=\"tel\"\n                                    style={{ width: \"70%\", marginLeft: \"10%\", marginTop: \"15px\" }}\n                                    inputProps={{\n                                        maxlength: 9\n                                    }}\n                                    onBlur={(dados) => {\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, telefoneCel: dados.target.value }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"Marca *\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    inputProps={{\n                                        maxlength: 10\n                                    }}\n                                    style={{ width: \"100%\", marginTop: \"15px\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, marca: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"Modelo *\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    inputProps={{\n                                        maxlength: 40\n                                    }}\n                                    style={{ width: \"100%\", marginTop: \"15px\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, modelo: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"Ano modelo *\" id=\"standard-size-small\" size=\"small\" type=\"number\"\n                                    inputProps={{\n                                        maxlength: 10\n                                    }}\n                                    style={{ width: \"100%\", marginTop: \"15px\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, anoModelo: dados.target.value }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"Cor *\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    inputProps={{\n                                        maxlength: 10\n                                    }}\n                                    style={{ width: \"100%\", marginTop: \"15px\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, cor: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"Kilômetragem *\" id=\"standard-size-small\" size=\"small\" type=\"text\"\n                                    inputProps={{\n                                        maxlength: 10\n                                    }}\n                                    style={{ width: \"100%\", marginTop: \"15px\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, kilometro: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <TextField label=\"Valor aproximado *\" id=\"standard-size-small\" size=\"small\" type=\"number\"\n                                    inputProps={{\n                                        maxlength: 10\n                                    }}\n                                    style={{ width: \"100%\", marginTop: \"15px\", marginBottom: \"12px\" }}\n                                    onBlur={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, valorAproximado: dados.target.value }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox\n                                        checked={tenhoInteresse.primeiroProprietario}\n                                        onChange={(dados) => {\n                                            setTenhoInteresse(prevState => {\n                                                return { ...prevState, primeiroProprietario: dados.target.checked }\n                                            })\n                                        }}\n                                        name=\"whatsApp\" color=\"primary\" />}\n                                    label=\"Primeiro proprietário\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox\n                                        checked={tenhoInteresse.seguro}\n                                        onChange={(dados) => {\n                                            setTenhoInteresse(prevState => {\n                                                return { ...prevState, seguro: dados.target.checked }\n                                            })\n                                        }}\n                                        name=\"e-mail\" color=\"primary\" />}\n                                    label=\"Possui seguro\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox\n                                        checked={tenhoInteresse.sinistro}\n                                        onChange={(dados) => {\n                                            setTenhoInteresse(prevState => {\n                                                return { ...prevState, sinistro: dados.target.checked }\n                                            })\n                                        }}\n                                        name=\"telefone\" color=\"primary\" />}\n                                    label=\"Houve sinistro\"\n                                />\n                            </FormGroup>\n\n                            <div>\n                                <TextField\n                                    style={{ width: \"100%\", marginTop: \"20px\" }}\n                                    inputProps={{\n                                        maxlength: 500\n                                    }}\n                                    id=\"outlined-multiline-static\"\n                                    label=\"Observação *\"\n                                    // value={tenhoInteresse.mensagem}\n                                    value={tenhoInteresse.observacao}\n                                    multiline\n                                    rows={5}\n                                    variant=\"outlined\"\n                                    onChange={(dados) => {\n                                        dados.target.value = dados.target.value.toUpperCase()\n                                        setTenhoInteresse(prevState => {\n                                            return { ...prevState, observacao: dados.target.value.toUpperCase() }\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div style={{ marginTop: \"25px\", marginTop: \"15px\" }}>\n                                <FormControl component=\"fieldset\" className={classes.formControl}>\n                                    <FormLabel component=\"legend\">Quero receber contato por:</FormLabel>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={<Checkbox\n                                                checked={tenhoInteresse.whatsappRetorno}\n                                                onChange={(dados) => {\n                                                    setTenhoInteresse(prevState => {\n                                                        return { ...prevState, whatsappRetorno: dados.target.checked }\n                                                    })\n                                                }}\n                                                name=\"whatsApp\" color=\"primary\" />}\n                                            label=\"WhatsApp\"\n                                        />\n                                        <FormControlLabel\n                                            control={<Checkbox\n                                                checked={tenhoInteresse.emailRetorno}\n                                                onChange={(dados) => {\n                                                    setTenhoInteresse(prevState => {\n                                                        return { ...prevState, emailRetorno: dados.target.checked }\n                                                    })\n                                                }}\n                                                name=\"e-mail\" color=\"primary\" />}\n                                            label=\"E-mail\"\n                                        />\n                                        <FormControlLabel\n                                            control={<Checkbox\n                                                checked={tenhoInteresse.telefoneRetorno}\n                                                onChange={(dados) => {\n                                                    setTenhoInteresse(prevState => {\n                                                        return { ...prevState, telefoneRetorno: dados.target.checked }\n                                                    })\n                                                }}\n                                                name=\"telefone\" color=\"primary\" />}\n                                            label=\"Telefone\"\n                                        />\n                                    </FormGroup>\n                                </FormControl>\n                            </div>\n                            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"50px\" }}>\n                                <ModalQueroVender tenhoInteresse={tenhoInteresse} />\n                            </div>\n\n                        </form>\n                    </div>\n\n                </menu>\n\n            </article>\n            <Footer />\n        </>\n\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/vender/modalQueroVender.js",["225","226","227"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, Button } from '@material-ui/core/';\nimport BuscaBD from \"../fetchBackEnd/api\"\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport default function ModalRequestInfo(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n            <h2 id=\"simple-modal-title\">Dados enviados com sucesso.</h2>\n            <p id=\"simple-modal-description\">\n                Obrigado pelo o interesse. Iremos retornar o contato o mais rápido possível.\n            </p>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <i class=\"far fa-smile-wink fa-4x\"></i></div>\n\n        </div>\n    );\n    async function EnviaDados() {\n        const classBuscaBD = new BuscaBD\n        const resultado = classBuscaBD.SendEmailVender(props.tenhoInteresse)\n\n    }\n\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={() => {\n                    if (!props.tenhoInteresse.nome || !props.tenhoInteresse.email ||\n                        !props.tenhoInteresse.ddd || !props.tenhoInteresse.telefone\n                        || !props.tenhoInteresse.marca || !props.tenhoInteresse.modelo\n                        || !props.tenhoInteresse.anoModelo || !props.tenhoInteresse.cor\n                        || !props.tenhoInteresse.valorAproximado || !props.tenhoInteresse.observacao) {\n                        alert(\"Os campos com * devem ser preenchidos.\")\n                        console.log(props.tenhoInteresse)\n                        return\n                    }\n                    EnviaDados()\n                    handleOpen()\n                }}\n            >\n                ENVIAR\n            </Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n            </Modal>\n        </div>\n    );\n}\n","/home/marco/Documents/project_react/template-carros/client/src/components/localizacao/localizacao.jsx",["228","229","230"],"import React from 'react';\nimport Menu from \"../menu/menu\"\nimport Footer from \"../footer/footer\"\nimport \"./localizacao.css\"\n\nexport default function Localizacao() {\n\n    return (\n        <>\n            <Menu />\n            <article className=\"localizacao-article\">\n\n                <div className=\"localizacao-article-divum\">\n                    <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3656.549803012391!2d-46.58667978543261!3d-23.5846071846714!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x94ce5c0decabc7ed%3A0x6ad7690efb4256a4!2sAv.%20Professor%20Luiz%20Ign%C3%A1cio%20Anhaia%20Mello%2C%20900%20-%20Q.ta%20da%20Paineira%2C%20S%C3%A3o%20Paulo%20-%20SP%2C%2003134-001!5e0!3m2!1spt-PT!2sbr!4v1614881609707!5m2!1spt-PT!2sbr\" style={{ width: \"100%\", height: \"100%\" }} allowfullscreen=\"\" loading=\"lazy\"></iframe>\n                </div>\n                <div className=\"localizacao-article-divdois\">\n                    <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3657.1542962228223!2d-46.517919185433165!3d-23.562901284682088!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x94ce675f8df15f41%3A0xea04efc43de3139c!2sAv.%20Rio%20das%20Pedras%2C%20800%20-%20Jardim%20Aricanduva%2C%20S%C3%A3o%20Paulo%20-%20SP%2C%2003454-010!5e0!3m2!1spt-PT!2sbr!4v1614881858957!5m2!1spt-PT!2sbr\" style={{ width: \"100%\", height: \"100%\" }} allowfullscreen=\"\" loading=\"lazy\"></iframe>\n                </div>\n                <div className=\"localizacao-article-divtres\">\n                    <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3657.8101755568046!2d-46.609722685433596!3d-23.539328884693912!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x94ce5927512993c1%3A0xac4fd4cf13d56d3c!2sAv.%20Celso%20Garcia%2C%20500%20-%20Br%C3%A1s%2C%20S%C3%A3o%20Paulo%20-%20SP%2C%2003014-000!5e0!3m2!1spt-PT!2sbr!4v1614881964625!5m2!1spt-PT!2sbr\" style={{ width: \"100%\", height: \"100%\" }} allowfullscreen=\"\" loading=\"lazy\"></iframe>\n                </div>\n\n            </article>\n            <Footer />\n        </>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/login/login.jsx",["231"],"import { React, useState } from 'react';\nimport ForgetPassword from \"./modaForgetPassword\"\nimport './login.css'\n\nimport BuscaBD from \"../../fetchBackEnd/api\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '97%',\n        },\n    },\n}));\n\n\nexport default function Login(e) {\n    // e.preventDefault()\n    const classes = useStyles();\n\n    const [credentials, setCredentials] = useState({\n        user: false,\n        password: false\n    })\n\n    function Redirect() {\n        window.location.href = (\"http://192.168.0.150:3000/painelAdministrativo\")\n    }\n\n    async function Login() {\n        const classBuscaBD = new BuscaBD\n        const { data } = await classBuscaBD.LoginPainel(credentials)\n        console.log(data)\n        if (!data.auth) { alert(\"Usuário ou senhas incorretos\") } else {\n            const dados = { codeUser: data.codeUser, tk: data.token, }\n            window.localStorage.setItem(\"userSession\", JSON.stringify(dados))\n            Redirect()\n        }\n    }\n\n    return (\n\n        <article className=\"login-article\">\n            <div className=\"login-article-div-titulo\">\n                <p>PAINEL ADMINISTRATIVO</p>\n            </div>\n\n\n            <div className=\"login-article-form-div\">\n                <p className=\"login-article-form-div-login-p\">Sign In</p>\n                <form className=\"login-article-form\">\n                    <form className={classes.root} noValidate autoComplete=\"off\">\n                        <TextField label=\"E-mail *\" autocomplete=\"email\" id=\"email\" name=\"email\" type=\"email\"\n                            onBlur={(dados) => {\n                                setCredentials(prevState => {\n                                    return { ...prevState, user: dados.target.value }\n                                })\n                            }}\n                        />\n                        <TextField label=\"Senha *\" autocomplete=\"current-password\" id=\"password\" name=\"password\" type=\"password\"\n                            onBlur={(dados) => {\n                                setCredentials(prevState => {\n                                    return { ...prevState, password: dados.target.value }\n                                })\n                            }}\n                        />\n                        <Button variant=\"contained\" color=\"primary\" style={{ marginTop: \"30px\" }}\n                            onClick={(e) => { Login(e) }}\n                        >\n                            Sign In\n                        </Button>\n                        <hr></hr>\n                    </form>\n                    {/* <p className=\"login-article-form-div-login-esqueceusenha\">Esqueceu a senha ?</p> */}\n                    <ForgetPassword />\n                </form>\n            </div>\n\n        </article>\n    )\n}","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/login/modaForgetPassword.js",["232"],"import { React, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport BuscaBD from \"../../fetchBackEnd/api\"\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 500,\n        height: 250,\n        overflow: \"scroll\",\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport default function SimpleModal(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n\n    const [email, setEmail] = useState()\n    const [mensagem, setMensagem] = useState()\n\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    async function ChangePassword() {\n        const classBuscaBD = new BuscaBD\n        const { data } = await classBuscaBD.ForgetPassword(email)\n        setMensagem(data)\n    }\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n\n            <p\n                style={{ fontSize: \"20px\" }}\n            >Digite seu user acount abaixo. Será enviado um email com novas credenciais.</p>\n\n            <TextField label=\"E-mail *\" autocomplete=\"email\" id=\"email\" name=\"email\" type=\"email\" variant=\"outlined\"\n                style={{ width: \"100%\" }}\n                onBlur={(dados) => {\n                    setEmail(dados.target.value)\n                }}\n            />\n            <p style={{ margin: \"10px\" }}>{mensagem}</p>\n\n            <Button\n\n                onClick={() => {\n                    ChangePassword()\n\n                }}\n                style={{ left: \"40%\", top: \"12%\" }}\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n\n            >ENVIAR\n            </Button>\n        </div>\n    );\n\n    return (\n        <div>\n            {/* <button type=\"button\" onClick={handleOpen}>\n                Esqueci minha senha\n      </button> */}\n            <p className=\"login-article-form-div-login-esqueceusenha\" style={{ cursor: \"pointer\" }}\n                onClick={handleOpen}\n            >Esqueceu a senha ?</p>\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n\n            </Modal>\n        </div>\n    );\n}\n","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painel/modalProfile.js",["233","234","235","236"],{"ruleId":"237","severity":1,"message":"238","line":5,"column":40,"nodeType":"239","messageId":"240","endLine":5,"endColumn":48},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"237","severity":1,"message":"245","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"246","line":1,"column":28,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"248","line":27,"column":15,"nodeType":"249","endLine":48,"endColumn":6},{"ruleId":"247","severity":1,"message":"250","line":48,"column":8,"nodeType":"251","endLine":48,"endColumn":10,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":136,"column":37,"nodeType":"255","endLine":136,"endColumn":100},{"ruleId":"253","severity":1,"message":"254","line":141,"column":37,"nodeType":"255","endLine":141,"endColumn":100},{"ruleId":"253","severity":1,"message":"254","line":146,"column":37,"nodeType":"255","endLine":146,"endColumn":102},{"ruleId":"253","severity":1,"message":"254","line":151,"column":37,"nodeType":"255","endLine":151,"endColumn":99},{"ruleId":"247","severity":1,"message":"248","line":11,"column":15,"nodeType":"249","endLine":18,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":12,"column":30,"nodeType":"258","messageId":"259","endLine":12,"endColumn":41,"fix":"260"},{"ruleId":"247","severity":1,"message":"261","line":137,"column":8,"nodeType":"251","endLine":137,"endColumn":10,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":199,"column":41,"nodeType":"249","messageId":"265","endLine":199,"endColumn":43},{"ruleId":"263","severity":1,"message":"264","line":332,"column":64,"nodeType":"249","messageId":"265","endLine":332,"endColumn":66},{"ruleId":"266","severity":1,"message":"267","line":364,"column":21,"nodeType":"239","messageId":"268","endLine":364,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":793,"column":61,"nodeType":"255","endLine":793,"endColumn":132},{"ruleId":"263","severity":1,"message":"264","line":25,"column":56,"nodeType":"249","messageId":"265","endLine":25,"endColumn":58},{"ruleId":"237","severity":1,"message":"269","line":6,"column":11,"nodeType":"239","messageId":"240","endLine":6,"endColumn":23},{"ruleId":"247","severity":1,"message":"248","line":33,"column":15,"nodeType":"249","endLine":53,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":45,"column":30,"nodeType":"258","messageId":"259","endLine":45,"endColumn":41,"fix":"270"},{"ruleId":"237","severity":1,"message":"271","line":66,"column":12,"nodeType":"239","messageId":"240","endLine":66,"endColumn":29},{"ruleId":"237","severity":1,"message":"272","line":66,"column":31,"nodeType":"239","messageId":"240","endLine":66,"endColumn":51},{"ruleId":"247","severity":1,"message":"248","line":21,"column":15,"nodeType":"249","endLine":40,"endColumn":6},{"ruleId":"247","severity":1,"message":"273","line":40,"column":8,"nodeType":"251","endLine":40,"endColumn":10,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":49,"column":9,"nodeType":"277","messageId":"278","endLine":49,"endColumn":23},{"ruleId":"247","severity":1,"message":"248","line":68,"column":15,"nodeType":"249","endLine":79,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":70,"column":30,"nodeType":"258","messageId":"259","endLine":70,"endColumn":41,"fix":"279"},{"ruleId":"256","severity":1,"message":"257","line":138,"column":30,"nodeType":"258","messageId":"259","endLine":138,"endColumn":41,"fix":"280"},{"ruleId":"263","severity":1,"message":"264","line":149,"column":65,"nodeType":"249","messageId":"265","endLine":149,"endColumn":67},{"ruleId":"237","severity":1,"message":"281","line":156,"column":19,"nodeType":"239","messageId":"240","endLine":156,"endColumn":28},{"ruleId":"256","severity":1,"message":"257","line":164,"column":30,"nodeType":"258","messageId":"259","endLine":164,"endColumn":41,"fix":"282"},{"ruleId":"266","severity":1,"message":"283","line":174,"column":21,"nodeType":"239","messageId":"268","endLine":174,"endColumn":29},{"ruleId":"237","severity":1,"message":"284","line":1,"column":38,"nodeType":"239","messageId":"240","endLine":1,"endColumn":42},{"ruleId":"263","severity":1,"message":"264","line":91,"column":37,"nodeType":"249","messageId":"265","endLine":91,"endColumn":39},{"ruleId":"247","severity":1,"message":"248","line":43,"column":15,"nodeType":"249","endLine":51,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":44,"column":30,"nodeType":"258","messageId":"259","endLine":44,"endColumn":41,"fix":"285"},{"ruleId":"247","severity":1,"message":"286","line":51,"column":8,"nodeType":"251","endLine":51,"endColumn":10,"suggestions":"287"},{"ruleId":"247","severity":1,"message":"248","line":11,"column":15,"nodeType":"249","endLine":19,"endColumn":6},{"ruleId":"275","severity":1,"message":"288","line":29,"column":13,"nodeType":"277","messageId":"278","endLine":29,"endColumn":20},{"ruleId":"256","severity":1,"message":"257","line":61,"column":30,"nodeType":"258","messageId":"259","endLine":61,"endColumn":41,"fix":"289"},{"ruleId":"247","severity":1,"message":"248","line":78,"column":15,"nodeType":"249","endLine":101,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":82,"column":34,"nodeType":"258","messageId":"259","endLine":82,"endColumn":45,"fix":"290"},{"ruleId":"256","severity":1,"message":"257","line":90,"column":30,"nodeType":"258","messageId":"259","endLine":90,"endColumn":41,"fix":"291"},{"ruleId":"247","severity":1,"message":"292","line":101,"column":8,"nodeType":"251","endLine":101,"endColumn":10,"suggestions":"293"},{"ruleId":"256","severity":1,"message":"257","line":133,"column":30,"nodeType":"258","messageId":"259","endLine":133,"endColumn":41,"fix":"294"},{"ruleId":"237","severity":1,"message":"295","line":11,"column":24,"nodeType":"239","messageId":"240","endLine":11,"endColumn":29},{"ruleId":"237","severity":1,"message":"296","line":11,"column":31,"nodeType":"239","messageId":"240","endLine":11,"endColumn":41},{"ruleId":"237","severity":1,"message":"297","line":52,"column":12,"nodeType":"239","messageId":"240","endLine":52,"endColumn":20},{"ruleId":"237","severity":1,"message":"298","line":52,"column":22,"nodeType":"239","messageId":"240","endLine":52,"endColumn":33},{"ruleId":"247","severity":1,"message":"248","line":56,"column":15,"nodeType":"249","endLine":68,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":57,"column":30,"nodeType":"258","messageId":"259","endLine":57,"endColumn":41,"fix":"299"},{"ruleId":"247","severity":1,"message":"300","line":68,"column":8,"nodeType":"251","endLine":68,"endColumn":10,"suggestions":"301"},{"ruleId":"237","severity":1,"message":"302","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":58,"column":30,"nodeType":"258","messageId":"259","endLine":58,"endColumn":41,"fix":"303"},{"ruleId":"237","severity":1,"message":"281","line":59,"column":15,"nodeType":"239","messageId":"240","endLine":59,"endColumn":24},{"ruleId":"275","severity":1,"message":"288","line":31,"column":13,"nodeType":"277","messageId":"278","endLine":31,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":49,"column":15,"nodeType":"249","endLine":64,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":50,"column":30,"nodeType":"258","messageId":"259","endLine":50,"endColumn":41,"fix":"304"},{"ruleId":"247","severity":1,"message":"305","line":64,"column":8,"nodeType":"251","endLine":64,"endColumn":10,"suggestions":"306"},{"ruleId":"275","severity":1,"message":"288","line":31,"column":13,"nodeType":"277","messageId":"278","endLine":31,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":48,"column":15,"nodeType":"249","endLine":63,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":49,"column":30,"nodeType":"258","messageId":"259","endLine":49,"endColumn":41,"fix":"307"},{"ruleId":"247","severity":1,"message":"305","line":63,"column":8,"nodeType":"251","endLine":63,"endColumn":10,"suggestions":"308"},{"ruleId":"247","severity":1,"message":"248","line":57,"column":15,"nodeType":"249","endLine":79,"endColumn":6},{"ruleId":"309","severity":1,"message":"310","line":85,"column":21,"nodeType":"255","endLine":85,"endColumn":41},{"ruleId":"253","severity":1,"message":"254","line":179,"column":33,"nodeType":"255","endLine":179,"endColumn":96},{"ruleId":"253","severity":1,"message":"254","line":184,"column":33,"nodeType":"255","endLine":184,"endColumn":96},{"ruleId":"253","severity":1,"message":"254","line":189,"column":33,"nodeType":"255","endLine":189,"endColumn":98},{"ruleId":"253","severity":1,"message":"254","line":194,"column":33,"nodeType":"255","endLine":194,"endColumn":95},{"ruleId":"237","severity":1,"message":"302","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":58,"column":30,"nodeType":"258","messageId":"259","endLine":58,"endColumn":41,"fix":"311"},{"ruleId":"237","severity":1,"message":"281","line":59,"column":15,"nodeType":"239","messageId":"240","endLine":59,"endColumn":24},{"ruleId":"237","severity":1,"message":"245","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"312","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":15},{"ruleId":"237","severity":1,"message":"313","line":11,"column":68,"nodeType":"239","messageId":"240","endLine":11,"endColumn":84},{"ruleId":"309","severity":1,"message":"310","line":59,"column":21,"nodeType":"255","endLine":59,"endColumn":39},{"ruleId":"275","severity":1,"message":"314","line":298,"column":62,"nodeType":"277","messageId":"278","endLine":298,"endColumn":71},{"ruleId":"237","severity":1,"message":"302","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":58,"column":30,"nodeType":"258","messageId":"259","endLine":58,"endColumn":41,"fix":"315"},{"ruleId":"237","severity":1,"message":"281","line":59,"column":15,"nodeType":"239","messageId":"240","endLine":59,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":14,"column":21,"nodeType":"255","endLine":14,"endColumn":507},{"ruleId":"316","severity":1,"message":"317","line":17,"column":21,"nodeType":"255","endLine":17,"endColumn":480},{"ruleId":"316","severity":1,"message":"317","line":20,"column":21,"nodeType":"255","endLine":20,"endColumn":466},{"ruleId":"256","severity":1,"message":"257","line":35,"column":30,"nodeType":"258","messageId":"259","endLine":35,"endColumn":41,"fix":"318"},{"ruleId":"256","severity":1,"message":"257","line":53,"column":30,"nodeType":"258","messageId":"259","endLine":53,"endColumn":41,"fix":"319"},{"ruleId":"247","severity":1,"message":"248","line":61,"column":15,"nodeType":"249","endLine":76,"endColumn":6},{"ruleId":"256","severity":1,"message":"257","line":65,"column":34,"nodeType":"258","messageId":"259","endLine":65,"endColumn":45,"fix":"320"},{"ruleId":"256","severity":1,"message":"257","line":80,"column":34,"nodeType":"258","messageId":"259","endLine":80,"endColumn":45,"fix":"321"},{"ruleId":"256","severity":1,"message":"257","line":93,"column":38,"nodeType":"258","messageId":"259","endLine":93,"endColumn":49,"fix":"322"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["323"],"no-negated-in-lhs",["324"],"'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.dados'. Either include it or remove the dependency array.","ArrayExpression",["325"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"326","text":"327"},"React Hook useEffect has missing dependencies: 'props.dados' and 'props.tipoFormulario'. Either include them or remove the dependency array.",["328"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-redeclare","'stringiFy' is already defined.","redeclared","'deletaImagem' is assigned a value but never used.",{"range":"329","text":"327"},"'mensagemDeRetorno' is assigned a value but never used.","'setMensagemDeRetorno' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dadosListaAnuncio.paginaAvanca' and 'dadosListaAnuncio.paginaRetorna'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDadosListaAnuncio' needs the current value of 'dadosListaAnuncio.paginaRetorna'.",["330"],"no-dupe-keys","Duplicate key 'logradouroTres'.","ObjectExpression","unexpected",{"range":"331","text":"327"},{"range":"332","text":"327"},"'resultado' is assigned a value but never used.",{"range":"333","text":"327"},"'stringFy' is already defined.","'memo' is defined but never used.",{"range":"334","text":"327"},"React Hook useEffect has missing dependencies: 'imagensDestaque.paginaAvanca' and 'imagensDestaque.paginaRetorna'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setImagensDestaque' needs the current value of 'imagensDestaque.paginaRetorna'.",["335"],"Duplicate key '& > *'.",{"range":"336","text":"327"},{"range":"337","text":"327"},{"range":"338","text":"327"},"React Hook useEffect has missing dependencies: 'carrosEstoque.paginaAvanca', 'carrosEstoque.paginaRetorna', and 'props.match.params.key'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCarrosEstoque' needs the current value of 'carrosEstoque.paginaRetorna'.",["339"],{"range":"340","text":"327"},"'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'contatos' is assigned a value but never used.","'setContatos' is assigned a value but never used.",{"range":"341","text":"327"},"React Hook useEffect has a missing dependency: 'props.match.params.idanuncio'. Either include it or remove the dependency array.",["342"],"'rand' is defined but never used.",{"range":"343","text":"327"},{"range":"344","text":"327"},"React Hook useEffect has missing dependencies: 'carrosEstoque.paginaAvanca' and 'carrosEstoque.paginaRetorna'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCarrosEstoque' needs the current value of 'carrosEstoque.paginaRetorna'.",["345"],{"range":"346","text":"327"},["347"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"348","text":"327"},"'BuscaBD' is defined but never used.","'useEventCallback' is defined but never used.","Duplicate key 'marginTop'.",{"range":"349","text":"327"},"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",{"range":"350","text":"327"},{"range":"351","text":"327"},{"range":"352","text":"327"},{"range":"353","text":"327"},{"range":"354","text":"327"},"no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},[387,387],"()",{"desc":"357","fix":"358"},[1726,1726],{"desc":"359","fix":"360"},[1762,1762],[4839,4839],[6298,6298],[1184,1184],{"desc":"361","fix":"362"},[1725,1725],[2730,2730],[3126,3126],{"desc":"363","fix":"364"},[4828,4828],[1566,1566],{"desc":"365","fix":"366"},[1672,1672],[1431,1431],{"desc":"367","fix":"368"},[1426,1426],{"desc":"367","fix":"369"},[1672,1672],[1672,1672],[863,863],[1377,1377],[1989,1989],[2604,2604],[3279,3279],"Update the dependencies array to be: [props.dados]",{"range":"370","text":"371"},"Update the dependencies array to be: [props.dados, props.tipoFormulario]",{"range":"372","text":"373"},"Update the dependencies array to be: [dadosListaAnuncio.paginaAvanca, dadosListaAnuncio.paginaRetorna]",{"range":"374","text":"375"},"Update the dependencies array to be: [imagensDestaque.paginaAvanca, imagensDestaque.paginaRetorna]",{"range":"376","text":"377"},"Update the dependencies array to be: [carrosEstoque.paginaAvanca, carrosEstoque.paginaRetorna, props.match.params.key]",{"range":"378","text":"379"},"Update the dependencies array to be: [props.match.params.idanuncio]",{"range":"380","text":"381"},"Update the dependencies array to be: [carrosEstoque.paginaAvanca, carrosEstoque.paginaRetorna]",{"range":"382","text":"383"},{"range":"384","text":"383"},[1610,1612],"[props.dados]",[4324,4326],"[props.dados, props.tipoFormulario]",[1543,1545],"[dadosListaAnuncio.paginaAvanca, dadosListaAnuncio.paginaRetorna]",[1500,1502],"[imagensDestaque.paginaAvanca, imagensDestaque.paginaRetorna]",[3488,3490],"[carrosEstoque.paginaAvanca, carrosEstoque.paginaRetorna, props.match.params.key]",[2196,2198],"[props.match.params.idanuncio]",[1926,1928],"[carrosEstoque.paginaAvanca, carrosEstoque.paginaRetorna]",[1917,1919]]