[{"/home/marco/Documents/project_react/template-carros/client/src/index.js":"1","/home/marco/Documents/project_react/template-carros/client/src/App.js":"2","/home/marco/Documents/project_react/template-carros/client/src/components/menu/menu.jsx":"3","/home/marco/Documents/project_react/template-carros/client/src/components/carroselprincipal/carrosselPrincipal.jsx":"4","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painelAdministrativo.jsx":"5","/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/publicacao/publicacao.jsx":"6","/home/marco/Documents/project_react/template-carros/client/src/components/fetchBackEnd/api.js":"7"},{"size":1239,"mtime":1611373564548,"results":"8","hashOfConfig":"9"},{"size":285,"mtime":1611109079792,"results":"10","hashOfConfig":"9"},{"size":2902,"mtime":1611172608551,"results":"11","hashOfConfig":"9"},{"size":1255,"mtime":1611188030313,"results":"12","hashOfConfig":"9"},{"size":4043,"mtime":1611478451334,"results":"13","hashOfConfig":"9"},{"size":47881,"mtime":1611484571655,"results":"14","hashOfConfig":"9"},{"size":714,"mtime":1611483739904,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"lcbjv5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/marco/Documents/project_react/template-carros/client/src/index.js",[],["33","34"],"/home/marco/Documents/project_react/template-carros/client/src/App.js",[],"/home/marco/Documents/project_react/template-carros/client/src/components/menu/menu.jsx",[],"/home/marco/Documents/project_react/template-carros/client/src/components/carroselprincipal/carrosselPrincipal.jsx",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painelAdministrativo.jsx",[],"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/publicacao/publicacao.jsx",["35","36"],"import { React, useState, useEffect } from 'react';\nimport BuscaBD from \"../../fetchBackEnd/api\"\nimport FormData from 'form-data'\nimport \"./publicacao.css\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n    TextField, FormControlLabel,\n    InputLabel, Select, FormControl\n} from '@material-ui/core/';\n\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\n\n\nexport default function Formulario(props) {\n    console.log(props.tipoFormulario)\n    const [render, setRender] = useState(1930)//recebe loop para gerar os anos para seleção do ano do carro\n\n    const [formulario, SetFormulario] = useState({\n        valor: 0,\n        marca: \"\",\n        ano: 2010,\n        modelo: \"\",\n        motor: \"\",\n        kilometro: 0,\n        combustivel: \"\",\n        porta: 4,\n        cambio: \"\",\n        carroceria: \"\",\n        finalPlaca: 0,\n        sobre: \"\",\n        aceitaTroca: false,\n        IPVA: false,\n        licenciado: false,\n        airbag: false,\n        alarme: false,\n        cdplayer: false,\n        dvdplayer: false,\n        gps: false,\n        radio: false,\n        radioTocaFita: false,\n        computadorBordo: false,\n        controleTracao: false,\n        controleVelocidade: false,\n        desembacadorTraseiro: false,\n        limpadorTraseiro: false,\n        arCondicionado: false,\n        arQuente: false,\n        freioAbs: false,\n        retrovisoresEletricos: false,\n        retrovisoresFotocromicos: false,\n        rodaLigaLeve: false,\n        sensorChuva: false,\n        sensorEstacionamento: false,\n        tetoSolar: false,\n        travasEletricas: false,\n        vidrosEletricos: false,\n        direcaoHidraulica: false,\n        volanteAltura: false,\n        bancoCouro: false,\n        encostoCabecaTraseiro: false,\n        bancosFrenteAquecimento: false,\n        tracaoQuatroRodas: false,\n        protetorCacamba: false,\n        farolXenonio: false,\n        imagensPath: false\n    })\n\n\n    const [buscaParaAlterar, setBuscaParaAlterar] = useState(\"\")\n    //campo pesquisa para alterar\n\n\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            margin: theme.spacing(1),\n        },\n    }));\n    const classes = useStyles();\n\n    //########################  FUNÇÕES PARA CADASTRO //########################\n    useEffect(() => {\n        var anoAtual = new Date().getFullYear()\n        var anoInicio = 1930\n        var render = []\n        while (anoInicio <= anoAtual) {\n            render.push(<option >{anoInicio}</option>)\n            anoInicio++\n        }\n        setRender(render)\n    }, [])\n\n    async function UploadImagens(event) {//fund inde vai fazer upload imagens e retornar o nome e caminho de cada imagem no node\n        event.preventDefault()\n        if (formulario.imagensPath.length > 12) {\n            alert(\"SELECIONE ATÉ 12 IMAGENS\")\n            return\n        }\n        const classBuscaBD = new BuscaBD()// classe da Api onde está conf  o Axios\n        const dadosImagens = new FormData()//FormData classe que permite o multer identificar as imagens\n        for (var i = 0; i < formulario.imagensPath.length; i++) {\n            dadosImagens.append(\"files\", formulario.imagensPath[i])\n        }\n        //para enviar imagens tem q ser pelo FormData\n        //primeiro coloca eles numa array com o loop for. Necessário quando é mais de uma imagem\n\n        const retornaImagenslLocationNodeMulter = await classBuscaBD.BuscaBDPostImagem(dadosImagens)\n        //faz o upload das imagens e o node vai retornar as imagens recebidas\n        console.log(retornaImagenslLocationNodeMulter)\n        let imagensPath = []\n        retornaImagenslLocationNodeMulter.data.map((dados) => {\n            imagensPath.push(\"http://localhost:9000/static/\" + dados.filename)\n        })\n        const GuardaDados = await ArmazenaDadosBD(imagensPath)\n        console.log(GuardaDados)\n    }\n\n\n    async function ArmazenaDadosBD(recebeLocationImagens) {//com os nomes dos arquivos no node, reuni todos os dados do carro e junta com o nome das imagens\n        const classBuscaBD = new BuscaBD()\n        var imagensLocation = JSON.stringify(recebeLocationImagens);//transforma a array de localização das imagens em uma array String\n        console.log(imagensLocation)\n        var reuniDados = formulario\n        reuniDados = { ...reuniDados, imagensPath: imagensLocation }\n        console.log(reuniDados)\n        const EnviaDadosBD = await classBuscaBD.BuscaBDPostDados(reuniDados)\n        return EnviaDadosBD\n    }\n\n\n    //########################  FUNÇÕES PARA EDITAR //########################\n\n    //buscar as infos e preencher o formulário\n    async function BuscarBDDados() {\n        const classBuscaBD = new BuscaBD()\n        const resultado = await classBuscaBD.BuscaBDGetDados(buscaParaAlterar)\n        PreencheFormulario(resultado)\n    }\n\n    function PreencheFormulario(resultado) {\n\n        SetFormulario({\n            valor: resultado.data[0].valor,\n            marca: resultado.data[0].marca,\n            ano: resultado.data[0].ano,\n            modelo: resultado.data[0].modelo,\n            motor: resultado.data[0].motor,\n            kilometro: resultado.data[0].kilometro,\n            combustivel: resultado.data[0].combustivel,\n            porta: resultado.data[0].porta,\n            cambio: resultado.data[0].cambio,\n            carroceria: resultado.data[0].carroceria,\n            finalPlaca: resultado.data[0].finalPlaca,\n            sobre: resultado.data[0].sobre,\n            aceitaTroca: resultado.data[0].aceitaTroca,\n            IPVA: resultado.data[0].IPVA,\n            licenciado: resultado.data[0].licenciado,\n            airbag: resultado.data[0].airbag,\n            alarme: resultado.data[0].alarme,\n            cdplayer: resultado.data[0].cdplayer,\n            dvdplayer: resultado.data[0].advdplayerno,\n            gps: resultado.data[0].gps,\n            radio: resultado.data[0].radio,\n            radioTocaFita: resultado.data[0].radioTocaFita,\n            computadorBordo: resultado.data[0].computadorBordo,\n            controleTracao: resultado.data[0].controleTracao,\n            controleVelocidade: resultado.data[0].controleVelocidade,\n            desembacadorTraseiro: resultado.data[0].desembacadorTraseiroano,\n            limpadorTraseiro: resultado.data[0].limpadorTraseiro,\n            arCondicionado: resultado.data[0].arCondicionado,\n            arQuente: resultado.data[0].arQuente,\n            freioAbs: resultado.data[0].freioAbs,\n            retrovisoresEletricos: resultado.data[0].retrovisoresEletricos,\n            retrovisoresFotocromicos: resultado.data[0].retrovisoresFotocromicos,\n            rodaLigaLeve: resultado.data[0].rodaLigaLeve,\n            sensorChuva: resultado.data[0].sensorChuva,\n            sensorEstacionamento: resultado.data[0].sensorEstacionamento,\n            tetoSolar: resultado.data[0].sensorEstacionamento,\n            travasEletricas: resultado.data[0].travasEletricas,\n            vidrosEletricos: resultado.data[0].vidrosEletricos,\n            direcaoHidraulica: resultado.data[0].direcaoHidraulica,\n            volanteAltura: resultado.data[0].volanteAltura,\n            bancoCouro: resultado.data[0].bancoCouro,\n            encostoCabecaTraseiro: resultado.data[0].encostoCabecaTraseiroano,\n            bancosFrenteAquecimento: resultado.data[0].bancosFrenteAquecimento,\n            tracaoQuatroRodas: resultado.data[0].tracaoQuatroRodas,\n            protetorCacamba: resultado.data[0].protetorCacamba,\n            farolXenonio: resultado.data[0].farolXenonio,\n            imagens: resultado.data[0].imagens\n        })\n    }\n\n    //manda os dados para o update do anúncio\n    function AtualizarDadosBd() {\n\n    }\n\n\n    return (\n        <>\n            {props.tipoFormulario === \"alterarAnuncio\" &&\n                <div className=\"publicacao-div-search\">\n                    <TextField\n                        onBlur={(recebe) => { setBuscaParaAlterar(recebe.target.value) }}\n                        style={{ margin: \"0 1% 3% 10%\", }}\n                        label=\"BUSCAR POR ID\"\n                        id=\"outlined-size-small\"\n                        defaultValue=\"\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        color=\"success\"\n                    />\n                    <Button\n                        onClick={() => { BuscarBDDados() }}\n                        style={{ margin: \"0\", backgroundColor: \"white\" }}\n                        variant=\"contained\"\n                        color=\"inherit\"\n                        className={classes.button}\n                        startIcon={<i class=\"fas fa-search fa-2x\"></i>}\n                    >\n                        BUSCAR ANÚNCIO\n                        </Button>\n                </div>\n            }\n\n\n\n            <div className=\"formulario-div-formualario\"\n                onSubmit={(event) => {\n                    event.preventDefault()\n                    UploadImagens(event)\n\n                }}>\n\n                {/* <form className=\"paineladministrativo-div-formualario-form\" method=\"post\" enctype=\"multipart/form-data\"> */}\n                <form className=\"formulario-div-formualario-form\" >\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, valor: envia.target.value }\n                            })\n                        }}\n                        value={formulario.valor}\n                        id=\"Valor\"\n                        label=\"Valor automóvel\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">Ano</InputLabel>\n\n                        <Select\n\n                            native\n                            value={formulario.ano}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, ano: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            {render}\n                        </Select>\n\n                    </FormControl>\n\n\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, marca: envia.target.value }\n                            })\n                        }}\n                        value={formulario.marca}\n                        id=\"marca\"\n                        label=\"MARCA - ex: FIAT\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, modelo: envia.target.value }\n                            })\n                        }}\n                        value={formulario.modelo}\n                        id=\"modelo\"\n                        label=\"MODELO - ex: UP\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, motor: envia.target.value }\n                            })\n                        }}\n                        value={formulario.motor}\n                        id=\"motor\"\n                        label=\"MOTOR - ex: 2.0 TSI 16V\"\n                        variant=\"outlined\"\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <TextField style={{ marginLeft: '20px', width: '15%' }}\n\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, kilometro: envia.target.value }\n                            })\n                        }}\n                        id=\"filled-number\"\n                        label=\"KM\"\n                        type=\"number\"\n                        value={formulario.kilometro}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                    />\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">COMBUSTÍVEL</InputLabel>\n                        <Select\n                            native\n                            value={formulario.combustivel}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, combustivel: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >GASOLINA</option>\n                            <option >ALCOOL</option>\n                            <option >FLEX</option>\n                            <option >DIESEL</option>\n                            <option >ELÉTRICO</option>\n                            <option >HÍBRIDO</option>\n\n                        </Select>\n                    </FormControl>\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">PORTAS</InputLabel>\n                        <Select\n                            native\n                            value={formulario.porta}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, porta: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >1</option>\n                            <option >2</option>\n                            <option >3</option>\n                            <option >4</option>\n                            <option >5</option>\n                            <option >6</option>\n                        </Select>\n                    </FormControl>\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">CÂMBIO</InputLabel>\n                        <Select\n                            native\n                            value={formulario.cambio}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, cambio: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >MANUAL</option>\n                            <option >AUTOMÁTICO</option>\n                            <option >SEMIAUTOMÁTICO</option>\n                            <option >AUTOMATIZADO</option>\n\n                        </Select>\n                    </FormControl>\n\n                    <hr className=\"formulario-div-formualario-form-hr\" />\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">CARROCERIAS</InputLabel>\n                        <Select\n                            native\n                            value={formulario.carroceria}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, carroceria: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >HATCH</option>\n                            <option >SEDÃ</option>\n                            <option >PERUA/STATION-WAGONS (SW)</option>\n                            <option >COUPÉ</option>\n                            <option >CONVERSÍVEL</option>\n                            <option >MINIVAN</option>\n                            <option >LIMOUSINE</option>\n                            <option >SUV / UTILITÁRIO ESPORTIVO</option>\n                            <option >JIPE/</option>\n                            <option >PICAPE/</option>\n\n                        </Select>\n                    </FormControl>\n\n                    <FormControl style={{ marginLeft: '20px', width: '15%' }}>\n                        <InputLabel shrink htmlFor=\"age-native-simple\">FINAL PLACA</InputLabel>\n                        <Select\n                            native\n                            value={formulario.finalPlaca}\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, finalPlaca: envia.target.value }\n                                })\n                            }}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option >0</option>\n                            <option >1</option>\n                            <option >2</option>\n                            <option >3</option>\n                            <option >4</option>\n                            <option >5</option>\n                            <option >6</option>\n                            <option >7</option>\n                            <option >8</option>\n                            <option >9</option>\n\n                        </Select>\n                    </FormControl>\n                    <hr className=\"formulario-div-formualario-form-hr\" />\n\n                    <TextField style={{ marginLeft: '20px', width: '90%' }}\n                        value={formulario.sobre}\n                        onChange={(envia) => {\n                            SetFormulario(prevState => {\n                                return { ...prevState, sobre: envia.target.value }\n                            })\n                        }}\n\n                        id=\"sobre\"\n                        label=\"SOBRE O VEÍCULO \"\n                        variant=\"outlined\"\n                        multiline\n\n                        className=\"FormularioCadastro_inputs\"\n                        margin=\"dense\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <hr className=\"formulario-div-formualario-form-hr\" />\n\n                    <h4>OPCIONAIS:</h4>\n                    <div className=\"formulario-div-formualario-form-div-grid\">\n\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.airbag}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, airbag: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"AIRBAG\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.alarme}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, alarme: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"ALARME\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.cdplayer}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, cdplayer: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"CD PLAYER\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.dvdplayer}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, dvdplayer: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"DVD PLAYER\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.gps}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, gps: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"GPS\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.radio}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, radio: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"RÁDIO\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.radioTocaFita}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, radioTocaFita: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"RÁDIO/TOCA FITA\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.computadorBordo}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, computadorBordo: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"Computador de bordo\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.controleTracao}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, controleTracao: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"Controle de tração\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.ontroleVelocidade}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, controleVelocidade: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Controle de velocidade\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.desembacadorTraseiro}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, desembacadorTraseiro: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Desembaçador traseiro\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.limpadorTraseiro}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, limpadorTraseiro: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Limpador traseiro\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.farolXenonio}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, farolXenonio: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Farol de xenônio\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.arCondicionado}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, arCondicionado: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Ar condicionado\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.arQuente}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, arQuente: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Ar quente\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.freioAbs}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, freioAbs: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Freios ABS\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.retrovisoresEletricos}\n                                control={<Switch color=\"primary\" o\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, retrovisoresEletricos: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Retrovisores elétricos\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.retrovisoresFotocromicos}\n                                control={<Switch color=\"primary\"\n\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, retrovisoresFotocromicos: envia.target.checked }\n                                        })\n                                    }}\n                                />}\n                                label=\"Retrovisores fotocrômicos\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.rodaLigaLeve}\n                                control={<Switch color=\"primary\"\n\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, rodaLigaLeve: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Rodas de liga leve\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.sensorChuva}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, sensorChuva: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Sensor de chuva\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.sensorEstacionamento}\n                                control={<Switch color=\"primary\"\n\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, sensorEstacionamento: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Sensor de estacionamento\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.tetoSolar}\n                                control={<Switch color=\"primary\"\n\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, tetoSolar: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Teto solar\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.travasEletricas}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, travasEletricas: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Travas elétricas\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.vidrosEletricos}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, vidrosEletricos: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Vidros elétricos\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.direcaoHidraulica}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, direcaoHidraulica: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Direção hidráulica\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.volanteAltura}\n                                control={<Switch color=\"primary\"\n\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, volanteAltura: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Volante regulagem altura\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.bancoCouro}\n                                control={<Switch color=\"primary\" o\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, bancoCouro: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Bancos em couro\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.encostoCabecaTraseiro}\n                                control={<Switch color=\"primary\"\n\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, encostoCabecaTraseiro: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Encosto de cabeça traseiro\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.bancosFrenteAquecimento}\n                                control={<Switch color=\"primary\"\n\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, bancosFrenteAquecimento: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Bancos frente aquecimento\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.tracaoQuatroRodas}\n                                control={<Switch color=\"primary\"\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, tracaoQuatroRodas: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Tração 4x4\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n\n                        <div>\n                            <FormControlLabel\n                                checked={formulario.protetorCacamba}\n                                control={<Switch color=\"primary\"\n\n                                    onChange={(envia) => {\n                                        SetFormulario(prevState => {\n                                            return { ...prevState, protetorCacamba: envia.target.checked }\n                                        })\n                                    }}\n\n                                />}\n                                label=\"Protetor de caçamba\"\n                                labelPlacement=\"start\"\n                            />\n                        </div>\n\n\n                    </div>\n\n                    <hr className=\"formulario-div-formualario-form-hr\" />\n\n                    <FormControlLabel style={{ marginRight: \"20px\" }}\n                        checked={formulario.aceitaTroca}\n                        value=\"start\"\n                        control={<Switch color=\"primary\"\n\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, aceitaTroca: envia.target.checked }\n                                })\n                            }}\n\n                        />}\n                        label=\"Aceita troca\"\n                        labelPlacement=\"start\"\n                    />\n\n                    <FormControlLabel style={{ marginRight: \"20px\" }}\n                        checked={formulario.IPVA}\n                        value=\"start\"\n                        control={<Switch color=\"primary\"\n\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, IPVA: envia.target.checked }\n                                })\n                            }}\n\n                        />}\n                        label=\"IPVA pago\"\n                        labelPlacement=\"start\"\n                    />\n\n                    <FormControlLabel\n                        checked={formulario.licenciado}\n                        value=\"start\"\n                        control={<Switch color=\"primary\"\n\n                            onChange={(envia) => {\n                                SetFormulario(prevState => {\n                                    return { ...prevState, licenciado: envia.target.checked }\n                                })\n                            }}\n\n                        />}\n                        label=\"Licenciado\"\n                        labelPlacement=\"start\"\n                    />\n\n                    <hr className=\"formulario-div-formualario-form-hr\" />\n                    {props.tipoFormulario === \"criarAnuncio\" &&\n                        <label className=\"formulario-div-formualario-form-label-imagem\">\n                            Selecione as imagens:\n                    <input type=\"file\" name=\"file\" multiple=\"multiple\"\n\n                                onChange={(envia) => {\n                                    SetFormulario(prevState => {\n                                        return { ...prevState, imagensPath: envia.target.files }\n                                    })\n                                }}\n\n                            ></input>\n                        </label>\n                    }\n                    <div className=\"formulario-div-formualario-form-botao-publicar\"\n                        style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\" }}\n                    >\n\n                        {props.tipoFormulario === \"criarAnuncio\" &&\n                            < Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                className={classes.button}\n                                startIcon={<SaveIcon />}\n                            >\n                                PUBLICAR\n                        </Button>\n                        }\n                        {props.tipoFormulario === \"alterarAnuncio\" &&\n                            <Button\n                                onClick={() => { AtualizarDadosBd() }}\n                                variant=\"contained\"\n                                color=\"default\"\n                                className={classes.button}\n                                startIcon={<CloudUploadIcon />}\n                            >\n                                ALTERAR ANÚNCIO\n                        </Button>\n                        }\n\n                        {props.tipoFormulario === \"deletarAnuncio\" &&\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.button}\n                                startIcon={<DeleteIcon />}\n                            >\n                                REMOVER ANÚNCIO\n                        </Button>\n                        }\n                    </div>\n\n                </form>\n            </div >\n\n        </>\n    )\n\n\n}","/home/marco/Documents/project_react/template-carros/client/src/components/fetchBackEnd/api.js",[],["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":18,"column":7,"nodeType":"45","messageId":"46","endLine":18,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":122,"column":60,"nodeType":"49","messageId":"50","endLine":122,"endColumn":62},{"ruleId":"39","replacedBy":"51"},{"ruleId":"41","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["53"],["54"],"no-global-assign","no-unsafe-negation"]