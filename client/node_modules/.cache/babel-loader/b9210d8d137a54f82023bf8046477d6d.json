{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painel/modalProfile.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport BuscaBD from \"../../fetchBackEnd/api\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 500,\n    height: 250,\n    overflow: \"scroll\",\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function SimpleModal(props) {\n  _s();\n\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n  const [dados, setDados] = useState();\n  const [mensagem, setMensagem] = useState();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  async function ChangePassword() {}\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"20px\"\n      },\n      children: \"Digite seu user acount abaixo. Ser\\xE1 enviado um email com novas credenciais.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Primeiro Nome *\",\n      autocomplete: \"nome\",\n      id: \"nome\",\n      name: \"email\",\n      type: \"text\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Ultimo Nome *\",\n      autocomplete: \"nome\",\n      id: \"nome\",\n      name: \"nome\",\n      type: \"text\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      disabled: true,\n      label: \"E-mail *\",\n      autocomplete: \"email\",\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"10px\"\n      },\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        ChangePassword();\n      },\n      style: {\n        left: \"40%\",\n        top: \"12%\"\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      children: \"ENVIAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        display: \"inline\",\n        color: \"rgb(63, 60, 60)\",\n        fontFamily: \"'Lora', serif\",\n        fontSize: \"23px\"\n      },\n      children: [window.localStorage.getItem(\"primeiroNome\"), \" \", window.localStorage.getItem(\"ultimoNome\"), /*#__PURE__*/_jsxDEV(\"i\", {\n        style: {\n          cursor: \"pointer\",\n          marginLeft: \"10px\",\n          color: \"rgb(100, 100, 100)\"\n        },\n        class: \"fas fa-user fa-2x\",\n        onClick: () => {\n          handleOpen();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 208\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimpleModal, \"xuOxGr5a/VVLJ3bdt3gwvXXg5LU=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleModal\");","map":{"version":3,"sources":["/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/painel/modalProfile.js"],"names":["React","useState","makeStyles","Modal","Button","TextField","BuscaBD","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","height","overflow","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","props","classes","modalStyle","open","setOpen","dados","setDados","mensagem","setMensagem","handleOpen","handleClose","ChangePassword","body","fontSize","margin","button","display","color","fontFamily","window","localStorage","getItem","cursor","marginLeft"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport BuscaBD from \"../../fetchBackEnd/api\"\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 500,\n        height: 250,\n        overflow: \"scroll\",\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport default function SimpleModal(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n\n    const [dados, setDados] = useState()\n    const [mensagem, setMensagem] = useState()\n\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    async function ChangePassword() {\n\n    }\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n\n            <p\n                style={{ fontSize: \"20px\" }}\n            >Digite seu user acount abaixo. Será enviado um email com novas credenciais.</p>\n\n            <TextField label=\"Primeiro Nome *\" autocomplete=\"nome\" id=\"nome\" name=\"email\" type=\"text\" variant=\"outlined\"\n\n            />\n            <TextField label=\"Ultimo Nome *\" autocomplete=\"nome\" id=\"nome\" name=\"nome\" type=\"text\" variant=\"outlined\"\n\n            />\n            <TextField disabled label=\"E-mail *\" autocomplete=\"email\" id=\"email\" name=\"email\" type=\"email\" variant=\"outlined\"\n\n            />\n\n            <p style={{ margin: \"10px\" }}>{mensagem}</p>\n\n            <Button\n\n                onClick={() => {\n                    ChangePassword()\n\n                }}\n                style={{ left: \"40%\", top: \"12%\" }}\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n\n            >ENVIAR\n            </Button>\n        </div>\n    );\n\n    return (\n        <div>\n            {/* <button type=\"button\" onClick={handleOpen}>\n                Esqueci minha senha\n      </button> */}\n            <p style={{ display: \"inline\", color: \"rgb(63, 60, 60)\", fontFamily: \"'Lora', serif\", fontSize: \"23px\" }}>{window.localStorage.getItem(\"primeiroNome\")} {window.localStorage.getItem(\"ultimoNome\")}<i style={{ cursor: \"pointer\", marginLeft: \"10px\", color: \"rgb(100, 100, 100)\" }} class=\"fas fa-user fa-2x\" onClick={() => { handleOpen() }} ></i></p>\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n\n            </Modal>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}