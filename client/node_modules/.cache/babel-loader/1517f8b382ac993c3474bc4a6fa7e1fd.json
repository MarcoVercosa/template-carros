{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/listaAnuncios.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport BuscaBD from \"../../fetchBackEnd/api\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'marca',\n  label: 'Marca',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'modelo',\n  label: 'Modelo',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'valor',\n  label: 'Valor',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}, {\n  id: 'ano',\n  label: 'Ano',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}, {\n  id: 'motor',\n  label: 'Motor',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}, {\n  id: 'km',\n  label: 'KM',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\n\nconst rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 45\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StickyHeadTable, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["/home/marco/Documents/project_react/template-carros/client/src/components/painelAdministrativo/listaAnuncios/listaAnuncios.jsx"],"names":["React","BuscaBD","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","length"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport BuscaBD from \"../../fetchBackEnd/api\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n\n    {\n        id: 'marca',\n        label: 'Marca',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n        id: 'modelo',\n        label: 'Modelo',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n        id: 'valor',\n        label: 'Valor',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2),\n    },\n    {\n        id: 'ano',\n        label: 'Ano',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2),\n    },\n    {\n        id: 'motor',\n        label: 'Motor',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2),\n    },\n    {\n        id: 'km',\n        label: 'KM',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2),\n    },\n];\n\nfunction createData(name, code, population, size) {\n    const density = population / size;\n    return { name, code, population, size, density };\n}\n\nconst rows = [\n\n\n    createData('India', 'IN', 1324171354, 3287263),\n    createData('China', 'CN', 1403500365, 9596961),\n    createData('Italy', 'IT', 60483973, 301340),\n    createData('United States', 'US', 327167434, 9833520),\n    createData('Canada', 'CA', 37602103, 9984670),\n    createData('Australia', 'AU', 25475400, 7692024),\n    createData('Germany', 'DE', 83019200, 357578),\n    createData('Ireland', 'IE', 4857000, 70273),\n    createData('Mexico', 'MX', 126577691, 1972550),\n    createData('Japan', 'JP', 126317000, 377973),\n    createData('France', 'FR', 67022000, 640679),\n    createData('United Kingdom', 'GB', 67545757, 242495),\n    createData('Russia', 'RU', 146793744, 17098246),\n    createData('Nigeria', 'NG', 200962417, 923768),\n    createData('Brazil', 'BR', 210147125, 8515767),\n];\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\n\nexport default function StickyHeadTable() {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}